# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi hidden-definitions

# typed: autogenerated

# wrong constant name <DeclBuilderForProcs>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <DeclBuilderForProcs>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <Class:<DeclBuilderForProcs>>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <Magic>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <Magic>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <Class:<Magic>>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <PackageSpecRegistry>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <PackageSpecRegistry>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <RESERVED_0>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <RESERVED_1>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <RESERVED_2>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <RESERVED_3>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <RESERVED_4>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <RESERVED_5>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <RESERVED_6>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <RESERVED_7>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <TypeAlias>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <TypeAlias>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <root>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <Class:<root>>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <todo sym>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <todo sym>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <top>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <top>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Abbrev
# uninitialized constant Abbrev
# uninitialized constant ActiveSupport::ArrayInquirer::DEFAULT_INDENT
# uninitialized constant ActiveSupport::ArrayInquirer::Elem
# wrong constant name any?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name add_filter
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name add_silencer
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name filter
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remove_filters!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remove_silencers!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name benchmark
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Entry>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:NullCoder>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:NullStore>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Store>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Strategy>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name bytesize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dup_value!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name expired?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name expires_at
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name expires_at=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mismatched?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name value
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cache_path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name supports_cache_versioning?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:DupCoder>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name prune
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pruning?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name synchronize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dump
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name load
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name supports_cache_versioning?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dump
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name load
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name supports_cache_versioning?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cleanup
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name clear
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name decrement
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name delete
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name delete_matched
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name delete_multi
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name exist?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fetch
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fetch_multi
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name increment
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name logger
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name logger=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mute
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name read
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name read_multi
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name silence
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name silence!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name silence?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name write
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name write_multi
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name logger
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name logger=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:LocalCache>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cleanup
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name clear
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name decrement
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name delete_matched
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name increment
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name middleware
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name with_local_cache
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name expand_cache_key
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name lookup_store
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name config
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name config
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name configure
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant ActiveSupport::Configurable::Configuration::DEFAULT_INDENT
# wrong constant name compile_methods!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name compile_methods!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:FormatError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Behavior>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:DeprecatedConstantAccessor>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:DeprecatedConstantProxy>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:DeprecatedInstanceVariableProxy>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:DeprecatedObjectProxy>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:DeprecationProxy>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Disallowed>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:MethodWrapper>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant ActiveSupport::Deprecation::RAILS_GEM_ROOT
# uninitialized constant ActiveSupport::Deprecation::VERSION
# wrong constant name deprecation_horizon
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name deprecation_horizon=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name behavior
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name behavior=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name debug
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name debug=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name disallowed_behavior
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name disallowed_behavior=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name included
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant ActiveSupport::Deprecation::DeprecatedConstantProxy::DELEGATION_RESERVED_KEYWORDS
# Did you mean?  ActiveSupport::Deprecation::DeprecatedConstantProxy::DelegationError
# uninitialized constant ActiveSupport::Deprecation::DeprecatedConstantProxy::DELEGATION_RESERVED_METHOD_NAMES
# Did you mean?  ActiveSupport::Deprecation::DeprecatedConstantProxy::DELEGATION_RESERVED_KEYWORDS
# uninitialized constant ActiveSupport::Deprecation::DeprecatedConstantProxy::RUBY_RESERVED_KEYWORDS
# Did you mean?  RUBY_RELEASE_DATE
# wrong constant name hash
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name instance_methods
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name respond_to?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name new
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name new
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name disallowed_warnings
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name disallowed_warnings=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name include
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name method_added
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name deprecation_warning
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name warn
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name included
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name deprecate_methods
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name allow
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name deprecation_warning
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gem_name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gem_name=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name silence
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name silenced
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name silenced=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name warn
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# undefined singleton method `instance' for `ActiveSupport::Deprecation'
# 
#           method = klass.singleton_method(name)
#                         ^^^^^^^^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name allow
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name behavior
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name behavior=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name debug
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name debug=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name deprecate_methods
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name deprecation_horizon
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name deprecation_horizon=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name deprecation_warning
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name disallowed_behavior
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name disallowed_behavior=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name disallowed_warnings
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name disallowed_warnings=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gem_name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gem_name=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name instance
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name silence
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name silenced
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name silenced=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name warn
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name hash_digest_class
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name hash_digest_class=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name hexdigest
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:ISO8601Parser>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:ISO8601Serializer>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:ParsingError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mode
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mode=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parts
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scanner
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name sign
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name sign=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name serialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant ActiveSupport::EnvironmentInquirer::BLANK_RE
# uninitialized constant ActiveSupport::EnvironmentInquirer::ENCODED_BLANKS
# wrong constant name development?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name production?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name test?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant ActiveSupport::ExecutionWrapper::CALLBACK_FILTER_TYPES
# wrong constant name <Class:CoreExt>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:CoreExtPrivate>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fork
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name after_fork
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name hook!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unregister
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Stream>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant ActiveSupport::Gzip::Stream::Elem
# uninitialized constant ActiveSupport::Gzip::Stream::VERSION
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name compress
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name decompress
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name generate_key
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name colorize_logging
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name colorize_logging=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name debug
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name error
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fatal
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name info
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name logger
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unknown
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name warn
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name colorize_logging
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name colorize_logging=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name flush_all!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name log_subscribers
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name logger
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name logger=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:InvalidMessage>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:NullSerializer>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:NullVerifier>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name encrypt_and_sign
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dump
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name load
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name generate
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name verify
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default_cipher
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name key_len
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name use_authenticated_message_encryption
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name use_authenticated_message_encryption=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:InvalidSignature>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name generate
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name valid_message?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name verify
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Encryptor>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Verifier>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name rotate
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name decrypt_and_verify
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name verified
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <=>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name =~
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name acts_like_string?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name compose
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name decompose
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name grapheme_length
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name limit
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name match?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name method_missing
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name reverse
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name reverse!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name slice!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name split
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tidy_bytes
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tidy_bytes!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name titlecase
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name titleize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_str
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name wrapped_string
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name compose
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name decompose
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default_normalization_form
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default_normalization_form=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tidy_bytes
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Event>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Fanout>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:InstrumentationRegistry>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Instrumenter>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <<
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name allocations
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name children
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cpu_time
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name duration
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name end
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name finish!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name idle_time
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parent_of?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name payload
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name payload=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name start!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name time
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name transaction_id
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Subscribers>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant ActiveSupport::Notifications::Fanout::VERSION
# wrong constant name finish
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name listeners_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name listening?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name lock
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name locked?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name publish
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name start
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name subscribe
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name synchronize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name try_lock
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unlock
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unsubscribe
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name wait
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:AllMessages>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:EventObject>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Evented>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Matcher>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:MonotonicTimed>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Timed>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name finish
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name matches?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name publish
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name start
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name subscribed_to?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unsubscribe!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name finish
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name matches?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pattern
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name publish
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name start
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name subscribed_to?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unsubscribe!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ===
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name exclusions
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pattern
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unsubscribe!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name wrap
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name new
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name wrap_all
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name instrumenter_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name finish
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name finish_with_state
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name id
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name instrument
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name start
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name instrument
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name instrumenter
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name monotonic_subscribe
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name notifier
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name notifier=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name publish
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name subscribe
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name subscribed
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unsubscribe
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name execute
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name namespace
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name namespace=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name namespace?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name number
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name opts
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name validate_float
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name validate_float=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name validate_float?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name convert
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name namespace
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name namespace=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name namespace?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name validate_float
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name validate_float=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name validate_float?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant ActiveSupport::NumberHelper::NumberToCurrencyConverter::DEFAULTS
# wrong constant name convert
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant ActiveSupport::NumberHelper::NumberToDelimitedConverter::DEFAULTS
# wrong constant name convert
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant ActiveSupport::NumberHelper::NumberToHumanConverter::DEFAULTS
# wrong constant name convert
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant ActiveSupport::NumberHelper::NumberToHumanSizeConverter::DEFAULTS
# wrong constant name convert
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant ActiveSupport::NumberHelper::NumberToPercentageConverter::DEFAULTS
# wrong constant name convert
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant ActiveSupport::NumberHelper::NumberToPhoneConverter::DEFAULTS
# wrong constant name convert
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant ActiveSupport::NumberHelper::NumberToRoundedConverter::DEFAULTS
# wrong constant name convert
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name digit_count
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name round
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant ActiveSupport::OrderedHash::DEFAULT_INDENT
# wrong constant name encode_with
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name nested_under_indifferent_access
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name reject
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name select
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_yaml_type
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant ActiveSupport::OrderedOptions::DEFAULT_INDENT
# wrong constant name []
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name []=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _get
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name method_missing
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name raise
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant ActiveSupport::Reloader::CALLBACK_FILTER_TYPES
# uninitialized constant ActiveSupport::Reloader::Null
# wrong constant name _class_unload_callbacks
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _prepare_callbacks
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _run_class_unload_callbacks
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _run_prepare_callbacks
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name class_unload!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name executor
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name executor=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name executor?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name release_unload_lock!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name require_unload_lock!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _class_unload_callbacks
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _class_unload_callbacks=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _prepare_callbacks
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _prepare_callbacks=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name after_class_unload
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name before_class_unload
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name executor
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name executor=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name executor?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name prepare!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name reload!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name reloaded!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_prepare
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name handler_for_rescue
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name rescue_with_handler
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name handler_for_rescue
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name rescue_with_handler
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name %
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name *
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name +
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <<
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant ActiveSupport::SafeBuffer::BLANK_RE
# uninitialized constant ActiveSupport::SafeBuffer::ENCODED_BLANKS
# wrong constant name <Class:SafeConcatError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name []
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name []=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name capitalize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name capitalize!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name chomp
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name chomp!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name chop
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name chop!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name clone_empty
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name concat
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name delete
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name delete!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name delete_prefix
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name delete_prefix!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name delete_suffix
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name delete_suffix!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name downcase
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name downcase!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name encode_with
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gsub
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gsub!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name insert
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name lstrip
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name lstrip!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name next
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name next!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name prepend
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name replace
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name reverse
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name reverse!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name rstrip
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name rstrip!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name safe_concat
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scrub
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scrub!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name slice
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name slice!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name squeeze
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name squeeze!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name strip
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name strip!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name sub
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name sub!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name succ
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name succ!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name swapcase
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name swapcase!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tr
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tr!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tr_s
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tr_s!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unicode_normalize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unicode_normalize!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name upcase
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name upcase!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:InvalidMatch>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name secure_compare!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fixed_length_secure_compare
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name secure_compare
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant ActiveSupport::StringInquirer::BLANK_RE
# uninitialized constant ActiveSupport::StringInquirer::ENCODED_BLANKS
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name finish
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name patterns
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name start
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name attach_to
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name detach_from
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name method_added
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name subscribers
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Formatter>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:LocalTagStorage>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name clear_tags!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name flush
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pop_tags
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name push_tags
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tagged
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name call
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name clear_tags!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name current_tags
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pop_tags
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name push_tags
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tagged
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tags_text
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name current_tags
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name current_tags=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name extended
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name new
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant ActiveSupport::TestCase::CALLBACK_FILTER_TYPES
# uninitialized constant ActiveSupport::TestCase::E
# uninitialized constant ActiveSupport::TestCase::PASSTHROUGH_EXCEPTIONS
# uninitialized constant ActiveSupport::TestCase::SIGNALS
# Did you mean?  Signal
# uninitialized constant ActiveSupport::TestCase::TEARDOWN_METHODS
# uninitialized constant ActiveSupport::TestCase::UNDEFINED
# uninitialized constant ActiveSupport::TestCase::UNTRACKED
# wrong constant name __callbacks
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name __callbacks?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _run_setup_callbacks
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _run_teardown_callbacks
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _setup_callbacks
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _teardown_callbacks
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name assert_no_match
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name assert_not_empty
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name assert_not_equal
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name assert_not_in_delta
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name assert_not_in_epsilon
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name assert_not_includes
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name assert_not_instance_of
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name assert_not_kind_of
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name assert_not_nil
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name assert_not_operator
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name assert_not_predicate
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name assert_not_respond_to
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name assert_not_same
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name assert_raise
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name file_fixture_path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name file_fixture_path?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name method_name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name __callbacks
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name __callbacks=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name __callbacks?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _setup_callbacks
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _setup_callbacks=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _teardown_callbacks
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _teardown_callbacks=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name file_fixture_path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name file_fixture_path=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name file_fixture_path?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parallelize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parallelize_setup
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parallelize_teardown
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name test_order=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name assert_changes
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name assert_difference
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name assert_no_changes
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name assert_no_difference
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name assert_not
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name assert_nothing_raised
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name assert_deprecated
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name assert_not_deprecated
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name collect_deprecations
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name file_fixture
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name after_teardown
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name before_setup
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name prepended
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name before_setup
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tagged_logger=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name after_teardown
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name freeze_time
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name travel
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name travel_back
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name travel_to
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unfreeze_time
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name connect_internal
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Array::DEFAULT_INDENT
# wrong constant name deconstruct
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name intersect?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name shelljoin
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_h
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name try_convert
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:BasicObject>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant BigDecimal::EXABYTE
# Did you mean?  BigDecimal::MEGABYTE
#                BigDecimal::TERABYTE
# uninitialized constant BigDecimal::GIGABYTE
# uninitialized constant BigDecimal::KILOBYTE
# uninitialized constant BigDecimal::MEGABYTE
# Did you mean?  BigDecimal::EXABYTE
# uninitialized constant BigDecimal::PETABYTE
# Did you mean?  BigDecimal::TERABYTE
# uninitialized constant BigDecimal::TERABYTE
# Did you mean?  BigDecimal::EXABYTE
#                BigDecimal::PETABYTE
# wrong constant name clone
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name n_significant_digits
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name precision
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name precision_scale
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scale
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_digits
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name interpret_loosely
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant BinData::SanitizedParameters::DEFAULT_INDENT
# wrong constant name clone
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name irb
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name status_code
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name jruby_30?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name jruby_31?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name jruby_3?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name maglev_30?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name maglev_31?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name maglev_3?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mingw_30?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mingw_31?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mingw_3?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mri_30?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mri_31?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mri_3?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mswin64_30?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mswin64_31?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mswin64_3?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mswin_30?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mswin_31?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mswin_3?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name on_30?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name on_31?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name on_3?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name rbx_30?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name rbx_31?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name rbx_3?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ruby_30?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ruby_31?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ruby_3?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name truffleruby_30?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name truffleruby_31?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name truffleruby_3?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name x64_mingw_30?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name x64_mingw_31?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name x64_mingw_3?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Definition::GENERICS
# Did you mean?  Bundler::Definition::GENERIC_CACHE
# uninitialized constant Bundler::Definition::GENERIC_CACHE
# Did you mean?  Bundler::Definition::GENERICS
# wrong constant name dependencies_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name locked_dependencies
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name most_specific_locked_platform
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name requested_dependencies
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name resolve_only_locally!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name no_lock
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name no_lock=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name clone
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name get_proxy
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Dependency::TYPES
# wrong constant name branch
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name expanded_platforms
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name git
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name github
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ref
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name sha1
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check_primary_source_safety
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name environment
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name report
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name write
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name replace_with_backup
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name env_to_hash
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name from_env
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Base>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:CompactIndex>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Dependency>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Downloader>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Index>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:TooManyRequestsError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fetch_spec
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fetchers
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name http_proxy
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name specs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name specs_with_retry
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name uri
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name use_api
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name user_agent
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name api_fetcher?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name available?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name display_uri
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name downloader
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fetch_uri
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remote
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remote_uri
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:ClientFetcher>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name available?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name specs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name specs_for_names
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Fetcher::CompactIndex::ClientFetcher::Elem
# wrong constant name call
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fetcher
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fetcher=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ui
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ui=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name []
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name keyword_init?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name members
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name compact_index_request
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dependency_api_uri
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dependency_specs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name get_formatted_specs_and_deps
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name specs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unmarshalled_dep_gems
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name connection
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fetch
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name redirect_limit
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name request
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name specs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name api_timeout
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name api_timeout=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name disable_endpoint
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name disable_endpoint=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name max_retries
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name max_retries=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name redirect_limit
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name redirect_limit=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name link
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cp_lr
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name link_entry
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name allowed_push_host
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name already_tagged?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name base
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name build_checksum
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name build_gem
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name built_gem_path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name clean?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name committed?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name current_branch
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default_remote
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gem_command
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gem_key
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gem_push?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gem_push_host
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gemspec
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name git_push
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name guard_clean
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name install
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name install_gem
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name rubygem_push
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name sh
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name sh_with_input
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name sh_with_status
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name spec_path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tag_prefix=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tag_version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name version_tag
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gemspec
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name install_tasks
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name instance
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name instance=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tag_prefix=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name specificity_score
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name local_platform
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name same_deps
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name same_specificity
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name level
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name level=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name locked_specs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name major?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name minor?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name prerelease_specified
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name prerelease_specified=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name sort_versions
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name strict
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name strict=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unlock_gems
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:GraphVizClient>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name edge_options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name groups
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name node_options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name output_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name output_format
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name relations
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name viz
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name g
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name run
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name inject
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remove
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name inject
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remove
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::LazySpecification::GENERICS
# Did you mean?  Bundler::LazySpecification::GENERIC_CACHE
# uninitialized constant Bundler::LazySpecification::GENERIC_CACHE
# Did you mean?  Bundler::LazySpecification::GENERICS
# wrong constant name eql?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name platform_string
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::LazySpecification::Identifier
# uninitialized constant Bundler::LazySpecification::Identifier
# wrong constant name bundled_with
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Molinillo::Compatibility
# Did you mean?  Comparable
# uninitialized constant Bundler::Molinillo::Compatibility
# Did you mean?  Comparable
# wrong constant name dependencies_equal?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parent_folder
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name permission_type
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ==
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name add_dependency_names
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name app_cache_dirname
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name app_cache_path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cache
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cached!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name can_lock?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dependency_names
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dependency_names=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name double_check_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name eql?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fetch_gemspec_files
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gem_install_dir
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name hash
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name identifier
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name include?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name install
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name install_path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name installed?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name local!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name options_to_lock
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name post_install
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remote!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name root
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name spec_names
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name specs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_lock
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_s
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unlock!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unmet_deps
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name uri
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name uri_hash
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:CommandConflict>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:SourceConflict>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name installed_plugins
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name plugin_commands
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unregister_plugin
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Git>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Rubygems>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name install
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name install_definition
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Plugin::Installer::Git::DEFAULT_GLOB
# wrong constant name generate_bin
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Plugin::Installer::Rubygems::API_REQUEST_LIMIT
# Did you mean?  Bundler::Plugin::Installer::Rubygems::API_REQUEST_SIZE
# uninitialized constant Bundler::Plugin::Installer::Rubygems::API_REQUEST_SIZE
# Did you mean?  Bundler::Plugin::Installer::Rubygems::API_REQUEST_LIMIT
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name list
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name save_plugin
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name uninstall
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name lock
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::RemoteSpecification::GENERICS
# Did you mean?  Bundler::RemoteSpecification::GENERIC_CACHE
# uninitialized constant Bundler::RemoteSpecification::GENERIC_CACHE
# Did you mean?  Bundler::RemoteSpecification::GENERICS
# wrong constant name required_rubygems_version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Resolver::GENERICS
# Did you mean?  Bundler::Resolver::GENERIC_CACHE
# uninitialized constant Bundler::Resolver::GENERIC_CACHE
# Did you mean?  Bundler::Resolver::GENERICS
# wrong constant name results_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name source_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name activated_platforms
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name activated_platforms=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name sorted_activated_platforms
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name create_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name attempt
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name attempts
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name current_run
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name current_run=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name name=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name total_runs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name total_runs=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name attempts
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default_attempts
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default_retries
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name add_default_gems_to
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name add_to_load_path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name all_specs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name backport_ext_builder_monitor
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name correct_for_windows_path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default_stubs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name find_bundler
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name find_name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gem_remote_fetcher
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name load_env_plugins
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name plain_specs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name plain_specs=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name stub_rubygems
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name supports_bundler_trampolining?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::RubygemsIntegration::AlmostModern
# uninitialized constant Bundler::RubygemsIntegration::AlmostModern
# uninitialized constant Bundler::RubygemsIntegration::Ancient
# uninitialized constant Bundler::RubygemsIntegration::Ancient
# uninitialized constant Bundler::RubygemsIntegration::Future
# uninitialized constant Bundler::RubygemsIntegration::Future
# uninitialized constant Bundler::RubygemsIntegration::Legacy
# uninitialized constant Bundler::RubygemsIntegration::Legacy
# uninitialized constant Bundler::RubygemsIntegration::Modern
# Did you mean?  Module
# uninitialized constant Bundler::RubygemsIntegration::Modern
# Did you mean?  Module
# uninitialized constant Bundler::RubygemsIntegration::MoreFuture
# uninitialized constant Bundler::RubygemsIntegration::MoreFuture
# uninitialized constant Bundler::RubygemsIntegration::MoreModern
# uninitialized constant Bundler::RubygemsIntegration::MoreModern
# uninitialized constant Bundler::RubygemsIntegration::Transitional
# uninitialized constant Bundler::RubygemsIntegration::Transitional
# wrong constant name install_locked_bundler_and_restart_with_it_if_needed
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name restart_with_locked_bundler_if_needed
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name update_bundler_and_restart_with_it_if_needed
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Mirror>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Mirrors>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Validator>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name processor_count
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ==
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fallback_timeout
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fallback_timeout=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name uri
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name uri=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name valid?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name validate!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name keyword_init?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Rule>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name description
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fail!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name k
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name validate!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name validate!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name key_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:RubygemsAggregate>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name add_dependency_names
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cached!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name identifier
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name local!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name local_only!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remote!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name spec_names
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Source::Git::DEFAULT_GLOB
# wrong constant name glob
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name local?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default_cache_path_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dependency_api_available?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name multiple_remotes?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name no_remotes?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remote_names
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name identifier
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name source_map
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name sources
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name specs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name add_global_rubygems_remote
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name aggregate_global_source?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name expired_sources?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name global_path_source
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name implicit_global_source?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name local_only!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name lock_other_sources
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name lock_rubygems_sources
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name merged_gem_lockfile_sections!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name merged_gem_lockfile_sections?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name non_default_explicit_sources
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name non_global_rubygems_sources
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name all_requirements
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dependencies
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name direct_requirements
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name locked_requirements
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name locked_specs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pinned_spec_names
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name sources
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name missing_specs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::StubSpecification::GENERICS
# Did you mean?  Bundler::StubSpecification::GENERIC_CACHE
# uninitialized constant Bundler::StubSpecification::GENERIC_CACHE
# Did you mean?  Bundler::StubSpecification::GENERICS
# wrong constant name extensions
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gem_build_complete_path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name manually_installed?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Cyclic>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each_strongly_connected_component
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each_strongly_connected_component_from
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name strongly_connected_components
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tsort
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tsort_each
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tsort_each_child
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tsort_each_node
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each_strongly_connected_component
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each_strongly_connected_component_from
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name strongly_connected_components
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tsort
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tsort_each
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Actions>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:AmbiguousCommandError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Argument>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Arguments>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Base>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Command>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:CoreExt>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:DynamicCommand>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Error>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Group>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:HiddenCommand>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Invocation>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:InvocationError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:LineEditor>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:MalformattedArgumentError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:NestedContext>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:NoKwargSpellChecker>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Option>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Options>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:RequiredArgumentMissingError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Thor::SHELL_DELEGATED_METHODS
# wrong constant name <Class:Sandbox>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Shell>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:UndefinedCommandError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:UnknownArgumentError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Util>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name help
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:CapturableERB>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:ClassMethods>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:CreateFile>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:CreateLink>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Directory>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:EmptyDirectory>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:InjectIntoFile>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _cleanup_options_and_set
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _shared_configuration
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name action
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name add_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name add_link
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name append_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name append_to_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name apply
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name behavior
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name behavior=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name chmod
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name comment_lines
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name copy_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name create_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name create_link
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name destination_root
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name destination_root=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name directory
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name empty_directory
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name find_in_source_paths
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name get
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gsub_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name in_root
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name inject_into_class
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name inject_into_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name inject_into_module
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name insert_into_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name inside
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name link_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name prepend_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name prepend_to_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name relative_to_original_destination_root
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remove_dir
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remove_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name run
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name run_ruby_script
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name source_paths
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name template
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name thor
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name uncomment_lines
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Thor::Actions::CapturableERB::Revision
# Did you mean?  Bundler::VERSION
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name add_runtime_options!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name source_paths
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name source_paths_for_search
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name source_root
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name data
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name force_on_collision?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name force_or_skip_or_conflict
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name identical?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name on_conflict_behavior
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name render
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name execute!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name file_level_lookup
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name files
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name source
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name base
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name config
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name convert_encoded_instructions
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name destination
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name destination=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name exists?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name given_destination
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name invoke!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name invoke_with_conflict_check
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name on_conflict_behavior
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name on_file_clash_behavior
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pretend?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name relative_destination
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name revoke!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name say_status
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name behavior
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name flag
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name replace!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name replacement
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name say_status
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name included
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name banner
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default_banner
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name description
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name enum
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name human_name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name required
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name required?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name show_default?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name type
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name usage
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name valid_type?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name validate!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remaining
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name split
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:ClassMethods>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name args
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name args=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name options=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parent_options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parent_options=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name all_commands
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name all_tasks
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name allow_incompatible_default_type!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name argument
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name arguments
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name attr_accessor
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name attr_reader
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name attr_writer
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name baseclass
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name basename
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name build_option
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name build_options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check_default_type
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check_default_type!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check_unknown_options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check_unknown_options!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check_unknown_options?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name class_option
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name class_options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name class_options_help
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name commands
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name create_command
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name create_task
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name disable_required_check?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dispatch
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name exit_on_failure?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name find_and_refresh_command
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name find_and_refresh_task
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name from_superclass
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name group
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name handle_argument_error
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name handle_no_command_error
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name handle_no_task_error
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name inherited
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize_added
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name is_thor_reserved_word?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name method_added
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name namespace
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name no_commands
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name no_commands?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name no_commands_context
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name no_tasks
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name print_options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name public_command
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name public_task
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remove_argument
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remove_class_option
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remove_command
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remove_task
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name start
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name stop_on_unknown_option?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name strict_args_position
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name strict_args_position!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name strict_args_position?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tasks
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name included
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name register_klass_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name shell
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name shell=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name subclass_files
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name subclasses
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name formatted_usage
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name handle_argument_error?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name handle_no_method_error?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name hidden?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name local_method?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name not_debugging?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name private_method?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name public_method?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name required_arguments_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name required_options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name run
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name sans_backtrace
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:HashWithIndifferentAccess>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Thor::CoreExt::HashWithIndifferentAccess::DEFAULT_INDENT
# uninitialized constant Bundler::Thor::CoreExt::HashWithIndifferentAccess::Elem
# uninitialized constant Bundler::Thor::CoreExt::HashWithIndifferentAccess::K
# uninitialized constant Bundler::Thor::CoreExt::HashWithIndifferentAccess::V
# wrong constant name []
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name []=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name convert_key
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name delete
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name except
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fetch
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name key?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name merge
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name merge!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name method_missing
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name replace
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name reverse_merge
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name reverse_merge!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name values_at
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Thor::DynamicCommand::FILE_REGEXP
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Thor::Group::SHELL_DELEGATED_METHODS
# wrong constant name _invoke_for_class_method
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name banner
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name desc
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name get_options_from_invocations
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name handle_argument_error
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name help
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name invocation_blocks
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name invocations
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name invoke
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name invoke_from_option
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name printable_commands
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name printable_tasks
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remove_invocation
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name self_command
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name self_task
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Thor::HiddenCommand::FILE_REGEXP
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:ClassMethods>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _parse_initialization_options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _retrieve_class_and_command
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _retrieve_class_and_task
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _shared_configuration
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name current_command_chain
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name invoke
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name invoke_all
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name invoke_command
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name invoke_task
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name invoke_with_padding
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name prepare_for_invocation
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name included
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Basic>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Readline>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name prompt
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name readline
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name available?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:PathCompletion>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name matches
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name best_available
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name readline
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name enter
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name entered?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name aliases
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name array?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name boolean?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dasherize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dasherized?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name group
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name hash?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name hide
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name lazy_default
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name numeric?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name repeatable
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name string?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name switch_name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name undasherize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name usage
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name validate_default_type!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Thor::Options::NUMERIC
# Did you mean?  Numeric
# wrong constant name assign_result!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check_unknown!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name current_is_switch?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name current_is_switch_formatted?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name normalize_switch
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse_boolean
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse_peek
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parsing_options?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name switch?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name switch_option
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unshift
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_switches
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Basic>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Color>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:HTML>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _shared_configuration
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ask
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name error
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name file_collision
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name no?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name print_in_columns
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name print_table
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name print_wrapped
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name say
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name say_error
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name say_status
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_color
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name shell
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name shell=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name terminal_width
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name with_padding
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name yes?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name answer_match
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name as_unicode
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ask
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ask_filtered
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ask_simply
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name base
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name base=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name can_display_colors?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dynamic_width
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dynamic_width_stty
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dynamic_width_tput
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name error
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name file_collision
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name file_collision_help
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name git_merge_tool
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name indent
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name is?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name lookup_color
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name merge
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name merge_tool
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mute
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mute?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name no?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name padding
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name padding=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name prepare_message
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name print_in_columns
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name print_table
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name print_wrapped
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name quiet?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name say
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name say_error
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name say_status
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_color
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name show_diff
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name stderr
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name stdout
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name terminal_width
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name truncate
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unix?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name yes?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Thor::Shell::Color::DEFAULT_TERMINAL_WIDTH
# wrong constant name are_colors_disabled?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name are_colors_supported?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name diff_lcs_loaded?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name output_diff_line
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_color
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Thor::Shell::HTML::DEFAULT_TERMINAL_WIDTH
# wrong constant name ask
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name diff_lcs_loaded?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name output_diff_line
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_color
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:SpellChecker>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name all_commands
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name command
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name corrections
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name error
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name spell_checker
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:SpellChecker>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name switches
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unknown
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name corrections
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name error
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name spell_checker
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name camel_case
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name escape_globs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name escape_html
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name find_by_namespace
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name find_class_and_command_by_namespace
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name find_class_and_task_by_namespace
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name globs_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name load_thorfile
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name namespace_from_thor_class
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name namespaces_in_content
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ruby_command
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name snake_case
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name thor_classes_in
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name thor_root
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name thor_root_glob
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name user_home
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name banner
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check_unknown_options!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name command_help
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default_command
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default_task
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name deprecation_warning
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name desc
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name disable_required_check
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name disable_required_check!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name disable_required_check?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dispatch
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dynamic_command_class
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name find_command_possibilities
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name find_task_possibilities
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name help
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name long_desc
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name map
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name method_option
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name method_options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name normalize_command_name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name normalize_task_name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name option
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name package_name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name printable_commands
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name printable_tasks
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name register
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name retrieve_command_name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name retrieve_task_name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name stop_on_unknown_option
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name stop_on_unknown_option!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name stop_on_unknown_option?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name subcommand
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name subcommand_classes
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name subcommand_help
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name subcommands
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name subtask
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name subtask_help
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name subtasks
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name task_help
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name add_color
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ask
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name confirm
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name debug
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name debug?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name error
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name info
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name level
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name level=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name no?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name quiet?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name shell=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name silence
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name trace
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unprinted_warnings
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name warn
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name yes?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:BadURIError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Error>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:FTP>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:File>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Generic>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:HTTP>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:HTTPS>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:InvalidComponentError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:InvalidURIError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:LDAP>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:LDAPS>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:MailTo>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:RFC2396_Parser>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:RFC2396_REGEXP>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:RFC3986_Parser>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Util>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::FTP::ABS_PATH
# uninitialized constant Bundler::URI::FTP::ABS_URI
# Did you mean?  Bundler::URI::FTP::ABS_URI_REF
# uninitialized constant Bundler::URI::FTP::ABS_URI_REF
# uninitialized constant Bundler::URI::FTP::DEFAULT_PARSER
# Did you mean?  Bundler::URI::FTP::DEFAULT_PORT
# uninitialized constant Bundler::URI::FTP::ESCAPED
# uninitialized constant Bundler::URI::FTP::FRAGMENT
# uninitialized constant Bundler::URI::FTP::HOST
# uninitialized constant Bundler::URI::FTP::OPAQUE
# uninitialized constant Bundler::URI::FTP::PORT
# uninitialized constant Bundler::URI::FTP::QUERY
# uninitialized constant Bundler::URI::FTP::REGISTRY
# Did you mean?  Bundler::Retry
# uninitialized constant Bundler::URI::FTP::REL_PATH
# uninitialized constant Bundler::URI::FTP::REL_URI
# Did you mean?  Bundler::URI::FTP::REL_URI_REF
# uninitialized constant Bundler::URI::FTP::REL_URI_REF
# uninitialized constant Bundler::URI::FTP::RFC3986_PARSER
# Did you mean?  Bundler::URI::FTP::RFC3986_Parser
#                Bundler::URI::RFC3986_Parser
#                Bundler::URI::FTP::RFC2396_Parser
#                Bundler::URI::RFC2396_Parser
# uninitialized constant Bundler::URI::FTP::SCHEME
# uninitialized constant Bundler::URI::FTP::TBLDECWWWCOMP_
# Did you mean?  Bundler::URI::FTP::TBLENCWWWCOMP_
#                Bundler::URI::TBLENCWWWCOMP_
# uninitialized constant Bundler::URI::FTP::TBLENCWWWCOMP_
# Did you mean?  Bundler::URI::FTP::TBLDECWWWCOMP_
#                Bundler::URI::TBLDECWWWCOMP_
# uninitialized constant Bundler::URI::FTP::UNSAFE
# uninitialized constant Bundler::URI::FTP::URI_REF
# uninitialized constant Bundler::URI::FTP::USERINFO
# uninitialized constant Bundler::URI::FTP::USE_REGISTRY
# uninitialized constant Bundler::URI::FTP::VERSION
# Did you mean?  Bundler::VersionRanges
# uninitialized constant Bundler::URI::FTP::VERSION_CODE
# Did you mean?  Bundler::VersionRanges
# uninitialized constant Bundler::URI::FTP::WEB_ENCODINGS_
# Did you mean?  Encoding
# wrong constant name set_typecode
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name typecode
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name typecode=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name new2
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::File::ABS_PATH
# uninitialized constant Bundler::URI::File::ABS_URI
# Did you mean?  Bundler::URI::File::ABS_URI_REF
# uninitialized constant Bundler::URI::File::ABS_URI_REF
# uninitialized constant Bundler::URI::File::DEFAULT_PARSER
# Did you mean?  Bundler::URI::File::DEFAULT_PORT
# uninitialized constant Bundler::URI::File::ESCAPED
# uninitialized constant Bundler::URI::File::FRAGMENT
# uninitialized constant Bundler::URI::File::HOST
# uninitialized constant Bundler::URI::File::OPAQUE
# uninitialized constant Bundler::URI::File::PORT
# uninitialized constant Bundler::URI::File::QUERY
# uninitialized constant Bundler::URI::File::REGISTRY
# Did you mean?  Bundler::Retry
# uninitialized constant Bundler::URI::File::REL_PATH
# uninitialized constant Bundler::URI::File::REL_URI
# Did you mean?  Bundler::URI::File::REL_URI_REF
# uninitialized constant Bundler::URI::File::REL_URI_REF
# uninitialized constant Bundler::URI::File::RFC3986_PARSER
# Did you mean?  Bundler::URI::File::RFC3986_Parser
#                Bundler::URI::RFC3986_Parser
#                Bundler::URI::File::RFC2396_Parser
#                Bundler::URI::RFC2396_Parser
# uninitialized constant Bundler::URI::File::SCHEME
# uninitialized constant Bundler::URI::File::TBLDECWWWCOMP_
# Did you mean?  Bundler::URI::File::TBLENCWWWCOMP_
#                Bundler::URI::TBLENCWWWCOMP_
# uninitialized constant Bundler::URI::File::TBLENCWWWCOMP_
# Did you mean?  Bundler::URI::File::TBLDECWWWCOMP_
#                Bundler::URI::TBLDECWWWCOMP_
# uninitialized constant Bundler::URI::File::UNSAFE
# uninitialized constant Bundler::URI::File::URI_REF
# uninitialized constant Bundler::URI::File::USERINFO
# uninitialized constant Bundler::URI::File::USE_REGISTRY
# uninitialized constant Bundler::URI::File::VERSION
# Did you mean?  Bundler::VersionRanges
# uninitialized constant Bundler::URI::File::VERSION_CODE
# Did you mean?  Bundler::VersionRanges
# uninitialized constant Bundler::URI::File::WEB_ENCODINGS_
# Did you mean?  Encoding
# wrong constant name check_password
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check_user
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check_userinfo
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_userinfo
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name +
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name -
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ==
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::Generic::ABS_PATH
# uninitialized constant Bundler::URI::Generic::ABS_URI
# Did you mean?  Bundler::URI::Generic::ABS_URI_REF
# uninitialized constant Bundler::URI::Generic::ABS_URI_REF
# uninitialized constant Bundler::URI::Generic::DEFAULT_PARSER
# Did you mean?  Bundler::URI::Generic::DEFAULT_PORT
# uninitialized constant Bundler::URI::Generic::ESCAPED
# uninitialized constant Bundler::URI::Generic::FRAGMENT
# uninitialized constant Bundler::URI::Generic::HOST
# uninitialized constant Bundler::URI::Generic::OPAQUE
# uninitialized constant Bundler::URI::Generic::PORT
# uninitialized constant Bundler::URI::Generic::QUERY
# uninitialized constant Bundler::URI::Generic::REGISTRY
# Did you mean?  Bundler::Retry
# uninitialized constant Bundler::URI::Generic::REL_PATH
# uninitialized constant Bundler::URI::Generic::REL_URI
# Did you mean?  Bundler::URI::Generic::REL_URI_REF
# uninitialized constant Bundler::URI::Generic::REL_URI_REF
# uninitialized constant Bundler::URI::Generic::RFC3986_PARSER
# Did you mean?  Bundler::URI::Generic::RFC3986_Parser
#                Bundler::URI::RFC3986_Parser
#                Bundler::URI::Generic::RFC2396_Parser
#                Bundler::URI::RFC2396_Parser
# uninitialized constant Bundler::URI::Generic::SCHEME
# uninitialized constant Bundler::URI::Generic::TBLDECWWWCOMP_
# Did you mean?  Bundler::URI::Generic::TBLENCWWWCOMP_
#                Bundler::URI::TBLENCWWWCOMP_
# uninitialized constant Bundler::URI::Generic::TBLENCWWWCOMP_
# Did you mean?  Bundler::URI::Generic::TBLDECWWWCOMP_
#                Bundler::URI::TBLDECWWWCOMP_
# uninitialized constant Bundler::URI::Generic::UNSAFE
# uninitialized constant Bundler::URI::Generic::URI_REF
# uninitialized constant Bundler::URI::Generic::USERINFO
# uninitialized constant Bundler::URI::Generic::VERSION
# Did you mean?  Bundler::VersionRanges
# uninitialized constant Bundler::URI::Generic::VERSION_CODE
# Did you mean?  Bundler::VersionRanges
# uninitialized constant Bundler::URI::Generic::WEB_ENCODINGS_
# Did you mean?  Encoding
# wrong constant name absolute
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name absolute?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name coerce
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name component
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name component_ary
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default_port
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name eql?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name find_proxy
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fragment
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fragment=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name hierarchical?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name host
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name host=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name hostname
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name hostname=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name merge
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name merge!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name normalize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name normalize!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name opaque
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name opaque=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parser
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name password
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name password=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name path=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name port
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name port=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name query
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name query=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name registry
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name registry=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name relative?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name route_from
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name route_to
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scheme
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scheme=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name select
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_host
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_opaque
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_password
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_port
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_registry
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_scheme
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_user
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_userinfo
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name user
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name user=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name userinfo
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name userinfo=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name build
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name build2
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name component
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default_port
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name use_proxy?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name use_registry
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTP::ABS_PATH
# uninitialized constant Bundler::URI::HTTP::ABS_URI
# Did you mean?  Bundler::URI::HTTP::ABS_URI_REF
# uninitialized constant Bundler::URI::HTTP::ABS_URI_REF
# uninitialized constant Bundler::URI::HTTP::DEFAULT_PARSER
# Did you mean?  Bundler::URI::HTTP::DEFAULT_PORT
# uninitialized constant Bundler::URI::HTTP::ESCAPED
# uninitialized constant Bundler::URI::HTTP::FRAGMENT
# uninitialized constant Bundler::URI::HTTP::HOST
# uninitialized constant Bundler::URI::HTTP::OPAQUE
# uninitialized constant Bundler::URI::HTTP::PORT
# uninitialized constant Bundler::URI::HTTP::QUERY
# uninitialized constant Bundler::URI::HTTP::REGISTRY
# Did you mean?  Bundler::Retry
# uninitialized constant Bundler::URI::HTTP::REL_PATH
# uninitialized constant Bundler::URI::HTTP::REL_URI
# Did you mean?  Bundler::URI::HTTP::REL_URI_REF
# uninitialized constant Bundler::URI::HTTP::REL_URI_REF
# uninitialized constant Bundler::URI::HTTP::RFC3986_PARSER
# Did you mean?  Bundler::URI::HTTP::RFC3986_Parser
#                Bundler::URI::RFC3986_Parser
#                Bundler::URI::HTTP::RFC2396_Parser
#                Bundler::URI::RFC2396_Parser
# uninitialized constant Bundler::URI::HTTP::SCHEME
# uninitialized constant Bundler::URI::HTTP::TBLDECWWWCOMP_
# Did you mean?  Bundler::URI::HTTP::TBLENCWWWCOMP_
#                Bundler::URI::TBLENCWWWCOMP_
# uninitialized constant Bundler::URI::HTTP::TBLENCWWWCOMP_
# Did you mean?  Bundler::URI::HTTP::TBLDECWWWCOMP_
#                Bundler::URI::TBLDECWWWCOMP_
# uninitialized constant Bundler::URI::HTTP::UNSAFE
# uninitialized constant Bundler::URI::HTTP::URI_REF
# uninitialized constant Bundler::URI::HTTP::USERINFO
# uninitialized constant Bundler::URI::HTTP::USE_REGISTRY
# uninitialized constant Bundler::URI::HTTP::VERSION
# Did you mean?  Bundler::VersionRanges
# uninitialized constant Bundler::URI::HTTP::VERSION_CODE
# Did you mean?  Bundler::VersionRanges
# uninitialized constant Bundler::URI::HTTP::WEB_ENCODINGS_
# Did you mean?  Encoding
# wrong constant name request_uri
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTPS::ABS_PATH
# uninitialized constant Bundler::URI::HTTPS::ABS_URI
# Did you mean?  Bundler::URI::HTTPS::ABS_URI_REF
# uninitialized constant Bundler::URI::HTTPS::ABS_URI_REF
# uninitialized constant Bundler::URI::HTTPS::COMPONENT
# Did you mean?  Complex
# uninitialized constant Bundler::URI::HTTPS::DEFAULT_PARSER
# Did you mean?  Bundler::URI::HTTPS::DEFAULT_PORT
# uninitialized constant Bundler::URI::HTTPS::ESCAPED
# uninitialized constant Bundler::URI::HTTPS::FRAGMENT
# uninitialized constant Bundler::URI::HTTPS::HOST
# uninitialized constant Bundler::URI::HTTPS::OPAQUE
# uninitialized constant Bundler::URI::HTTPS::PORT
# uninitialized constant Bundler::URI::HTTPS::QUERY
# uninitialized constant Bundler::URI::HTTPS::REGISTRY
# Did you mean?  Bundler::Retry
# uninitialized constant Bundler::URI::HTTPS::REL_PATH
# uninitialized constant Bundler::URI::HTTPS::REL_URI
# Did you mean?  Bundler::URI::HTTPS::REL_URI_REF
# uninitialized constant Bundler::URI::HTTPS::REL_URI_REF
# uninitialized constant Bundler::URI::HTTPS::RFC3986_PARSER
# Did you mean?  Bundler::URI::HTTPS::RFC3986_Parser
#                Bundler::URI::RFC3986_Parser
#                Bundler::URI::HTTPS::RFC2396_Parser
#                Bundler::URI::RFC2396_Parser
# uninitialized constant Bundler::URI::HTTPS::SCHEME
# uninitialized constant Bundler::URI::HTTPS::TBLDECWWWCOMP_
# Did you mean?  Bundler::URI::HTTPS::TBLENCWWWCOMP_
#                Bundler::URI::TBLENCWWWCOMP_
# uninitialized constant Bundler::URI::HTTPS::TBLENCWWWCOMP_
# Did you mean?  Bundler::URI::HTTPS::TBLDECWWWCOMP_
#                Bundler::URI::TBLDECWWWCOMP_
# uninitialized constant Bundler::URI::HTTPS::UNSAFE
# uninitialized constant Bundler::URI::HTTPS::URI_REF
# uninitialized constant Bundler::URI::HTTPS::USERINFO
# uninitialized constant Bundler::URI::HTTPS::USE_REGISTRY
# uninitialized constant Bundler::URI::HTTPS::VERSION
# Did you mean?  Bundler::VersionRanges
# uninitialized constant Bundler::URI::HTTPS::VERSION_CODE
# Did you mean?  Bundler::VersionRanges
# uninitialized constant Bundler::URI::HTTPS::WEB_ENCODINGS_
# Did you mean?  Encoding
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAP::ABS_PATH
# uninitialized constant Bundler::URI::LDAP::ABS_URI
# Did you mean?  Bundler::URI::LDAP::ABS_URI_REF
# uninitialized constant Bundler::URI::LDAP::ABS_URI_REF
# uninitialized constant Bundler::URI::LDAP::DEFAULT_PARSER
# Did you mean?  Bundler::URI::LDAP::DEFAULT_PORT
# uninitialized constant Bundler::URI::LDAP::ESCAPED
# uninitialized constant Bundler::URI::LDAP::FRAGMENT
# uninitialized constant Bundler::URI::LDAP::HOST
# uninitialized constant Bundler::URI::LDAP::OPAQUE
# uninitialized constant Bundler::URI::LDAP::PORT
# uninitialized constant Bundler::URI::LDAP::QUERY
# uninitialized constant Bundler::URI::LDAP::REGISTRY
# Did you mean?  Bundler::Retry
# uninitialized constant Bundler::URI::LDAP::REL_PATH
# uninitialized constant Bundler::URI::LDAP::REL_URI
# Did you mean?  Bundler::URI::LDAP::REL_URI_REF
# uninitialized constant Bundler::URI::LDAP::REL_URI_REF
# uninitialized constant Bundler::URI::LDAP::RFC3986_PARSER
# Did you mean?  Bundler::URI::LDAP::RFC3986_Parser
#                Bundler::URI::RFC3986_Parser
#                Bundler::URI::LDAP::RFC2396_Parser
#                Bundler::URI::RFC2396_Parser
# uninitialized constant Bundler::URI::LDAP::SCHEME
# uninitialized constant Bundler::URI::LDAP::TBLDECWWWCOMP_
# Did you mean?  Bundler::URI::LDAP::TBLENCWWWCOMP_
#                Bundler::URI::TBLENCWWWCOMP_
# uninitialized constant Bundler::URI::LDAP::TBLENCWWWCOMP_
# Did you mean?  Bundler::URI::LDAP::TBLDECWWWCOMP_
#                Bundler::URI::TBLDECWWWCOMP_
# uninitialized constant Bundler::URI::LDAP::UNSAFE
# uninitialized constant Bundler::URI::LDAP::URI_REF
# uninitialized constant Bundler::URI::LDAP::USERINFO
# uninitialized constant Bundler::URI::LDAP::USE_REGISTRY
# uninitialized constant Bundler::URI::LDAP::VERSION
# Did you mean?  Bundler::VersionRanges
# uninitialized constant Bundler::URI::LDAP::VERSION_CODE
# Did you mean?  Bundler::VersionRanges
# uninitialized constant Bundler::URI::LDAP::WEB_ENCODINGS_
# Did you mean?  Encoding
# wrong constant name attributes
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name attributes=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dn
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dn=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name extensions
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name extensions=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name filter
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name filter=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scope
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scope=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_attributes
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_dn
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_extensions
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_filter
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_scope
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAPS::ABS_PATH
# uninitialized constant Bundler::URI::LDAPS::ABS_URI
# Did you mean?  Bundler::URI::LDAPS::ABS_URI_REF
# uninitialized constant Bundler::URI::LDAPS::ABS_URI_REF
# uninitialized constant Bundler::URI::LDAPS::COMPONENT
# Did you mean?  Complex
# uninitialized constant Bundler::URI::LDAPS::DEFAULT_PARSER
# Did you mean?  Bundler::URI::LDAPS::DEFAULT_PORT
# uninitialized constant Bundler::URI::LDAPS::ESCAPED
# uninitialized constant Bundler::URI::LDAPS::FRAGMENT
# uninitialized constant Bundler::URI::LDAPS::HOST
# uninitialized constant Bundler::URI::LDAPS::OPAQUE
# uninitialized constant Bundler::URI::LDAPS::PORT
# uninitialized constant Bundler::URI::LDAPS::QUERY
# uninitialized constant Bundler::URI::LDAPS::REGISTRY
# Did you mean?  Bundler::Retry
# uninitialized constant Bundler::URI::LDAPS::REL_PATH
# uninitialized constant Bundler::URI::LDAPS::REL_URI
# Did you mean?  Bundler::URI::LDAPS::REL_URI_REF
# uninitialized constant Bundler::URI::LDAPS::REL_URI_REF
# uninitialized constant Bundler::URI::LDAPS::RFC3986_PARSER
# Did you mean?  Bundler::URI::LDAPS::RFC3986_Parser
#                Bundler::URI::RFC3986_Parser
#                Bundler::URI::LDAPS::RFC2396_Parser
#                Bundler::URI::RFC2396_Parser
# uninitialized constant Bundler::URI::LDAPS::SCHEME
# uninitialized constant Bundler::URI::LDAPS::SCOPE
# Did you mean?  Bundler::URI::LDAPS::SCOPE_ONE
# uninitialized constant Bundler::URI::LDAPS::SCOPE_BASE
# Did you mean?  Bundler::URI::LDAPS::SCOPE_ONE
# uninitialized constant Bundler::URI::LDAPS::SCOPE_ONE
# Did you mean?  Bundler::URI::LDAPS::SCOPE_SUB
#                Bundler::URI::LDAPS::SCOPE_BASE
# uninitialized constant Bundler::URI::LDAPS::SCOPE_SUB
# Did you mean?  Bundler::URI::LDAPS::SCOPE_ONE
# uninitialized constant Bundler::URI::LDAPS::TBLDECWWWCOMP_
# Did you mean?  Bundler::URI::LDAPS::TBLENCWWWCOMP_
#                Bundler::URI::TBLENCWWWCOMP_
# uninitialized constant Bundler::URI::LDAPS::TBLENCWWWCOMP_
# Did you mean?  Bundler::URI::LDAPS::TBLDECWWWCOMP_
#                Bundler::URI::TBLDECWWWCOMP_
# uninitialized constant Bundler::URI::LDAPS::UNSAFE
# uninitialized constant Bundler::URI::LDAPS::URI_REF
# uninitialized constant Bundler::URI::LDAPS::USERINFO
# uninitialized constant Bundler::URI::LDAPS::USE_REGISTRY
# uninitialized constant Bundler::URI::LDAPS::VERSION
# Did you mean?  Bundler::VersionRanges
# uninitialized constant Bundler::URI::LDAPS::VERSION_CODE
# Did you mean?  Bundler::VersionRanges
# uninitialized constant Bundler::URI::LDAPS::WEB_ENCODINGS_
# Did you mean?  Encoding
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::MailTo::ABS_PATH
# uninitialized constant Bundler::URI::MailTo::ABS_URI
# Did you mean?  Bundler::URI::MailTo::ABS_URI_REF
# uninitialized constant Bundler::URI::MailTo::ABS_URI_REF
# uninitialized constant Bundler::URI::MailTo::DEFAULT_PARSER
# Did you mean?  Bundler::URI::MailTo::DEFAULT_PORT
# uninitialized constant Bundler::URI::MailTo::ESCAPED
# uninitialized constant Bundler::URI::MailTo::FRAGMENT
# uninitialized constant Bundler::URI::MailTo::HOST
# uninitialized constant Bundler::URI::MailTo::OPAQUE
# uninitialized constant Bundler::URI::MailTo::PORT
# uninitialized constant Bundler::URI::MailTo::QUERY
# uninitialized constant Bundler::URI::MailTo::REGISTRY
# Did you mean?  Bundler::Retry
# uninitialized constant Bundler::URI::MailTo::REL_PATH
# uninitialized constant Bundler::URI::MailTo::REL_URI
# Did you mean?  Bundler::URI::MailTo::REL_URI_REF
# uninitialized constant Bundler::URI::MailTo::REL_URI_REF
# uninitialized constant Bundler::URI::MailTo::RFC3986_PARSER
# Did you mean?  Bundler::URI::MailTo::RFC3986_Parser
#                Bundler::URI::RFC3986_Parser
#                Bundler::URI::MailTo::RFC2396_Parser
#                Bundler::URI::RFC2396_Parser
# uninitialized constant Bundler::URI::MailTo::SCHEME
# uninitialized constant Bundler::URI::MailTo::TBLDECWWWCOMP_
# Did you mean?  Bundler::URI::MailTo::TBLENCWWWCOMP_
#                Bundler::URI::TBLENCWWWCOMP_
# uninitialized constant Bundler::URI::MailTo::TBLENCWWWCOMP_
# Did you mean?  Bundler::URI::MailTo::TBLDECWWWCOMP_
#                Bundler::URI::TBLDECWWWCOMP_
# uninitialized constant Bundler::URI::MailTo::UNSAFE
# uninitialized constant Bundler::URI::MailTo::URI_REF
# uninitialized constant Bundler::URI::MailTo::USERINFO
# uninitialized constant Bundler::URI::MailTo::USE_REGISTRY
# uninitialized constant Bundler::URI::MailTo::VERSION
# Did you mean?  Bundler::VersionRanges
# uninitialized constant Bundler::URI::MailTo::VERSION_CODE
# Did you mean?  Bundler::VersionRanges
# uninitialized constant Bundler::URI::MailTo::WEB_ENCODINGS_
# Did you mean?  Encoding
# wrong constant name headers
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name headers=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_headers
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_to
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_mailtext
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_rfc822text
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name escape
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name extract
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name join
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name make_regexp
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pattern
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name regexp
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name split
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unescape
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:PATTERN>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name join
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name regexp
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name split
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name make_components_hash
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name decode_www_form
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name decode_www_form_component
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name encode_www_form
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name encode_www_form_component
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name extract
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name get_encoding
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name join
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name regexp
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scheme_list
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name split
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:NEq>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:ReqR>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::VersionRanges::NEq::Elem
# wrong constant name version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name version=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name []
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name keyword_init?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name members
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <=>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::VersionRanges::ReqR::Elem
# wrong constant name <Class:Endpoint>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cover?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name empty?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name left
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name left=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name right
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name right=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name single?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <=>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::VersionRanges::ReqR::Endpoint::Elem
# wrong constant name inclusive
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name inclusive=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name version=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name []
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name keyword_init?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name members
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name []
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name keyword_init?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name members
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name empty?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name for_many
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name configure_gem_home_and_path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name most_specific_locked_platform?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name original_exec
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name original_system
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name preferred_gemfile_name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name reset_settings_and_root!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name self_manager
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unbundled_env
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unbundled_exec
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unbundled_system
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:HtmlExtension>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant CGI::TABLE_FOR_ESCAPE_HTML__
# wrong constant name a
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name base
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name blockquote
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name caption
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name checkbox
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name checkbox_group
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name file_field
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name form
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name hidden
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name html
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name image_button
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name img
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name multipart_form
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name password_field
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name popup_menu
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name radio_button
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name radio_group
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name reset
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scrolling_list
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name submit
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name text_field
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name textarea
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant CMath
# uninitialized constant CMath
# uninitialized constant CSV
# uninitialized constant CSV
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Class::DELEGATION_RESERVED_KEYWORDS
# Did you mean?  Class::DelegationError
# uninitialized constant Class::DELEGATION_RESERVED_METHOD_NAMES
# Did you mean?  Class::DELEGATION_RESERVED_KEYWORDS
# uninitialized constant Class::RUBY_RESERVED_KEYWORDS
# Did you mean?  RUBY_RELEASE_DATE
# wrong constant name json_creatable?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# CodeRay::Encoders could not load plugin "default_options": cannot load such file -- /usr/local/Homebrew/Library/Taps/j5pu/homebrew-tap/.bundle/ruby/3.1.0/gems/coderay-1.1.3/lib/coderay/encoders/default_options.rb
# uninitialized constant Complex::EXABYTE
# Did you mean?  Complex::MEGABYTE
#                Complex::TERABYTE
# uninitialized constant Complex::GIGABYTE
# uninitialized constant Complex::KILOBYTE
# uninitialized constant Complex::MEGABYTE
# Did you mean?  Complex::EXABYTE
# uninitialized constant Complex::PETABYTE
# Did you mean?  Complex::TERABYTE
# uninitialized constant Complex::TERABYTE
# Did you mean?  Complex::EXABYTE
#                Complex::PETABYTE
# wrong constant name to_d
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Concurrent::AbstractExecutorService::DEBUG
# uninitialized constant Concurrent::AbstractExecutorService::ERROR
# Did you mean?  Concurrent::Error
#                IOError
#                Errno
# uninitialized constant Concurrent::AbstractExecutorService::FATAL
# uninitialized constant Concurrent::AbstractExecutorService::INFO
# Did you mean?  TZInfo
# uninitialized constant Concurrent::AbstractExecutorService::UNKNOWN
# uninitialized constant Concurrent::AbstractExecutorService::WARN
# Did you mean?  Warning
# uninitialized constant Concurrent::RubyThreadPoolExecutor::DEBUG
# uninitialized constant Concurrent::RubyThreadPoolExecutor::ERROR
# Did you mean?  Concurrent::Error
#                IOError
#                Errno
# uninitialized constant Concurrent::RubyThreadPoolExecutor::FALLBACK_POLICIES
# uninitialized constant Concurrent::RubyThreadPoolExecutor::FATAL
# uninitialized constant Concurrent::RubyThreadPoolExecutor::INFO
# Did you mean?  TZInfo
# uninitialized constant Concurrent::RubyThreadPoolExecutor::UNKNOWN
# uninitialized constant Concurrent::RubyThreadPoolExecutor::WARN
# Did you mean?  Warning
# uninitialized constant DEBUG
# uninitialized constant ERROR
# Did you mean?  IOError
#                Errno
# uninitialized constant FATAL
# uninitialized constant INFO
# Did you mean?  TZInfo
# uninitialized constant UNKNOWN
# uninitialized constant VERSION
# uninitialized constant WARN
# Did you mean?  Warning
# uninitialized constant VERSION
# uninitialized constant Concurrent::TimerTask::DEBUG
# uninitialized constant Concurrent::TimerTask::ERROR
# Did you mean?  Concurrent::Error
#                IOError
#                Errno
# uninitialized constant Concurrent::TimerTask::FALLBACK_POLICIES
# uninitialized constant Concurrent::TimerTask::FATAL
# uninitialized constant Concurrent::TimerTask::INFO
# Did you mean?  TZInfo
# uninitialized constant Concurrent::TimerTask::UNKNOWN
# uninitialized constant Concurrent::TimerTask::WARN
# Did you mean?  Warning
# uninitialized constant Continuation
# uninitialized constant Continuation
# uninitialized constant Coverage
# uninitialized constant Coverage
# uninitialized constant DBM
# uninitialized constant DBM
# uninitialized constant DBMError
# uninitialized constant DBMError
# uninitialized constant Data
# Did you mean?  Date
# uninitialized constant Data
# Did you mean?  Date
# uninitialized constant Date::DAYS_INTO_WEEK
# uninitialized constant Date::WEEKEND_DAYS
# wrong constant name acts_like_date?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name infinite?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Date::Infinity::EXABYTE
# Did you mean?  Date::Infinity::MEGABYTE
#                Date::Infinity::TERABYTE
# uninitialized constant Date::Infinity::GIGABYTE
# uninitialized constant Date::Infinity::KILOBYTE
# uninitialized constant Date::Infinity::MEGABYTE
# Did you mean?  Date::Infinity::EXABYTE
# uninitialized constant Date::Infinity::PETABYTE
# Did you mean?  Date::Infinity::TERABYTE
# uninitialized constant Date::Infinity::TERABYTE
# Did you mean?  Date::Infinity::EXABYTE
#                Date::Infinity::PETABYTE
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name new
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name class_name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name class_names
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name corrections
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scopes
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name corrections
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name original_message
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name spell_checker
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_s
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name message_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name message_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name distance
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name distance
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name corrections
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name distance
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name min3
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name corrections
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name method_name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name method_names
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name names_to_exclude
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name receiver
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name corrections
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name corrections
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name corrections
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name requireables
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name augment
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name correct
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dictionary
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dictionary_without_leaves
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dimensions
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name find_leaves
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name plausible_dimensions
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name possible_paths
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name separator
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tree_depth
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name corrections
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cvar_names
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ivar_names
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name lvar_names
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name method_names
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name correct_error
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name formatter
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name formatter=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name spell_checkers
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name children
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each_child
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name exists?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant ELFTools::Constants::DF_1_CONFALT
# Did you mean?  ELFTools::Constants::DF_1_NOW
# uninitialized constant ELFTools::Constants::DF_1_DIRECT
# Did you mean?  ELFTools::Constants::DF_1_NODIRECT
# uninitialized constant ELFTools::Constants::DF_1_DISPRELDNE
# Did you mean?  ELFTools::Constants::DF_1_DISPRELPND
# uninitialized constant ELFTools::Constants::DF_1_DISPRELPND
# Did you mean?  ELFTools::Constants::DF_1_DISPRELDNE
# uninitialized constant ELFTools::Constants::DF_1_EDITED
# Did you mean?  ELFTools::Constants::DF_1_DIRECT
# uninitialized constant ELFTools::Constants::DF_1_ENDFILTEE
# Did you mean?  ELFTools::Constants::DF_1_EDITED
# uninitialized constant ELFTools::Constants::DF_1_GLOBAL
# Did you mean?  ELFTools::Constants::DF_1_NOW
# uninitialized constant ELFTools::Constants::DF_1_GLOBAUDIT
# Did you mean?  ELFTools::Constants::DF_1_GLOBAL
# uninitialized constant ELFTools::Constants::DF_1_GROUP
# Did you mean?  ELFTools::Constants::DF_1_NOW
# uninitialized constant ELFTools::Constants::DF_1_IGNMULDEF
# Did you mean?  ELFTools::Constants::DF_1_NOHDR
# uninitialized constant ELFTools::Constants::DF_1_INITFIRST
# Did you mean?  ELFTools::Constants::DF_1_NOHDR
# uninitialized constant ELFTools::Constants::DF_1_INTERPOSE
# Did you mean?  ELFTools::Constants::DF_1_NOW
# uninitialized constant ELFTools::Constants::DF_1_LOADFLTR
# Did you mean?  ELFTools::Constants::DF_1_NOW
# uninitialized constant ELFTools::Constants::DF_1_NODEFLIB
# Did you mean?  ELFTools::Constants::DF_1_NORELOC
#                ELFTools::Constants::DF_1_NODELETE
# uninitialized constant ELFTools::Constants::DF_1_NODELETE
# Did you mean?  ELFTools::Constants::DF_1_NORELOC
#                ELFTools::Constants::DF_1_NODIRECT
#                ELFTools::Constants::DF_1_NODEFLIB
# uninitialized constant ELFTools::Constants::DF_1_NODIRECT
# Did you mean?  ELFTools::Constants::DF_1_DIRECT
#                ELFTools::Constants::DF_1_NODELETE
# uninitialized constant ELFTools::Constants::DF_1_NODUMP
# Did you mean?  ELFTools::Constants::DF_1_NOW
# uninitialized constant ELFTools::Constants::DF_1_NOHDR
# Did you mean?  ELFTools::Constants::DF_1_NOW
# uninitialized constant ELFTools::Constants::DF_1_NOKSYMS
# Did you mean?  ELFTools::Constants::DF_1_NOW
# uninitialized constant ELFTools::Constants::DF_1_NOOPEN
# Did you mean?  ELFTools::Constants::DF_1_NOW
# uninitialized constant ELFTools::Constants::DF_1_NORELOC
# Did you mean?  ELFTools::Constants::DF_1_NOW
# uninitialized constant ELFTools::Constants::DF_1_NOW
# Did you mean?  ELFTools::Constants::DF_1_TRANS
# uninitialized constant ELFTools::Constants::DF_1_ORIGIN
# Did you mean?  ELFTools::Constants::DF_ORIGIN
# uninitialized constant ELFTools::Constants::DF_1_SINGLETON
# Did you mean?  Singleton
# uninitialized constant ELFTools::Constants::DF_1_SYMINTPOSE
# Did you mean?  ELFTools::Constants::DF_1_TRANS
# uninitialized constant ELFTools::Constants::DF_1_TRANS
# Did you mean?  ELFTools::Constants::DF_1_NOW
# uninitialized constant ELFTools::Constants::DF_BIND_NOW
# Did you mean?  ELFTools::Constants::DT_BIND_NOW
# uninitialized constant ELFTools::Constants::DF_ORIGIN
# Did you mean?  ELFTools::Constants::DF_1_ORIGIN
# uninitialized constant ELFTools::Constants::DF_STATIC_TLS
# uninitialized constant ELFTools::Constants::DF_SYMBOLIC
# Did you mean?  ELFTools::Constants::DT_SYMBOLIC
# uninitialized constant ELFTools::Constants::DF_TEXTREL
# Did you mean?  ELFTools::Constants::DT_TEXTREL
# uninitialized constant ELFTools::Constants::DT_ADDRRNGHI
# Did you mean?  ELFTools::Constants::DT_ADDRRNGLO
# uninitialized constant ELFTools::Constants::DT_ADDRRNGLO
# Did you mean?  ELFTools::Constants::DT_ADDRRNGHI
# uninitialized constant ELFTools::Constants::DT_BIND_NOW
# Did you mean?  ELFTools::Constants::DF_BIND_NOW
# uninitialized constant ELFTools::Constants::DT_DEBUG
# uninitialized constant ELFTools::Constants::DT_ENCODING
# uninitialized constant ELFTools::Constants::DT_FINI
# Did you mean?  ELFTools::Constants::DT_INIT
# uninitialized constant ELFTools::Constants::DT_FINI_ARRAY
# Did you mean?  ELFTools::Constants::DT_INIT_ARRAY
#                ELFTools::Constants::DT_FINI_ARRAYSZ
#                ELFTools::Constants::DT_INIT_ARRAYSZ
# uninitialized constant ELFTools::Constants::DT_FINI_ARRAYSZ
# Did you mean?  ELFTools::Constants::DT_INIT_ARRAY
#                ELFTools::Constants::DT_INIT_ARRAYSZ
# uninitialized constant ELFTools::Constants::DT_FLAGS
# Did you mean?  ELFTools::Constants::DT_FLAGS_1
# uninitialized constant ELFTools::Constants::DT_FLAGS_1
# uninitialized constant ELFTools::Constants::DT_GNU_HASH
# Did you mean?  ELFTools::Constants::DT_HASH
# uninitialized constant ELFTools::Constants::DT_HASH
# Did you mean?  ELFTools::Constants::DT_HIOS
# uninitialized constant ELFTools::Constants::DT_HIOS
# Did you mean?  ELFTools::Constants::DT_LOOS
#                ELFTools::Constants::PT_HIOS
#                ELFTools::Constants::STB_HIOS
#                ELFTools::Constants::STT_HIOS
# uninitialized constant ELFTools::Constants::DT_HIPROC
# Did you mean?  ELFTools::Constants::DT_HIOS
#                ELFTools::Constants::DT_LOPROC
#                ELFTools::Constants::PT_HIPROC
#                ELFTools::Constants::SHT_HIPROC
#                ELFTools::Constants::STB_HIPROC
#                ELFTools::Constants::STT_HIPROC
# uninitialized constant ELFTools::Constants::DT_INIT
# Did you mean?  ELFTools::Constants::DT_FINI
# uninitialized constant ELFTools::Constants::DT_INIT_ARRAY
# Did you mean?  ELFTools::Constants::DT_FINI_ARRAY
#                ELFTools::Constants::DT_FINI_ARRAYSZ
#                ELFTools::Constants::DT_INIT_ARRAYSZ
# uninitialized constant ELFTools::Constants::DT_INIT_ARRAYSZ
# Did you mean?  ELFTools::Constants::DT_FINI_ARRAY
#                ELFTools::Constants::DT_FINI_ARRAYSZ
# uninitialized constant ELFTools::Constants::DT_JMPREL
# Did you mean?  ELFTools::Constants::DT_REL
#                ELFTools::Constants::DT_PLTREL
# uninitialized constant ELFTools::Constants::DT_LOOS
# Did you mean?  ELFTools::Constants::DT_HIOS
#                ELFTools::Constants::PT_LOOS
#                ELFTools::Constants::STB_LOOS
#                ELFTools::Constants::STT_LOOS
# uninitialized constant ELFTools::Constants::DT_LOPROC
# Did you mean?  ELFTools::Constants::DT_LOOS
#                ELFTools::Constants::DT_HIPROC
#                ELFTools::Constants::PT_LOPROC
#                ELFTools::Constants::SHT_LOPROC
#                ELFTools::Constants::STB_LOPROC
#                ELFTools::Constants::STT_LOPROC
# uninitialized constant ELFTools::Constants::DT_NEEDED
# Did you mean?  ELFTools::Constants::DT_VERNEED
# uninitialized constant ELFTools::Constants::DT_NULL
# Did you mean?  ELFTools::Constants::PT_NULL
#                ELFTools::Constants::SHT_NULL
# uninitialized constant ELFTools::Constants::DT_PLTGOT
# Did you mean?  ELFTools::Constants::DT_PLTREL
# uninitialized constant ELFTools::Constants::DT_PLTREL
# Did you mean?  ELFTools::Constants::DT_REL
#                ELFTools::Constants::DT_JMPREL
#                ELFTools::Constants::DT_PLTGOT
#                ELFTools::Constants::DT_TEXTREL
#                ELFTools::Constants::DT_PLTRELSZ
# uninitialized constant ELFTools::Constants::DT_PLTRELSZ
# Did you mean?  ELFTools::Constants::DT_RELSZ
# uninitialized constant ELFTools::Constants::DT_REL
# Did you mean?  ELFTools::Constants::ET_REL
#                ELFTools::Constants::DT_RELA
#                ELFTools::Constants::SHT_REL
#                ELFTools::Constants::DT_RELSZ
# uninitialized constant ELFTools::Constants::DT_RELA
# Did you mean?  ELFTools::Constants::ET_REL
#                ELFTools::Constants::SHT_RELA
#                ELFTools::Constants::DT_RELSZ
#                ELFTools::Constants::DT_RELASZ
# uninitialized constant ELFTools::Constants::DT_RELACOUNT
# Did you mean?  ELFTools::Constants::DT_RELAENT
#                ELFTools::Constants::DT_RELCOUNT
# uninitialized constant ELFTools::Constants::DT_RELAENT
# Did you mean?  ELFTools::Constants::DT_RELASZ
#                ELFTools::Constants::DT_RELENT
#                ELFTools::Constants::DT_RELCOUNT
#                ELFTools::Constants::DT_RELACOUNT
# uninitialized constant ELFTools::Constants::DT_RELASZ
# Did you mean?  ELFTools::Constants::DT_RELSZ
#                ELFTools::Constants::DT_RELENT
#                ELFTools::Constants::DT_RELAENT
# uninitialized constant ELFTools::Constants::DT_RELCOUNT
# Did you mean?  ELFTools::Constants::DT_RELENT
#                ELFTools::Constants::DT_RELAENT
#                ELFTools::Constants::DT_RELACOUNT
# uninitialized constant ELFTools::Constants::DT_RELENT
# Did you mean?  ELFTools::Constants::DT_RELA
#                ELFTools::Constants::DT_RELSZ
#                ELFTools::Constants::DT_SYMENT
#                ELFTools::Constants::DT_RELASZ
#                ELFTools::Constants::DT_RELAENT
#                ELFTools::Constants::DT_RELCOUNT
# uninitialized constant ELFTools::Constants::DT_RELSZ
# Did you mean?  ELFTools::Constants::DT_RELA
#                ELFTools::Constants::DT_RELASZ
# uninitialized constant ELFTools::Constants::DT_RPATH
# Did you mean?  ELFTools::Constants::DT_RUNPATH
# uninitialized constant ELFTools::Constants::DT_RUNPATH
# Did you mean?  ELFTools::Constants::DT_RPATH
# uninitialized constant ELFTools::Constants::DT_SONAME
# Did you mean?  ELFTools::Constants::DT_SYMENT
# uninitialized constant ELFTools::Constants::DT_STRSZ
# Did you mean?  ELFTools::Constants::DT_RELSZ
# uninitialized constant ELFTools::Constants::DT_STRTAB
# Did you mean?  ELFTools::Constants::DT_STRSZ
#                ELFTools::Constants::DT_SYMTAB
#                ELFTools::Constants::SHT_STRTAB
# uninitialized constant ELFTools::Constants::DT_SYMBOLIC
# Did you mean?  ELFTools::Constants::DF_SYMBOLIC
# uninitialized constant ELFTools::Constants::DT_SYMENT
# Did you mean?  ELFTools::Constants::DT_RELENT
#                ELFTools::Constants::DT_SYMTAB
# uninitialized constant ELFTools::Constants::DT_SYMTAB
# Did you mean?  ELFTools::Constants::DT_SYMENT
#                ELFTools::Constants::DT_STRTAB
#                ELFTools::Constants::SHT_SYMTAB
# uninitialized constant ELFTools::Constants::DT_TEXTREL
# Did you mean?  ELFTools::Constants::DT_PLTREL
#                ELFTools::Constants::DF_TEXTREL
# uninitialized constant ELFTools::Constants::DT_VALRNGHI
# Did you mean?  ELFTools::Constants::DT_VALRNGLO
# uninitialized constant ELFTools::Constants::DT_VALRNGLO
# Did you mean?  ELFTools::Constants::DT_VALRNGHI
# uninitialized constant ELFTools::Constants::DT_VERDEF
# Did you mean?  ELFTools::Constants::DT_VERSYM
#                ELFTools::Constants::DT_VERNEED
#                ELFTools::Constants::DT_VERDEFNUM
# uninitialized constant ELFTools::Constants::DT_VERDEFNUM
# Did you mean?  ELFTools::Constants::DT_VERNEEDNUM
# uninitialized constant ELFTools::Constants::DT_VERNEED
# Did you mean?  ELFTools::Constants::DT_VERDEF
#                ELFTools::Constants::DT_VERNEEDNUM
# uninitialized constant ELFTools::Constants::DT_VERNEEDNUM
# Did you mean?  ELFTools::Constants::DT_VERDEFNUM
# uninitialized constant ELFTools::Constants::DT_VERSYM
# Did you mean?  ELFTools::Constants::DT_VERDEF
# uninitialized constant ELFTools::Constants::EM_386
# Did you mean?  ELFTools::Constants::EM_860
#                ELFTools::Constants::EM_486
#                ELFTools::Constants::EM_88K
#                ELFTools::Constants::EM_68K
# uninitialized constant ELFTools::Constants::EM_486
# Did you mean?  ELFTools::Constants::EM_860
#                ELFTools::Constants::EM_386
#                ELFTools::Constants::EM_88K
#                ELFTools::Constants::EM_68K
# uninitialized constant ELFTools::Constants::EM_68K
# Did you mean?  ELFTools::Constants::EM_486
#                ELFTools::Constants::EM_88K
#                ELFTools::Constants::EM_386
# uninitialized constant ELFTools::Constants::EM_860
# Did you mean?  ELFTools::Constants::EM_486
#                ELFTools::Constants::EM_386
#                ELFTools::Constants::EM_88K
# uninitialized constant ELFTools::Constants::EM_88K
# Did you mean?  ELFTools::Constants::EM_860
#                ELFTools::Constants::EM_486
#                ELFTools::Constants::EM_68K
#                ELFTools::Constants::EM_386
# uninitialized constant ELFTools::Constants::EM_AARCH64
# Did you mean?  ELFTools::Constants::EM_IA_64
# uninitialized constant ELFTools::Constants::EM_ALPHA
# Did you mean?  ELFTools::Constants::EM_SH
# uninitialized constant ELFTools::Constants::EM_ALTERA_NIOS2
# uninitialized constant ELFTools::Constants::EM_ARM
# Did you mean?  ELFTools::Constants::EM_FRV
# uninitialized constant ELFTools::Constants::EM_AVR32
# Did you mean?  ELFTools::Constants::EM_M32
# uninitialized constant ELFTools::Constants::EM_BLACKFIN
# uninitialized constant ELFTools::Constants::EM_BPF
# Did you mean?  ELFTools::Constants::EM_SPU
#                ELFTools::Constants::EM_PPC
# uninitialized constant ELFTools::Constants::EM_CRIS
# Did you mean?  ELFTools::Constants::EM_MIPS
# uninitialized constant ELFTools::Constants::EM_CYGNUS_M32R
# Did you mean?  ELFTools::Constants::EM_CYGNUS_MN10300
# uninitialized constant ELFTools::Constants::EM_CYGNUS_MN10300
# Did you mean?  ELFTools::Constants::EM_CYGNUS_M32R
# uninitialized constant ELFTools::Constants::EM_FRV
# Did you mean?  ELFTools::Constants::EM_ARM
# uninitialized constant ELFTools::Constants::EM_H8_300
# Did you mean?  ELFTools::Constants::EM_860
# uninitialized constant ELFTools::Constants::EM_IA_64
# Did you mean?  ELFTools::Constants::EM_AARCH64
# uninitialized constant ELFTools::Constants::EM_M32
# Did you mean?  ELFTools::Constants::EM_M32R
# uninitialized constant ELFTools::Constants::EM_M32R
# uninitialized constant ELFTools::Constants::EM_MICROBLAZE
# Did you mean?  ELFTools::Constants::EM_MIPS_RS3_LE
# uninitialized constant ELFTools::Constants::EM_MIPS
# Did you mean?  ELFTools::Constants::EM_M32
# uninitialized constant ELFTools::Constants::EM_MIPS_RS3_LE
# Did you mean?  ELFTools::Constants::EM_MIPS_RS4_BE
# uninitialized constant ELFTools::Constants::EM_MIPS_RS4_BE
# Did you mean?  ELFTools::Constants::EM_MIPS_RS3_LE
# uninitialized constant ELFTools::Constants::EM_MN10300
# Did you mean?  ELFTools::Constants::EM_CYGNUS_MN10300
# uninitialized constant ELFTools::Constants::EM_NONE
# Did you mean?  ELFTools::Constants::ET_NONE
# uninitialized constant ELFTools::Constants::EM_OPENRISC
# Did you mean?  ELFTools::Constants::EM_PARISC
# uninitialized constant ELFTools::Constants::EM_PARISC
# Did you mean?  ELFTools::Constants::EM_CRIS
#                ELFTools::Constants::EM_SPARC
#                ELFTools::Constants::EM_OPENRISC
# uninitialized constant ELFTools::Constants::EM_PPC
# Did you mean?  ELFTools::Constants::EM_BPF
#                ELFTools::Constants::EM_SPU
#                ELFTools::Constants::EM_PPC64
# uninitialized constant ELFTools::Constants::EM_PPC64
# uninitialized constant ELFTools::Constants::EM_S390
# Did you mean?  ELFTools::Constants::EM_S390_OLD
# uninitialized constant ELFTools::Constants::EM_S390_OLD
# uninitialized constant ELFTools::Constants::EM_SH
# Did you mean?  ELFTools::Constants::EM_SPU
# uninitialized constant ELFTools::Constants::EM_SPARC
# Did you mean?  ELFTools::Constants::EM_SPARCV9
# uninitialized constant ELFTools::Constants::EM_SPARC32PLUS
# uninitialized constant ELFTools::Constants::EM_SPARCV9
# uninitialized constant ELFTools::Constants::EM_SPU
# Did you mean?  ELFTools::Constants::EM_SH
#                ELFTools::Constants::EM_BPF
#                ELFTools::Constants::EM_PPC
# uninitialized constant ELFTools::Constants::EM_TILEGX
# Did you mean?  ELFTools::Constants::EM_TILEPRO
# uninitialized constant ELFTools::Constants::EM_TILEPRO
# Did you mean?  ELFTools::Constants::EM_TILEGX
# uninitialized constant ELFTools::Constants::EM_TI_C6000
# Did you mean?  ELFTools::Constants::EM_IA_64
# uninitialized constant ELFTools::Constants::EM_X86_64
# Did you mean?  ELFTools::Constants::EM_860
# uninitialized constant ELFTools::Constants::ET_CORE
# Did you mean?  ELFTools::Constants::ET_NONE
# uninitialized constant ELFTools::Constants::ET_DYN
# uninitialized constant ELFTools::Constants::ET_EXEC
# uninitialized constant ELFTools::Constants::ET_NONE
# Did you mean?  ELFTools::Constants::EM_NONE
#                ELFTools::Constants::ET_CORE
# uninitialized constant ELFTools::Constants::ET_REL
# Did you mean?  ELFTools::Constants::DT_REL
#                ELFTools::Constants::DT_RELA
#                ELFTools::Constants::SHT_REL
# uninitialized constant ELFTools::Constants::PF_R
# Did you mean?  ELFTools::Constants::PF_W
#                ELFTools::Constants::PF_X
# uninitialized constant ELFTools::Constants::PF_W
# Did you mean?  ELFTools::Constants::PF_X
#                ELFTools::Constants::PF_R
# uninitialized constant ELFTools::Constants::PF_X
# Did you mean?  ELFTools::Constants::PF_W
#                ELFTools::Constants::PF_R
# uninitialized constant ELFTools::Constants::PT_DYNAMIC
# Did you mean?  ELFTools::Dynamic
#                ELFTools::Constants::SHT_DYNAMIC
# uninitialized constant ELFTools::Constants::PT_GNU_EH_FRAME
# Did you mean?  ELFTools::Constants::PT_GNU_RELRO
# uninitialized constant ELFTools::Constants::PT_GNU_RELRO
# Did you mean?  ELFTools::Constants::PT_GNU_EH_FRAME
# uninitialized constant ELFTools::Constants::PT_GNU_STACK
# Did you mean?  ELFTools::Constants::PT_GNU_EH_FRAME
# uninitialized constant ELFTools::Constants::PT_HIOS
# Did you mean?  ELFTools::Constants::DT_HIOS
#                ELFTools::Constants::PT_LOOS
#                ELFTools::Constants::STB_HIOS
#                ELFTools::Constants::STT_HIOS
# uninitialized constant ELFTools::Constants::PT_HIPROC
# Did you mean?  ELFTools::Constants::PT_HIOS
#                ELFTools::Constants::DT_HIPROC
#                ELFTools::Constants::PT_LOPROC
#                ELFTools::Constants::SHT_HIPROC
#                ELFTools::Constants::STB_HIPROC
#                ELFTools::Constants::STT_HIPROC
# uninitialized constant ELFTools::Constants::PT_INTERP
# Did you mean?  ELFTools::Constants::PT_NOTE
# uninitialized constant ELFTools::Constants::PT_LOAD
# Did you mean?  ELFTools::Constants::PT_LOOS
# uninitialized constant ELFTools::Constants::PT_LOOS
# Did you mean?  ELFTools::Constants::DT_LOOS
#                ELFTools::Constants::PT_HIOS
#                ELFTools::Constants::PT_LOAD
#                ELFTools::Constants::STB_LOOS
#                ELFTools::Constants::STT_LOOS
# uninitialized constant ELFTools::Constants::PT_LOPROC
# Did you mean?  ELFTools::Constants::PT_LOOS
#                ELFTools::Constants::DT_LOPROC
#                ELFTools::Constants::PT_HIPROC
#                ELFTools::Constants::SHT_LOPROC
#                ELFTools::Constants::STB_LOPROC
#                ELFTools::Constants::STT_LOPROC
# uninitialized constant ELFTools::Constants::PT_NOTE
# Did you mean?  ELFTools::Constants::SHT_NOTE
# uninitialized constant ELFTools::Constants::PT_NULL
# Did you mean?  ELFTools::Constants::DT_NULL
#                ELFTools::Constants::SHT_NULL
# uninitialized constant ELFTools::Constants::PT_PHDR
# Did you mean?  ELFTools::Constants::PT_HIPROC
# uninitialized constant ELFTools::Constants::PT_SHLIB
# Did you mean?  ELFTools::Constants::PT_HIOS
# uninitialized constant ELFTools::Constants::PT_TLS
# Did you mean?  ELFTools::Constants::PT_LOOS
# uninitialized constant ELFTools::Constants::SHN_LORESERVE
# uninitialized constant ELFTools::Constants::SHN_UNDEF
# uninitialized constant ELFTools::Constants::SHT_DYNAMIC
# Did you mean?  ELFTools::Constants::PT_DYNAMIC
# uninitialized constant ELFTools::Constants::SHT_DYNSYM
# Did you mean?  ELFTools::Constants::SHT_SYMTAB
# uninitialized constant ELFTools::Constants::SHT_HASH
# Did you mean?  ELFTools::Constants::SHT_RELA
# uninitialized constant ELFTools::Constants::SHT_HIPROC
# Did you mean?  ELFTools::Constants::PT_HIPROC
#                ELFTools::Constants::DT_HIPROC
#                ELFTools::Constants::STT_HIPROC
#                ELFTools::Constants::SHT_LOPROC
#                ELFTools::Constants::STB_HIPROC
# uninitialized constant ELFTools::Constants::SHT_HIUSER
# Did you mean?  ELFTools::Constants::SHT_LOUSER
# uninitialized constant ELFTools::Constants::SHT_LOPROC
# Did you mean?  ELFTools::Constants::PT_LOPROC
#                ELFTools::Constants::DT_LOPROC
#                ELFTools::Constants::STB_LOPROC
#                ELFTools::Constants::STT_LOPROC
#                ELFTools::Constants::SHT_HIPROC
# uninitialized constant ELFTools::Constants::SHT_LOUSER
# Did you mean?  ELFTools::Constants::SHT_HIUSER
# uninitialized constant ELFTools::Constants::SHT_NOBITS
# Did you mean?  ELFTools::Constants::SHT_NOTE
#                ELFTools::Constants::SHT_PROGBITS
# uninitialized constant ELFTools::Constants::SHT_NOTE
# Did you mean?  ELFTools::Constants::PT_NOTE
# uninitialized constant ELFTools::Constants::SHT_NULL
# Did you mean?  ELFTools::Constants::DT_NULL
#                ELFTools::Constants::PT_NULL
# uninitialized constant ELFTools::Constants::SHT_PROGBITS
# Did you mean?  ELFTools::Constants::SHT_NOBITS
# uninitialized constant ELFTools::Constants::SHT_REL
# Did you mean?  ELFTools::Constants::DT_REL
#                ELFTools::Constants::ET_REL
#                ELFTools::Constants::SHT_RELA
# uninitialized constant ELFTools::Constants::SHT_RELA
# Did you mean?  ELFTools::Constants::DT_RELA
# uninitialized constant ELFTools::Constants::SHT_SHLIB
# Did you mean?  ELFTools::Constants::SHT_REL
# uninitialized constant ELFTools::Constants::SHT_STRTAB
# Did you mean?  ELFTools::Constants::DT_STRTAB
#                ELFTools::Constants::SHT_SYMTAB
# uninitialized constant ELFTools::Constants::SHT_SYMTAB
# Did you mean?  ELFTools::Constants::DT_SYMTAB
#                ELFTools::Constants::SHT_STRTAB
# uninitialized constant ELFTools::Constants::STB_GLOBAL
# Did you mean?  ELFTools::Constants::STB_LOCAL
# uninitialized constant ELFTools::Constants::STB_GNU_UNIQUE
# Did you mean?  ELFTools::Constants::STT_GNU_IFUNC
# uninitialized constant ELFTools::Constants::STB_HIOS
# Did you mean?  ELFTools::Constants::DT_HIOS
#                ELFTools::Constants::PT_HIOS
#                ELFTools::Constants::STT_HIOS
#                ELFTools::Constants::STB_LOOS
# uninitialized constant ELFTools::Constants::STB_HIPROC
# Did you mean?  ELFTools::Constants::STB_HIOS
#                ELFTools::Constants::PT_HIPROC
#                ELFTools::Constants::DT_HIPROC
#                ELFTools::Constants::STB_LOPROC
#                ELFTools::Constants::SHT_HIPROC
#                ELFTools::Constants::STT_HIPROC
# uninitialized constant ELFTools::Constants::STB_LOCAL
# Did you mean?  ELFTools::Constants::STB_LOOS
#                ELFTools::Constants::STB_GLOBAL
# uninitialized constant ELFTools::Constants::STB_LOOS
# Did you mean?  ELFTools::Constants::DT_LOOS
#                ELFTools::Constants::PT_LOOS
#                ELFTools::Constants::STT_LOOS
#                ELFTools::Constants::STB_HIOS
# uninitialized constant ELFTools::Constants::STB_LOPROC
# Did you mean?  ELFTools::Constants::STB_LOOS
#                ELFTools::Constants::PT_LOPROC
#                ELFTools::Constants::DT_LOPROC
#                ELFTools::Constants::STT_LOPROC
#                ELFTools::Constants::STB_HIPROC
#                ELFTools::Constants::SHT_LOPROC
# uninitialized constant ELFTools::Constants::STB_NUM
# Did you mean?  ELFTools::Constants::STT_NUM
# uninitialized constant ELFTools::Constants::STB_WEAK
# Did you mean?  ELFTools::Constants::STB_LOCAL
# uninitialized constant ELFTools::Constants::STT_ARM_TFUNC
# Did you mean?  ELFTools::Constants::STT_GNU_IFUNC
# uninitialized constant ELFTools::Constants::STT_COMMON
# Did you mean?  ELFTools::Constants::STT_NUM
# uninitialized constant ELFTools::Constants::STT_FILE
# Did you mean?  ELFTools::Constants::STT_TLS
# uninitialized constant ELFTools::Constants::STT_FUNC
# Did you mean?  ELFTools::Constants::STT_NUM
# uninitialized constant ELFTools::Constants::STT_GNU_IFUNC
# Did you mean?  ELFTools::Constants::STT_ARM_TFUNC
# uninitialized constant ELFTools::Constants::STT_HIOS
# Did you mean?  ELFTools::Constants::PT_HIOS
#                ELFTools::Constants::DT_HIOS
#                ELFTools::Constants::STB_HIOS
#                ELFTools::Constants::STT_LOOS
# uninitialized constant ELFTools::Constants::STT_HIPROC
# Did you mean?  ELFTools::Constants::STT_HIOS
#                ELFTools::Constants::DT_HIPROC
#                ELFTools::Constants::PT_HIPROC
#                ELFTools::Constants::SHT_HIPROC
#                ELFTools::Constants::STB_HIPROC
#                ELFTools::Constants::STT_LOPROC
# uninitialized constant ELFTools::Constants::STT_LOOS
# Did you mean?  ELFTools::Constants::DT_LOOS
#                ELFTools::Constants::PT_LOOS
#                ELFTools::Constants::STB_LOOS
#                ELFTools::Constants::STT_HIOS
# uninitialized constant ELFTools::Constants::STT_LOPROC
# Did you mean?  ELFTools::Constants::STT_LOOS
#                ELFTools::Constants::DT_LOPROC
#                ELFTools::Constants::PT_LOPROC
#                ELFTools::Constants::SHT_LOPROC
#                ELFTools::Constants::STB_LOPROC
#                ELFTools::Constants::STT_HIPROC
# uninitialized constant ELFTools::Constants::STT_NOTYPE
# Did you mean?  ELFTools::Constants::STT_NUM
# uninitialized constant ELFTools::Constants::STT_NUM
# Did you mean?  ELFTools::Constants::STB_NUM
# uninitialized constant ELFTools::Constants::STT_OBJECT
# Did you mean?  ELFTools::Constants::STT_NOTYPE
# uninitialized constant ELFTools::Constants::STT_SECTION
# Did you mean?  ELFTools::Constants::STT_TLS
# uninitialized constant ELFTools::Constants::STT_SPARC_REGISTER
# uninitialized constant ELFTools::Constants::STT_TLS
# Did you mean?  ELFTools::Constants::STT_FILE
# uninitialized constant ELFTools::Structs::ELFStruct::RESERVED
# wrong constant name def_method
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name def_module
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name html_escape_once
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name json_escape
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unwrapped_html_escape
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name xml_name_escape
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _dump
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _load
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name compact
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name sum
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name +
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:ArithmeticSequence>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Chain>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Producer>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each_with_index
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Enumerator::ArithmeticSequence::Elem
# wrong constant name begin
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name end
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name exclude_end?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name last
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name step
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Enumerator::Chain::Elem
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name eager
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_proc
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name produce
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gid
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gid=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mem
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mem=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name name=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name passwd
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name passwd=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name []
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name keyword_init?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name members
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Group>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name change
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name change=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dir=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name expire
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name expire=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gecos
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gecos=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gid=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name name=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name passwd=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name shell=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name uclass
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name uclass=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name uid=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name []
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name keyword_init?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name members
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Passwd>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Exception2MessageMapper
# uninitialized constant Exception2MessageMapper
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Fcntl
# uninitialized constant Fcntl
# wrong constant name backtrace
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name backtrace_locations
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name blocking?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name transfer
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name blocking?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name current
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name current_scheduler
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name schedule
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scheduler
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_scheduler
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Fiddle
# Did you mean?  File
# uninitialized constant Fiddle
# Did you mean?  File
# wrong constant name absolute_path?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name atomic_write
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name exists?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name probe_stat_in
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant FileUtils::DryRun::VERSION
# uninitialized constant FileUtils::NoWrite::VERSION
# uninitialized constant FileUtils::Verbose::VERSION
# uninitialized constant Float::EXABYTE
# Did you mean?  Float::MEGABYTE
#                Float::TERABYTE
# uninitialized constant Float::GIGABYTE
# uninitialized constant Float::KILOBYTE
# uninitialized constant Float::MEGABYTE
# Did you mean?  Float::EXABYTE
# uninitialized constant Float::PETABYTE
# Did you mean?  Float::TERABYTE
# uninitialized constant Float::TERABYTE
# Did you mean?  Float::EXABYTE
#                Float::PETABYTE
# wrong constant name _compile_method
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _delegator_method
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _valid_method?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name debug
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name debug=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name receiver
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name garbage_collect
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name latest_compact_info
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name measure_total_time
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name measure_total_time=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name total_time
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name using_rvargc?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name verify_transient_heap_internal_consistency
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant GDBM
# uninitialized constant GDBM
# uninitialized constant GDBMError
# uninitialized constant GDBMError
# uninitialized constant GDBMFatalError
# uninitialized constant GDBMFatalError
# wrong constant name <Class:InstallerUninstallerUtils>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:RuntimeRequirementNotMetError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:SpecFetcher>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:SpecificationPolicy>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:TSort>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:UninstallError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:UnknownCommandError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:UnknownCommandSpellChecker>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Gem::AvailableSet
# uninitialized constant Gem::AvailableSet
# wrong constant name plugins
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name prioritize!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ipv4_fallback_enabled
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ipv4_fallback_enabled=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <=>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name prioritizes_bundler?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Gem::DependencyInstaller
# Did you mean?  Gem::DependencyList
# uninitialized constant Gem::DependencyInstaller
# Did you mean?  Gem::DependencyList
# wrong constant name deprecate
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name next_rubygems_major_version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name rubygems_deprecate
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name rubygems_deprecate_command
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Gem::Ext::ExtConfBuilder::CHDIR_MONITOR
# Did you mean?  Gem::Ext::ExtConfBuilder::CHDIR_MUTEX
# uninitialized constant Gem::Ext::ExtConfBuilder::CHDIR_MUTEX
# Did you mean?  Gem::Ext::ExtConfBuilder::CHDIR_MONITOR
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name build
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name get_relative_path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:FakePackage>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ensure_writable_dir
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name explicit_version_requirement
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gemdeps_load
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name generate_plugins
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name copy_to
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name data_mode
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name data_mode=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dir_mode
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dir_mode=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name extract_files
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name prog_mode
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name prog_mode=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name spec
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name spec=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name inherited
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name regenerate_plugins_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remove_plugins_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name home
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name spec_cache_dir
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name match_gem?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name match_spec?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name sort_priority
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name keyword_init?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _sorted_requirements
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name new
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name eql?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ==
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name force
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name force=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unused_unwind_options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dependencies_equal?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Log>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name keyword_init?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name add_edge_no_circular
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name add_vertex
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name delete_edge
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name detach_vertex_named
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pop!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name reverse_each
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name rewind_to
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_payload
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tag
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Gem::Resolver::Molinillo::DependencyGraph::Log::Elem
# wrong constant name _path_to?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _recursive_predecessors
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _recursive_successors
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unused_unwind_options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unused_unwind_options=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name keyword_init?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name possibility_set
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name possibility_set=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name underlying_error
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name underlying_error=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name keyword_init?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Gem::Resolver::Molinillo::Resolver::Resolution::PossibilitySet::Elem
# wrong constant name dependencies
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dependencies=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name latest_version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name possibilities
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name possibilities=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name []
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name keyword_init?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name members
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <=>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Gem::Resolver::Molinillo::Resolver::Resolution::UnwindDetails::Elem
# wrong constant name all_requirements
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name conflicting_requirements
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name conflicting_requirements=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name requirement_tree
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name requirement_tree=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name requirement_trees
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name requirement_trees=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name requirements_unwound_to_instead
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name requirements_unwound_to_instead=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name reversed_requirement_tree_index
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name state_index
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name state_index=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name state_requirement
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name state_requirement=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name sub_dependencies_to_avoid
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unwinding_to_primary_requirement?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name []
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name keyword_init?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name members
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dependencies_equal?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name message_with_trees
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name specification_provider
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name required_ruby_version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name required_rubygems_version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name suggestion
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name suggestion=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Gem::Security::DIGEST_ALGORITHM
# Did you mean?  Gem::Security::DIGEST_NAME
# uninitialized constant Gem::Security::DIGEST_ALGORITHM
# Did you mean?  Gem::Security::DIGEST_NAME
# wrong constant name available_specs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name detect
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name latest_specs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name prerelease_specs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name search_for_dependency
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name sources
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name spec_for_dependency
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name specs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name suggest_gems_from_name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tuples_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fetcher
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fetcher=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <=>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Gem::Specification::GENERICS
# Did you mean?  Gem::Specification::GENERIC_CACHE
# uninitialized constant Gem::Specification::GENERIC_CACHE
# Did you mean?  Gem::Specification::GENERICS
# wrong constant name <Class:YamlBackfiller>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _deprecated_validate_dependencies
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _deprecated_validate_metadata
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _deprecated_validate_permissions
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name deleted_gem?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name removed_method_calls
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name rg_required_ruby_version=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_ruby
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_yaml
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name latest_spec_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name stubs_for_pattern
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name packaging
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name packaging=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name validate
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name validate_dependencies
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name validate_duplicate_dependencies
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name validate_metadata
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name validate_optional
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name validate_permissions
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name validate_required!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Gem::Stream
# Did you mean?  Gem::StreamUI
# uninitialized constant Gem::Stream
# Did you mean?  Gem::StreamUI
# wrong constant name build_extensions
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name extensions
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name missing_extensions?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name valid?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name extensions
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name full_name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name platform
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name require_paths
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default_gemspec_stub
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gemspec_stub
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each_strongly_connected_component
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each_strongly_connected_component_from
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name strongly_connected_components
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tsort
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tsort_each
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tsort_each_child
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tsort_each_node
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each_strongly_connected_component
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each_strongly_connected_component_from
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name strongly_connected_components
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tsort
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tsort_each
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name spec
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name spec=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unknown_command
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name attach_correctable
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name corrections
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name error
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Gem::UriParser
# uninitialized constant Gem::UriParser
# uninitialized constant Gem::UriParsing
# uninitialized constant Gem::UriParsing
# wrong constant name _deprecated_silent_system
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name activated_gem_paths
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cache_home
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name config_home
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name data_home
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name disable_system_update_message
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name disable_system_update_message=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name find_config_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name open_with_flock
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name plugin_suffix_pattern
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name plugin_suffix_regexp
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name plugindir
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name solaris_platform?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant GetText::PoParser::Racc_Main_Parsing_Routine
# uninitialized constant GetText::PoParser::Racc_Runtime_Core_Id_C
# Did you mean?  GetText::PoParser::Racc_Runtime_Core_Version_C
# uninitialized constant GetText::PoParser::Racc_Runtime_Core_Version
# Did you mean?  GetText::PoParser::Racc_Runtime_Core_Version_R
#                GetText::PoParser::Racc_Runtime_Core_Version_C
#                GetText::PoParser::Racc_Runtime_Version
#                GetText::PoParser::Racc_Runtime_Core_Id_C
# uninitialized constant GetText::PoParser::Racc_Runtime_Core_Version_C
# Did you mean?  GetText::PoParser::Racc_Runtime_Core_Version_R
#                GetText::PoParser::Racc_Runtime_Version
#                GetText::PoParser::Racc_Runtime_Core_Id_C
# uninitialized constant GetText::PoParser::Racc_Runtime_Core_Version_R
# Did you mean?  GetText::PoParser::Racc_Runtime_Core_Version_C
#                GetText::PoParser::Racc_Runtime_Version
#                GetText::PoParser::Racc_Runtime_Core_Id_C
# uninitialized constant GetText::PoParser::Racc_Runtime_Type
# Did you mean?  GetText::PoParser::Racc_Runtime_Version
# uninitialized constant GetText::PoParser::Racc_Runtime_Version
# Did you mean?  GetText::PoParser::Racc_Runtime_Core_Version
# uninitialized constant GetText::PoParser::Racc_YY_Parse_Method
# uninitialized constant GetoptLong
# uninitialized constant GetoptLong
# wrong constant name <Class:Scanner>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant HTTP::Cookie::Scanner::Id
# uninitialized constant HTTP::Cookie::Scanner::Version
# Did you mean?  HTTP::Cookie::VERSION
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse_cookie_date
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scan_cookie
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scan_dquoted
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scan_name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scan_name_value
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scan_set_cookie
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scan_value
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name skip_wsp
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name quote
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Hash::DEFAULT_INDENT
# wrong constant name deconstruct_keys
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ruby2_keywords_hash
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ruby2_keywords_hash?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name delete
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name read
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name write
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant I18n::Backend::KeyValue::DEFAULT_REPLACEMENT_CHAR
# uninitialized constant I18n::Backend::KeyValue::FLATTEN_SEPARATOR
# uninitialized constant I18n::Backend::KeyValue::SEPARATOR_ESCAPE_CHAR
# uninitialized constant I18n::Backend::KeyValue::Implementation::DEFAULT_REPLACEMENT_CHAR
# uninitialized constant I18n::Backend::KeyValue::Implementation::FLATTEN_SEPARATOR
# uninitialized constant I18n::Backend::KeyValue::Implementation::SEPARATOR_ESCAPE_CHAR
# uninitialized constant I18n::Backend::LazyLoadable::DEFAULT_REPLACEMENT_CHAR
# wrong constant name <Class:FilenameIncorrect>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialized_locales
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name included
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Buffer>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:ConsoleMode>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name beep
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check_winsize_changed
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name clear_screen
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name console_mode
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name console_mode=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cooked
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cooked!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cursor
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cursor=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cursor_down
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cursor_left
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cursor_right
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cursor_up
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name echo=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name echo?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name erase_line
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name erase_screen
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name getch
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name getpass
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name goto
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name goto_column
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name iflush
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ioflush
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name noecho
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name nonblock
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name nonblock=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name nonblock?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name nread
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name oflush
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pathconf
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pressed?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name raw
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name raw!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name readline_nonblock
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ready?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scroll_backward
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scroll_forward
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_encoding_by_bom
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name wait
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name wait_priority
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name wait_readable
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name wait_writable
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name winsize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name winsize=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:AccessError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:AllocationError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:InvalidatedError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:LockedError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name clear
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name copy
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name empty?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name external?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name free
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name get_string
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name get_value
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name hexdump
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name internal?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name locked
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name locked?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mapped?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name null?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pread
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pwrite
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name read
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name readonly?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name resize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_string
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_value
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name size
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name slice
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name transfer
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name valid?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name write
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name map
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name echo=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name raw
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name raw!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name console
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name new
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ==
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name netmask
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name zone_id
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name zone_id=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant IRB
# Did you mean?  DRb
#                ERB
# uninitialized constant IRB
# Did you mean?  DRb
#                ERB
# uninitialized constant Integer::EXABYTE
# Did you mean?  Integer::MEGABYTE
#                Integer::TERABYTE
# uninitialized constant Integer::GIGABYTE
# uninitialized constant Integer::KILOBYTE
# uninitialized constant Integer::MEGABYTE
# Did you mean?  Integer::EXABYTE
# uninitialized constant Integer::PETABYTE
# Did you mean?  Integer::TERABYTE
# uninitialized constant Integer::TERABYTE
# Did you mean?  Integer::EXABYTE
#                Integer::PETABYTE
# wrong constant name to_bn
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name try_convert
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name escape_slash
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name escape_slash=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name escape_slash?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name from_state
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name create_fast_state
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name create_pretty_state
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name load_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name load_file!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Jacobian
# uninitialized constant Jacobian
# uninitialized constant Kconv
# uninitialized constant Kconv
# wrong constant name itself
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name object_id
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pretty_inspect
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name then
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name yield_self
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name at_exit
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fork
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name load
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name require
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant LUSolve
# uninitialized constant LUSolve
# wrong constant name debug!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name error!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fatal!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name info!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name warn!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Logger::LogDevice::SiD
# uninitialized constant MIME::Types::Elem
# wrong constant name match
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name match_length
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Matrix
# uninitialized constant Matrix
# uninitialized constant Mechanize::Page::SPECIAL_FILENAMES
# uninitialized constant MessagePack
# uninitialized constant MessagePack
# wrong constant name private?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name protected?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name public?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Minitest::Spec::E
# uninitialized constant Minitest::Spec::PASSTHROUGH_EXCEPTIONS
# uninitialized constant Minitest::Spec::SIGNALS
# Did you mean?  Signal
# uninitialized constant Minitest::Spec::TEARDOWN_METHODS
# uninitialized constant Minitest::Spec::UNDEFINED
# uninitialized constant Minitest::Test::E
# uninitialized constant Minitest::Test::SIGNALS
# Did you mean?  Signal
# uninitialized constant Minitest::Test::UNDEFINED
# wrong constant name deprecate
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name enter
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name exit
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mon_check_owner
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mon_enter
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mon_exit
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mon_locked?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mon_owned?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mon_synchronize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mon_try_enter
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name new_cond
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name synchronize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name try_enter
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name try_mon_enter
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name wait_for_cond
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant MonitorMixin::ConditionVariable::Timeout
# uninitialized constant MonitorMixin::ConditionVariable::Timeout
# wrong constant name write_timeout
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name write_timeout=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Net::DNS
# uninitialized constant Net::DNS
# uninitialized constant Net::FTP
# uninitialized constant Net::FTP
# uninitialized constant Net::FTPConnectionError
# uninitialized constant Net::FTPConnectionError
# uninitialized constant Net::FTPError
# Did you mean?  Net::HTTPError
# uninitialized constant Net::FTPError
# Did you mean?  Net::HTTPError
# uninitialized constant Net::FTPPermError
# Did you mean?  FiberError
# uninitialized constant Net::FTPPermError
# Did you mean?  FiberError
# uninitialized constant Net::FTPProtoError
# uninitialized constant Net::FTPProtoError
# uninitialized constant Net::FTPReplyError
# uninitialized constant Net::FTPReplyError
# uninitialized constant Net::FTPTempError
# Did you mean?  TypeError
# uninitialized constant Net::FTPTempError
# Did you mean?  TypeError
# wrong constant name extra_chain_cert
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name extra_chain_cert=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ipaddr
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ipaddr=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name max_retries
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name max_retries=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name max_version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name max_version=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name min_version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name min_version=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name verify_hostname
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name verify_hostname=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name write_timeout
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name write_timeout=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Net::HTTPAlreadyReported::CODE_CLASS_TO_OBJ
# Did you mean?  Net::HTTPAlreadyReported::CODE_TO_OBJ
# uninitialized constant Net::HTTPAlreadyReported::CODE_TO_OBJ
# Did you mean?  Net::HTTPAlreadyReported::CODE_CLASS_TO_OBJ
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Net::HTTPEarlyHints::CODE_CLASS_TO_OBJ
# Did you mean?  Net::HTTPEarlyHints::CODE_TO_OBJ
# uninitialized constant Net::HTTPEarlyHints::CODE_TO_OBJ
# Did you mean?  Net::HTTPEarlyHints::CODE_CLASS_TO_OBJ
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Net::HTTPLoopDetected::CODE_CLASS_TO_OBJ
# Did you mean?  Net::HTTPLoopDetected::CODE_TO_OBJ
# uninitialized constant Net::HTTPLoopDetected::CODE_TO_OBJ
# Did you mean?  Net::HTTPLoopDetected::CODE_CLASS_TO_OBJ
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Net::HTTPMisdirectedRequest::CODE_CLASS_TO_OBJ
# Did you mean?  Net::HTTPMisdirectedRequest::CODE_TO_OBJ
# uninitialized constant Net::HTTPMisdirectedRequest::CODE_TO_OBJ
# Did you mean?  Net::HTTPMisdirectedRequest::CODE_CLASS_TO_OBJ
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Net::HTTPNotExtended::CODE_CLASS_TO_OBJ
# Did you mean?  Net::HTTPNotExtended::CODE_TO_OBJ
# uninitialized constant Net::HTTPNotExtended::CODE_TO_OBJ
# Did you mean?  Net::HTTPNotExtended::CODE_CLASS_TO_OBJ
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Net::HTTPPayloadTooLarge::CODE_CLASS_TO_OBJ
# Did you mean?  Net::HTTPPayloadTooLarge::CODE_TO_OBJ
# uninitialized constant Net::HTTPPayloadTooLarge::CODE_TO_OBJ
# Did you mean?  Net::HTTPPayloadTooLarge::CODE_CLASS_TO_OBJ
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Net::HTTPProcessing::CODE_CLASS_TO_OBJ
# Did you mean?  Net::HTTPProcessing::CODE_TO_OBJ
# uninitialized constant Net::HTTPProcessing::CODE_TO_OBJ
# Did you mean?  Net::HTTPProcessing::CODE_CLASS_TO_OBJ
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Net::HTTPRangeNotSatisfiable::CODE_CLASS_TO_OBJ
# Did you mean?  Net::HTTPRangeNotSatisfiable::CODE_TO_OBJ
# uninitialized constant Net::HTTPRangeNotSatisfiable::CODE_TO_OBJ
# Did you mean?  Net::HTTPRangeNotSatisfiable::CODE_CLASS_TO_OBJ
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Net::HTTPURITooLong::CODE_CLASS_TO_OBJ
# Did you mean?  Net::HTTPURITooLong::CODE_TO_OBJ
# uninitialized constant Net::HTTPURITooLong::CODE_TO_OBJ
# Did you mean?  Net::HTTPURITooLong::CODE_CLASS_TO_OBJ
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Net::HTTPVariantAlsoNegotiates::CODE_CLASS_TO_OBJ
# Did you mean?  Net::HTTPVariantAlsoNegotiates::CODE_TO_OBJ
# uninitialized constant Net::HTTPVariantAlsoNegotiates::CODE_TO_OBJ
# Did you mean?  Net::HTTPVariantAlsoNegotiates::CODE_CLASS_TO_OBJ
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Net::IMAP
# uninitialized constant Net::IMAP
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name io
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Net::SMTP
# uninitialized constant Net::SMTP
# uninitialized constant Net::SMTPAuthenticationError
# uninitialized constant Net::SMTPAuthenticationError
# uninitialized constant Net::SMTPError
# Did you mean?  Net::HTTPError
# uninitialized constant Net::SMTPError
# Did you mean?  Net::HTTPError
# uninitialized constant Net::SMTPFatalError
# Did you mean?  Net::ProtoFatalError
#                Net::HTTPFatalError
# uninitialized constant Net::SMTPFatalError
# Did you mean?  Net::ProtoFatalError
#                Net::HTTPFatalError
# uninitialized constant Net::SMTPServerBusy
# uninitialized constant Net::SMTPServerBusy
# uninitialized constant Net::SMTPSyntaxError
# Did you mean?  Net::ProtoSyntaxError
# uninitialized constant Net::SMTPSyntaxError
# Did you mean?  Net::ProtoSyntaxError
# uninitialized constant Net::SMTPUnknownError
# uninitialized constant Net::SMTPUnknownError
# uninitialized constant Net::SMTPUnsupportedCommand
# uninitialized constant Net::SMTPUnsupportedCommand
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name io
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Newton
# uninitialized constant Newton
# wrong constant name to_d
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name key
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name matchee
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Nokogiri::CSS::Parser::Racc_Main_Parsing_Routine
# uninitialized constant Nokogiri::CSS::Parser::Racc_Runtime_Core_Id_C
# Did you mean?  Nokogiri::CSS::Parser::Racc_Runtime_Core_Version_C
# uninitialized constant Nokogiri::CSS::Parser::Racc_Runtime_Core_Version
# Did you mean?  Nokogiri::CSS::Parser::Racc_Runtime_Core_Version_R
#                Nokogiri::CSS::Parser::Racc_Runtime_Core_Version_C
#                Nokogiri::CSS::Parser::Racc_Runtime_Version
#                Nokogiri::CSS::Parser::Racc_Runtime_Core_Id_C
# uninitialized constant Nokogiri::CSS::Parser::Racc_Runtime_Core_Version_C
# Did you mean?  Nokogiri::CSS::Parser::Racc_Runtime_Core_Version_R
#                Nokogiri::CSS::Parser::Racc_Runtime_Version
#                Nokogiri::CSS::Parser::Racc_Runtime_Core_Id_C
# uninitialized constant Nokogiri::CSS::Parser::Racc_Runtime_Core_Version_R
# Did you mean?  Nokogiri::CSS::Parser::Racc_Runtime_Core_Version_C
#                Nokogiri::CSS::Parser::Racc_Runtime_Version
#                Nokogiri::CSS::Parser::Racc_Runtime_Core_Id_C
# uninitialized constant Nokogiri::CSS::Parser::Racc_Runtime_Type
# Did you mean?  Nokogiri::CSS::Parser::Racc_Runtime_Version
# uninitialized constant Nokogiri::CSS::Parser::Racc_Runtime_Version
# Did you mean?  Nokogiri::CSS::Parser::Racc_Runtime_Core_Version
# uninitialized constant Nokogiri::CSS::Parser::Racc_YY_Parse_Method
# wrong constant name <Class:Element>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Nokogiri::XML::Builder::VALID_NAMESPACES
# uninitialized constant Nokogiri::XML::Document::ATTRIBUTE_DECL
# Did you mean?  Nokogiri::XML::AttributeDecl
#                Nokogiri::XML::Document::ATTRIBUTE_NODE
# uninitialized constant Nokogiri::XML::Document::ATTRIBUTE_NODE
# Did you mean?  Nokogiri::XML::Document::ATTRIBUTE_DECL
# uninitialized constant Nokogiri::XML::Document::CDATA_SECTION_NODE
# uninitialized constant Nokogiri::XML::Document::COMMENT_NODE
# Did you mean?  Nokogiri::XML::Document::DOCUMENT_NODE
# uninitialized constant Nokogiri::XML::Document::DOCB_DOCUMENT_NODE
# Did you mean?  Nokogiri::XML::Document::DOCUMENT_NODE
# uninitialized constant Nokogiri::XML::Document::DOCUMENT_FRAG_NODE
# Did you mean?  Nokogiri::XML::Document::DOCUMENT_TYPE_NODE
#                Nokogiri::XML::Document::DOCUMENT_NODE
# uninitialized constant Nokogiri::XML::Document::DOCUMENT_NODE
# Did you mean?  Nokogiri::XML::Document::COMMENT_NODE
# uninitialized constant Nokogiri::XML::Document::DOCUMENT_TYPE_NODE
# Did you mean?  Nokogiri::XML::Document::DOCUMENT_FRAG_NODE
#                Nokogiri::XML::Document::DOCUMENT_NODE
# uninitialized constant Nokogiri::XML::Document::DTD_NODE
# uninitialized constant Nokogiri::XML::Document::ELEMENT_DECL
# Did you mean?  Nokogiri::XML::ElementDecl
# uninitialized constant Nokogiri::XML::Document::ELEMENT_NODE
# Did you mean?  Nokogiri::XML::ElementContent
# uninitialized constant Nokogiri::XML::Document::ENTITY_DECL
# Did you mean?  Nokogiri::XML::EntityDecl
# uninitialized constant Nokogiri::XML::Document::ENTITY_NODE
# Did you mean?  Nokogiri::XML::EntityDecl
# uninitialized constant Nokogiri::XML::Document::ENTITY_REF_NODE
# Did you mean?  Nokogiri::XML::Document::ENTITY_NODE
# uninitialized constant Nokogiri::XML::Document::HTML_DOCUMENT_NODE
# uninitialized constant Nokogiri::XML::Document::LOOKS_LIKE_XPATH
# uninitialized constant Nokogiri::XML::Document::NAMESPACE_DECL
# Did you mean?  Nokogiri::XML::Namespace
# uninitialized constant Nokogiri::XML::Document::NOTATION_NODE
# Did you mean?  Nokogiri::XML::Notation
# uninitialized constant Nokogiri::XML::Document::PI_NODE
# uninitialized constant Nokogiri::XML::Document::TEXT_NODE
# uninitialized constant Nokogiri::XML::Document::VALID_NAMESPACES
# uninitialized constant Nokogiri::XML::Document::XINCLUDE_END
# Did you mean?  Nokogiri::XML::Document::XINCLUDE_START
# uninitialized constant Nokogiri::XML::Document::XINCLUDE_START
# Did you mean?  Nokogiri::XML::Document::XINCLUDE_END
# uninitialized constant Nokogiri::XML::Element::ATTRIBUTE_DECL
# Did you mean?  Nokogiri::XML::AttributeDecl
#                Nokogiri::XML::Element::ATTRIBUTE_NODE
# uninitialized constant Nokogiri::XML::Element::ATTRIBUTE_NODE
# Did you mean?  Nokogiri::XML::Element::ATTRIBUTE_DECL
# uninitialized constant Nokogiri::XML::Element::CDATA_SECTION_NODE
# uninitialized constant Nokogiri::XML::Element::COMMENT_NODE
# Did you mean?  Nokogiri::XML::Element::DOCUMENT_NODE
# uninitialized constant Nokogiri::XML::Element::DOCB_DOCUMENT_NODE
# Did you mean?  Nokogiri::XML::Element::DOCUMENT_NODE
# uninitialized constant Nokogiri::XML::Element::DOCUMENT_FRAG_NODE
# Did you mean?  Nokogiri::XML::Element::DOCUMENT_TYPE_NODE
#                Nokogiri::XML::Element::DOCUMENT_NODE
# uninitialized constant Nokogiri::XML::Element::DOCUMENT_NODE
# Did you mean?  Nokogiri::XML::Element::COMMENT_NODE
# uninitialized constant Nokogiri::XML::Element::DOCUMENT_TYPE_NODE
# Did you mean?  Nokogiri::XML::Element::DOCUMENT_FRAG_NODE
#                Nokogiri::XML::Element::DOCUMENT_NODE
# uninitialized constant Nokogiri::XML::Element::DTD_NODE
# uninitialized constant Nokogiri::XML::Element::ELEMENT_DECL
# Did you mean?  Nokogiri::XML::ElementDecl
# uninitialized constant Nokogiri::XML::Element::ELEMENT_NODE
# Did you mean?  Nokogiri::XML::ElementContent
# uninitialized constant Nokogiri::XML::Element::ENTITY_DECL
# Did you mean?  Nokogiri::XML::EntityDecl
# uninitialized constant Nokogiri::XML::Element::ENTITY_NODE
# Did you mean?  Nokogiri::XML::EntityDecl
# uninitialized constant Nokogiri::XML::Element::ENTITY_REF_NODE
# Did you mean?  Nokogiri::XML::Element::ENTITY_NODE
# uninitialized constant Nokogiri::XML::Element::Elem
# uninitialized constant Nokogiri::XML::Element::HTML_DOCUMENT_NODE
# uninitialized constant Nokogiri::XML::Element::IMPLIED_XPATH_CONTEXTS
# uninitialized constant Nokogiri::XML::Element::LOOKS_LIKE_XPATH
# uninitialized constant Nokogiri::XML::Element::NAMESPACE_DECL
# Did you mean?  Nokogiri::XML::Namespace
# uninitialized constant Nokogiri::XML::Element::NOTATION_NODE
# Did you mean?  Nokogiri::XML::Notation
# uninitialized constant Nokogiri::XML::Element::PI_NODE
# uninitialized constant Nokogiri::XML::Element::TEXT_NODE
# uninitialized constant Nokogiri::XML::Element::VALID_NAMESPACES
# uninitialized constant Nokogiri::XML::Element::XINCLUDE_END
# Did you mean?  Nokogiri::XML::Element::XINCLUDE_START
# uninitialized constant Nokogiri::XML::Element::XINCLUDE_START
# Did you mean?  Nokogiri::XML::Element::XINCLUDE_END
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Nokogiri::XML::EntityDecl::ATTRIBUTE_DECL
# Did you mean?  Nokogiri::XML::AttributeDecl
#                Nokogiri::XML::EntityDecl::ATTRIBUTE_NODE
# uninitialized constant Nokogiri::XML::EntityDecl::ATTRIBUTE_NODE
# Did you mean?  Nokogiri::XML::EntityDecl::ATTRIBUTE_DECL
# uninitialized constant Nokogiri::XML::EntityDecl::CDATA_SECTION_NODE
# uninitialized constant Nokogiri::XML::EntityDecl::COMMENT_NODE
# Did you mean?  Nokogiri::XML::EntityDecl::DOCUMENT_NODE
# uninitialized constant Nokogiri::XML::EntityDecl::DOCB_DOCUMENT_NODE
# Did you mean?  Nokogiri::XML::EntityDecl::DOCUMENT_NODE
# uninitialized constant Nokogiri::XML::EntityDecl::DOCUMENT_FRAG_NODE
# Did you mean?  Nokogiri::XML::EntityDecl::DOCUMENT_TYPE_NODE
#                Nokogiri::XML::EntityDecl::DOCUMENT_NODE
# uninitialized constant Nokogiri::XML::EntityDecl::DOCUMENT_NODE
# Did you mean?  Nokogiri::XML::EntityDecl::COMMENT_NODE
# uninitialized constant Nokogiri::XML::EntityDecl::DOCUMENT_TYPE_NODE
# Did you mean?  Nokogiri::XML::EntityDecl::DOCUMENT_FRAG_NODE
#                Nokogiri::XML::EntityDecl::DOCUMENT_NODE
# uninitialized constant Nokogiri::XML::EntityDecl::DTD_NODE
# uninitialized constant Nokogiri::XML::EntityDecl::ELEMENT_DECL
# Did you mean?  Nokogiri::XML::ElementDecl
# uninitialized constant Nokogiri::XML::EntityDecl::ELEMENT_NODE
# Did you mean?  Nokogiri::XML::ElementContent
# uninitialized constant Nokogiri::XML::EntityDecl::ENTITY_DECL
# uninitialized constant Nokogiri::XML::EntityDecl::ENTITY_NODE
# uninitialized constant Nokogiri::XML::EntityDecl::ENTITY_REF_NODE
# Did you mean?  Nokogiri::XML::EntityDecl::ENTITY_NODE
# uninitialized constant Nokogiri::XML::EntityDecl::HTML_DOCUMENT_NODE
# uninitialized constant Nokogiri::XML::EntityDecl::IMPLIED_XPATH_CONTEXTS
# uninitialized constant Nokogiri::XML::EntityDecl::LOOKS_LIKE_XPATH
# uninitialized constant Nokogiri::XML::EntityDecl::NAMESPACE_DECL
# Did you mean?  Nokogiri::XML::Namespace
# uninitialized constant Nokogiri::XML::EntityDecl::NOTATION_NODE
# Did you mean?  Nokogiri::XML::Notation
# uninitialized constant Nokogiri::XML::EntityDecl::PI_NODE
# uninitialized constant Nokogiri::XML::EntityDecl::TEXT_NODE
# uninitialized constant Nokogiri::XML::EntityDecl::VALID_NAMESPACES
# uninitialized constant Nokogiri::XML::EntityDecl::XINCLUDE_END
# Did you mean?  Nokogiri::XML::EntityDecl::XINCLUDE_START
# uninitialized constant Nokogiri::XML::EntityDecl::XINCLUDE_START
# Did you mean?  Nokogiri::XML::EntityDecl::XINCLUDE_END
# uninitialized constant Nokogiri::XML::Node::LOOKS_LIKE_XPATH
# uninitialized constant Nokogiri::XML::Node::VALID_NAMESPACES
# uninitialized constant Nokogiri::XML::NodeSet::LOOKS_LIKE_XPATH
# uninitialized constant RUBYGEMS_ACTIVATION_MONITOR
# wrong constant name html_safe?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_yaml
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name yaml_tag
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Object>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Observable
# uninitialized constant Observable
# wrong constant name indefinite_length
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name indefinite_length=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name +@
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name -@
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name /
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name abs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name get_flags
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name negative?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_flags
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Buffer>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name getbyte
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <<
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant OpenSSL::Buffering::Buffer::BLANK_RE
# uninitialized constant OpenSSL::Buffering::Buffer::ENCODED_BLANKS
# wrong constant name concat
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ccm_data_len=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant OpenSSL::Digest::DSS
# uninitialized constant OpenSSL::Digest::DSS
# uninitialized constant OpenSSL::Digest::DSS1
# uninitialized constant OpenSSL::Digest::DSS1
# uninitialized constant OpenSSL::Digest::MD2
# Did you mean?  OpenSSL::Digest::MD4
#                OpenSSL::Digest::MD5
# uninitialized constant OpenSSL::Digest::MD2
# Did you mean?  OpenSSL::Digest::MD4
#                OpenSSL::Digest::MD5
# uninitialized constant OpenSSL::Digest::MDC2
# uninitialized constant OpenSSL::Digest::MDC2
# uninitialized constant OpenSSL::Digest::SHA
# Did you mean?  OpenSSL::Digest::SHA1
# uninitialized constant OpenSSL::Digest::SHA
# Did you mean?  OpenSSL::Digest::SHA1
# wrong constant name ==
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name base64digest
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name base64digest
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:KDFError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name hkdf
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pbkdf2_hmac
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scrypt
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:ClassMethods>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _dump
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _load
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name included
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name signed?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant OpenSSL::PKCS5::PKCS5Error
# uninitialized constant OpenSSL::PKCS5::PKCS5Error
# wrong constant name new
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name new
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name add
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_octet_string
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name compare?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name decrypt
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name derive
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name encrypt
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name oid
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name private_to_der
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name private_to_pem
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name public_to_der
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name public_to_pem
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name sign_raw
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_text
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name verify_raw
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name verify_recover
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name new
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name generate_key
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name generate_parameters
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name alpn_protocols
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name alpn_protocols=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name alpn_select_cb
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name alpn_select_cb=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name enable_fallback_scsv
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name max_version=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name min_version=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tmp_dh=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant OpenSSL::SSL::SSLSocket::BLOCK_SIZE
# wrong constant name alpn_protocol
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name finished_message
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name peer_finished_message
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tmp_key
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name open
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fileno
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Factory>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Request>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Response>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:TimestampError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:TokenInfo>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name additional_certs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name additional_certs=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name allowed_digests
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name allowed_digests=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name create_timestamp
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default_policy_id
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default_policy_id=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gen_time
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gen_time=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name serial_number
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name serial_number=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name algorithm
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name algorithm=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cert_requested=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cert_requested?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name message_imprint
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name message_imprint=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name nonce
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name nonce=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name policy_id
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name policy_id=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_der
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name version=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name failure_info
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name status
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name status_text
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_der
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name token
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name token_info
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tsa_certificate
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name verify
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name algorithm
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gen_time
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name message_imprint
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name nonce
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ordering
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name policy_id
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name serial_number
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_der
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ==
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ==
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name load
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name load_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ==
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:AuthorityInfoAccess>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:AuthorityKeyIdentifier>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:CRLDistributionPoints>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Helpers>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:SubjectKeyIdentifier>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name value_der
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ca_issuer_uris
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ocsp_uris
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name authority_key_identifier
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name crl_uris
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name find_extension
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name subject_key_identifier
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_utf8
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ==
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ==
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_der
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fips_mode
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fixed_length_secure_compare
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name secure_compare
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name __id__!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name __send__!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name class!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name clone!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name define_singleton_method!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name delete_field!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dig!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name display!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dup!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each_pair!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name encode_with
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name encode_with!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name enum_for!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name extend!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name freeze!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name hash!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name init_with
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name init_with!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name inspect!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name instance_eval!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name instance_exec!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name instance_variable_get!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name instance_variable_set!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name instance_variables!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name itself!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name marshal_dump!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name method!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name methods!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name object_id!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name private_methods!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name protected_methods!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name public_method!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name public_methods!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name public_send!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remove_instance_variable!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name send!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name singleton_class!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name singleton_method!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name singleton_methods!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name taint!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tap!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name then!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_enum!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_h!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_s!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name trust!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name untaint!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name untrust!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name yield_self!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant OpenURI
# Did you mean?  Open3
# uninitialized constant OpenURI
# Did you mean?  Open3
# wrong constant name additional_message
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name require_exact
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name require_exact=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name get_candidates
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name additional
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name additional=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name width_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant PStore
# uninitialized constant PStore
# uninitialized constant PTY
# Did you mean?  Pry
# uninitialized constant PTY
# Did you mean?  Pry
# uninitialized constant PackageSpec
# uninitialized constant PackageSpec
# wrong constant name <Class:PackageSpec>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Parser::Ruby31::Racc_Main_Parsing_Routine
# uninitialized constant Parser::Ruby31::Racc_Runtime_Core_Id_C
# Did you mean?  Parser::Ruby31::Racc_Runtime_Core_Version_C
# uninitialized constant Parser::Ruby31::Racc_Runtime_Core_Version
# Did you mean?  Parser::Ruby31::Racc_Runtime_Core_Version_R
#                Parser::Ruby31::Racc_Runtime_Core_Version_C
#                Parser::Ruby31::Racc_Runtime_Version
#                Parser::Ruby31::Racc_Runtime_Core_Id_C
# uninitialized constant Parser::Ruby31::Racc_Runtime_Core_Version_C
# Did you mean?  Parser::Ruby31::Racc_Runtime_Core_Version_R
#                Parser::Ruby31::Racc_Runtime_Version
#                Parser::Ruby31::Racc_Runtime_Core_Id_C
# uninitialized constant Parser::Ruby31::Racc_Runtime_Core_Version_R
# Did you mean?  Parser::Ruby31::Racc_Runtime_Core_Version_C
#                Parser::Ruby31::Racc_Runtime_Version
#                Parser::Ruby31::Racc_Runtime_Core_Id_C
# uninitialized constant Parser::Ruby31::Racc_Runtime_Type
# Did you mean?  Parser::Ruby31::Racc_Runtime_Version
# uninitialized constant Parser::Ruby31::Racc_Runtime_Version
# Did you mean?  Parser::Ruby31::Racc_Runtime_Core_Version
# uninitialized constant Parser::Ruby31::Racc_YY_Parse_Method
# wrong constant name attr_predicate
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Prime
# uninitialized constant Prime
# wrong constant name <<
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name >>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name clone
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Proc0
# uninitialized constant Proc0
# uninitialized constant Proc1
# uninitialized constant Proc1
# uninitialized constant Proc10
# uninitialized constant Proc10
# uninitialized constant Proc2
# uninitialized constant Proc2
# uninitialized constant Proc3
# uninitialized constant Proc3
# uninitialized constant Proc4
# uninitialized constant Proc4
# uninitialized constant Proc5
# uninitialized constant Proc5
# uninitialized constant Proc6
# uninitialized constant Proc6
# uninitialized constant Proc7
# uninitialized constant Proc7
# uninitialized constant Proc8
# uninitialized constant Proc8
# uninitialized constant Proc9
# uninitialized constant Proc9
# wrong constant name wait
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name keyword_init?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _fork
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fork
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant ProgressBar::Format::String::BLANK_RE
# uninitialized constant ProgressBar::Format::String::ENCODED_BLANKS
# uninitialized constant ProgressBar::Outputs::NonTty::DEFAULT_OUTPUT_STREAM
# Did you mean?  ProgressBar::Outputs::NonTty::DEFAULT_FORMAT_STRING
# uninitialized constant ProgressBar::Outputs::Tty::DEFAULT_OUTPUT_STREAM
# Did you mean?  ProgressBar::Outputs::Tty::DEFAULT_FORMAT_STRING
# uninitialized constant Pry::BasicObject::RUBYGEMS_ACTIVATION_MONITOR
# uninitialized constant Pry::Command::COLORS
# uninitialized constant Pry::Command::Ls::COLORS
# uninitialized constant Pry::Command::Ls::VOID_VALUE
# uninitialized constant Pry::Command::Wtf::COLORS
# uninitialized constant Pry::Command::Wtf::VOID_VALUE
# uninitialized constant Psych::UnsafeYAML
# uninitialized constant Psych::UnsafeYAML
# wrong constant name visit_Symbol
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dispatch_cache
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name add_builtin_type
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name add_domain_type
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name add_tag
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name config
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name domain_types
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name domain_types=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dump_tags
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dump_tags=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name libyaml_version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name load_tags
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name load_tags=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remove_type
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name safe_dump
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name safe_load_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unsafe_load
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unsafe_load_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant RDoc
# uninitialized constant RDoc
# uninitialized constant REXML::Parsers::XPathParser::NAME
# Did you mean?  REXML::Parsers::XPathParser::QNAME
# uninitialized constant REXML::Parsers::XPathParser::NAMECHAR
# Did you mean?  REXML::Parsers::XPathParser::NAME_CHAR
# uninitialized constant REXML::Parsers::XPathParser::NAME_CHAR
# Did you mean?  REXML::Parsers::XPathParser::NAME_STR
#                REXML::Parsers::XPathParser::NAMECHAR
# uninitialized constant REXML::Parsers::XPathParser::NAME_START_CHAR
# Did you mean?  REXML::Namespace
# uninitialized constant REXML::Parsers::XPathParser::NAME_STR
# Did you mean?  REXML::Parsers::XPathParser::NCNAME_STR
# uninitialized constant REXML::Parsers::XPathParser::NCNAME_STR
# Did you mean?  REXML::Parsers::XPathParser::NAME_STR
# uninitialized constant REXML::Parsers::XPathParser::NMTOKEN
# Did you mean?  REXML::Parsers::XPathParser::NMTOKENS
# uninitialized constant REXML::Parsers::XPathParser::NMTOKENS
# Did you mean?  REXML::XMLTokens
# uninitialized constant REXML::Parsers::XPathParser::REFERENCE
# Did you mean?  REXML::ReferenceWriter
# uninitialized constant REXML::QuickPath
# uninitialized constant REXML::QuickPath
# uninitialized constant REXML::SAX2Listener
# uninitialized constant REXML::SAX2Listener
# uninitialized constant REXML::StreamListener
# uninitialized constant REXML::StreamListener
# uninitialized constant REXML::SyncEnumerator
# uninitialized constant REXML::SyncEnumerator
# uninitialized constant REXML::XPathParser::NAME
# uninitialized constant REXML::XPathParser::NAMECHAR
# Did you mean?  REXML::XPathParser::NAME_CHAR
# uninitialized constant REXML::XPathParser::NAME_CHAR
# Did you mean?  REXML::XPathParser::NAME_STR
#                REXML::XPathParser::NAMECHAR
# uninitialized constant REXML::XPathParser::NAME_START_CHAR
# Did you mean?  REXML::Namespace
# uninitialized constant REXML::XPathParser::NAME_STR
# Did you mean?  REXML::XPathParser::NCNAME_STR
# uninitialized constant REXML::XPathParser::NCNAME_STR
# Did you mean?  REXML::XPathParser::NAME_STR
# uninitialized constant REXML::XPathParser::NMTOKEN
# Did you mean?  REXML::XPathParser::NMTOKENS
# uninitialized constant REXML::XPathParser::NMTOKENS
# Did you mean?  REXML::XMLTokens
# uninitialized constant REXML::XPathParser::REFERENCE
# Did you mean?  REXML::ReferenceWriter
# wrong constant name <Class:CparseParams>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Builder>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Request>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Rack::Auth::Digest::Params::DEFAULT_INDENT
# wrong constant name call
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name freeze_app
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name map
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name run
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_app
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name use
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name warmup
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name app
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name load_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name new_from_string
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name run
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name send_body
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name send_headers
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name serve
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name run
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name shutdown
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name valid_options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Generator>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:UploadedFile>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dump
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name content_type
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name content_type=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name local_path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name method_missing
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name original_filename
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name respond_to?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Rack::Request::DEFAULT_PORTS
# wrong constant name <Class:Env>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Rack::Request::FORM_DATA_MEDIA_TYPES
# uninitialized constant Rack::Request::HTTP_X_FORWARDED_FOR
# Did you mean?  Rack::Request::HTTP_X_FORWARDED_SSL
#                Rack::Request::HTTP_X_FORWARDED_HOST
#                Rack::Request::HTTP_X_FORWARDED_PORT
#                Rack::Request::HTTP_X_FORWARDED_PROTO
# uninitialized constant Rack::Request::HTTP_X_FORWARDED_HOST
# Did you mean?  Rack::Request::HTTP_X_FORWARDED_FOR
#                Rack::Request::HTTP_X_FORWARDED_SSL
#                Rack::Request::HTTP_X_FORWARDED_PORT
#                Rack::Request::HTTP_X_FORWARDED_PROTO
#                Rack::Request::HTTP_X_FORWARDED_SCHEME
# uninitialized constant Rack::Request::HTTP_X_FORWARDED_PORT
# Did you mean?  Rack::Request::HTTP_X_FORWARDED_FOR
#                Rack::Request::HTTP_X_FORWARDED_SSL
#                Rack::Request::HTTP_X_FORWARDED_HOST
#                Rack::Request::HTTP_X_FORWARDED_PROTO
#                Rack::Request::HTTP_X_FORWARDED_SCHEME
# uninitialized constant Rack::Request::HTTP_X_FORWARDED_PROTO
# Did you mean?  Rack::Request::HTTP_X_FORWARDED_FOR
#                Rack::Request::HTTP_X_FORWARDED_SSL
#                Rack::Request::HTTP_X_FORWARDED_HOST
#                Rack::Request::HTTP_X_FORWARDED_PORT
#                Rack::Request::HTTP_X_FORWARDED_SCHEME
# uninitialized constant Rack::Request::HTTP_X_FORWARDED_SCHEME
# Did you mean?  Rack::Request::HTTP_X_FORWARDED_FOR
#                Rack::Request::HTTP_X_FORWARDED_SSL
#                Rack::Request::HTTP_X_FORWARDED_HOST
#                Rack::Request::HTTP_X_FORWARDED_PORT
#                Rack::Request::HTTP_X_FORWARDED_PROTO
# uninitialized constant Rack::Request::HTTP_X_FORWARDED_SSL
# Did you mean?  Rack::Request::HTTP_X_FORWARDED_FOR
#                Rack::Request::HTTP_X_FORWARDED_HOST
#                Rack::Request::HTTP_X_FORWARDED_PORT
#                Rack::Request::HTTP_X_FORWARDED_PROTO
#                Rack::Request::HTTP_X_FORWARDED_SCHEME
# wrong constant name <Class:Helpers>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Rack::Request::PARSEABLE_DATA_MEDIA_TYPES
# wrong constant name add_header
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name delete_header
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each_header
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name env
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fetch_header
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name get_header
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name has_header?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_header
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Rack::Request::Helpers::GET
# Did you mean?  Set
#                Net
#                Gem
# uninitialized constant Rack::Request::Helpers::POST
# wrong constant name []
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name []=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name accept_encoding
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name accept_language
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name authority
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name base_url
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name body
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name content_charset
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name content_length
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name content_type
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cookies
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name delete?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name delete_param
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name form_data?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name forwarded_authority
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name forwarded_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name forwarded_port
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fullpath
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name get?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name head?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name host
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name host_authority
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name host_with_port
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name hostname
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ip
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name link?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name logger
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name media_type
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name media_type_params
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name multithread?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name options?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name params
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parseable_data?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name patch?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name path_info
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name path_info=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name port
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name post?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name put?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name query_string
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name referer
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name referrer
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name request_method
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scheme
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name script_name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name script_name=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name server_authority
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name server_name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name server_port
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name session
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name session_options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ssl?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name trace?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name trusted_proxy?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unlink?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name update_param
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name url
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name user_agent
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name values_at
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name xhr?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ip_filter
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ip_filter=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant VERSION
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name !
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name !=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ==
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name __id__
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name equal?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ractor
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name new
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Random::Base::ALPHANUMERIC
# Did you mean?  Numeric
# wrong constant name bytes
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name seed
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name bytes
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name seed
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name %
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name entries
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_a
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name expand
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fire_update!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ruby
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Readline
# uninitialized constant Readline
# uninitialized constant Refinement::DELEGATION_RESERVED_KEYWORDS
# Did you mean?  Refinement::DelegationError
# uninitialized constant Refinement::DELEGATION_RESERVED_METHOD_NAMES
# Did you mean?  Refinement::DELEGATION_RESERVED_KEYWORDS
# uninitialized constant Refinement::RUBY_RESERVED_KEYWORDS
# Did you mean?  RUBY_RELEASE_DATE
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name extract_resources
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name lazy_initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name lazy_initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Resolv::DNS::Resource::LOC::ClassHash
# uninitialized constant Resolv::DNS::Resource::LOC::ClassInsensitiveTypes
# uninitialized constant Resolv::DNS::Resource::LOC::ClassValue
# Did you mean?  Resolv::DNS::Resource::LOC::ClassHash
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name allocate_request_id
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name bind_random_port
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name free_request_id
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name random
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Rinda
# uninitialized constant Rinda
# uninitialized constant Ripper
# uninitialized constant Ripper
# wrong constant name <Class:Colorizer>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:InstrumentationSubcompiler>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:NodePatternSubcompiler>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:SequenceSubcompiler>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Trace>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name comments
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name node_ids
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tokens
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Result>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name compiler
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name node_pattern
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pattern
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name test
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant RuboCop::AST::NodePattern::Compiler::Debug::Colorizer::Result::Elem
# wrong constant name color_map
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name colorize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name colorizer
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name colorizer=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name match_map
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name matched?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name returned
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name returned=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ruby_ast
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ruby_ast=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name trace
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name trace=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name []
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name keyword_init?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name members
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name do_compile
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant RuboCop::AST::NodePattern::Compiler::Debug::SequenceSubcompiler::DELTA
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name enter
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name matched?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name success
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant RuboCop::AST::NodePattern::Node::Repetition::MAP
# Did you mean?  Math
# uninitialized constant RuboCop::AST::NodePattern::Parser::Racc_Main_Parsing_Routine
# uninitialized constant RuboCop::AST::NodePattern::Parser::Racc_Runtime_Core_Id_C
# Did you mean?  RuboCop::AST::NodePattern::Parser::Racc_Runtime_Core_Version_C
# uninitialized constant RuboCop::AST::NodePattern::Parser::Racc_Runtime_Core_Version
# Did you mean?  RuboCop::AST::NodePattern::Parser::Racc_Runtime_Core_Version_R
#                RuboCop::AST::NodePattern::Parser::Racc_Runtime_Core_Version_C
#                RuboCop::AST::NodePattern::Parser::Racc_Runtime_Version
#                RuboCop::AST::NodePattern::Parser::Racc_Runtime_Core_Id_C
# uninitialized constant RuboCop::AST::NodePattern::Parser::Racc_Runtime_Core_Version_C
# Did you mean?  RuboCop::AST::NodePattern::Parser::Racc_Runtime_Core_Version_R
#                RuboCop::AST::NodePattern::Parser::Racc_Runtime_Version
#                RuboCop::AST::NodePattern::Parser::Racc_Runtime_Core_Id_C
# uninitialized constant RuboCop::AST::NodePattern::Parser::Racc_Runtime_Core_Version_R
# Did you mean?  RuboCop::AST::NodePattern::Parser::Racc_Runtime_Core_Version_C
#                RuboCop::AST::NodePattern::Parser::Racc_Runtime_Version
#                RuboCop::AST::NodePattern::Parser::Racc_Runtime_Core_Id_C
# uninitialized constant RuboCop::AST::NodePattern::Parser::Racc_Runtime_Type
# Did you mean?  RuboCop::AST::NodePattern::Parser::Racc_Runtime_Version
# uninitialized constant RuboCop::AST::NodePattern::Parser::Racc_Runtime_Version
# Did you mean?  RuboCop::AST::NodePattern::Parser::Racc_Runtime_Core_Version
# uninitialized constant RuboCop::AST::NodePattern::Parser::Racc_YY_Parse_Method
# wrong constant name <Class:WithMeta>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Builder>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Lexer>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant RuboCop::AST::NodePattern::Parser::WithMeta::Racc_Main_Parsing_Routine
# uninitialized constant RuboCop::AST::NodePattern::Parser::WithMeta::Racc_Runtime_Core_Id_C
# Did you mean?  RuboCop::AST::NodePattern::Parser::WithMeta::Racc_Runtime_Core_Version_C
#                RuboCop::AST::NodePattern::Parser::Racc_Runtime_Core_Version_C
# uninitialized constant RuboCop::AST::NodePattern::Parser::WithMeta::Racc_Runtime_Core_Version
# Did you mean?  RuboCop::AST::NodePattern::Parser::WithMeta::Racc_Runtime_Core_Version_R
#                RuboCop::AST::NodePattern::Parser::Racc_Runtime_Core_Version_C
#                RuboCop::AST::NodePattern::Parser::Racc_Runtime_Core_Version_R
#                RuboCop::AST::NodePattern::Parser::WithMeta::Racc_Runtime_Core_Version_C
#                RuboCop::AST::NodePattern::Parser::Racc_Runtime_Version
#                RuboCop::AST::NodePattern::Parser::WithMeta::Racc_Runtime_Version
#                RuboCop::AST::NodePattern::Parser::Racc_Runtime_Core_Id_C
#                RuboCop::AST::NodePattern::Parser::WithMeta::Racc_Runtime_Core_Id_C
# uninitialized constant RuboCop::AST::NodePattern::Parser::WithMeta::Racc_Runtime_Core_Version_C
# Did you mean?  RuboCop::AST::NodePattern::Parser::Racc_Runtime_Core_Version_R
#                RuboCop::AST::NodePattern::Parser::WithMeta::Racc_Runtime_Core_Version_R
#                RuboCop::AST::NodePattern::Parser::Racc_Runtime_Core_Version
#                RuboCop::AST::NodePattern::Parser::WithMeta::Racc_Runtime_Version
#                RuboCop::AST::NodePattern::Parser::Racc_Runtime_Version
#                RuboCop::AST::NodePattern::Parser::WithMeta::Racc_Runtime_Core_Id_C
#                RuboCop::AST::NodePattern::Parser::Racc_Runtime_Core_Id_C
# uninitialized constant RuboCop::AST::NodePattern::Parser::WithMeta::Racc_Runtime_Core_Version_R
# Did you mean?  RuboCop::AST::NodePattern::Parser::Racc_Runtime_Core_Version_C
#                RuboCop::AST::NodePattern::Parser::WithMeta::Racc_Runtime_Core_Version_C
#                RuboCop::AST::NodePattern::Parser::Racc_Runtime_Core_Version
#                RuboCop::AST::NodePattern::Parser::Racc_Runtime_Version
#                RuboCop::AST::NodePattern::Parser::WithMeta::Racc_Runtime_Version
#                RuboCop::AST::NodePattern::Parser::Racc_Runtime_Core_Id_C
#                RuboCop::AST::NodePattern::Parser::WithMeta::Racc_Runtime_Core_Id_C
# uninitialized constant RuboCop::AST::NodePattern::Parser::WithMeta::Racc_Runtime_Type
# Did you mean?  RuboCop::AST::NodePattern::Parser::Racc_Runtime_Version
# uninitialized constant RuboCop::AST::NodePattern::Parser::WithMeta::Racc_Runtime_Version
# Did you mean?  RuboCop::AST::NodePattern::Parser::Racc_Runtime_Core_Version
#                RuboCop::AST::NodePattern::Parser::WithMeta::Racc_Runtime_Core_Version
# uninitialized constant RuboCop::AST::NodePattern::Parser::WithMeta::Racc_YY_Parse_Method
# uninitialized constant RuboCop::AST::NodePattern::Parser::WithMeta::Racc_arg
# uninitialized constant RuboCop::AST::NodePattern::Parser::WithMeta::Racc_debug_parser
# uninitialized constant RuboCop::AST::NodePattern::Parser::WithMeta::Racc_token_to_s_table
# wrong constant name comments
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tokens
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name emit_atom
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name emit_call
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name emit_list
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name emit_unary_op
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant RuboCop::AST::NodePattern::Parser::WithMeta::Lexer::CALL
# uninitialized constant RuboCop::AST::NodePattern::Parser::WithMeta::Lexer::CONST_NAME
# Did you mean?  RuboCop::AST::ConstNode
# uninitialized constant RuboCop::AST::NodePattern::Parser::WithMeta::Lexer::IDENTIFIER
# uninitialized constant RuboCop::AST::NodePattern::Parser::WithMeta::Lexer::NODE_TYPE
# uninitialized constant RuboCop::AST::NodePattern::Parser::WithMeta::Lexer::REGEXP
# Did you mean?  Regexp
# uninitialized constant RuboCop::AST::NodePattern::Parser::WithMeta::Lexer::REGEXP_BODY
# Did you mean?  RuboCop::AST::RegexpNode
# uninitialized constant RuboCop::AST::NodePattern::Parser::WithMeta::Lexer::SYMBOL_NAME
# Did you mean?  RuboCop::AST::SymbolNode
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pos
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant RuboCop::Cop::Base::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Bundler::DuplicatedGem::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Bundler::DuplicatedGem::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Bundler::DuplicatedGem::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Bundler::GemComment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Bundler::GemComment::NON_PUBLIC_MODIFIERS
# uninitialized constant RuboCop::Cop::Bundler::GemFilename::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Bundler::GemFilename::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Bundler::GemFilename::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Bundler::GemVersion::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Bundler::GemVersion::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Bundler::InsecureProtocolSource::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Bundler::InsecureProtocolSource::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Bundler::OrderedGems::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Bundler::OrderedGems::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Corrector::ACTIONS
# Did you mean?  RuboCop::Cop::Corrector::Action
# uninitialized constant RuboCop::Cop::Corrector::DEPRECATION_WARNING
# uninitialized constant RuboCop::Cop::Corrector::POLICY_TO_LEVEL
# uninitialized constant RuboCop::Cop::EndKeywordAlignment::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Gemspec::DateAssignment::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Gemspec::DateAssignment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Gemspec::DateAssignment::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Gemspec::DependencyVersion::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Gemspec::DependencyVersion::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Gemspec::DuplicatedAssignment::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Gemspec::DuplicatedAssignment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Gemspec::DuplicatedAssignment::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Gemspec::OrderedDependencies::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Gemspec::OrderedDependencies::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Gemspec::RequireMFA::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Gemspec::RequireMFA::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Gemspec::RequiredRubyVersion::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Gemspec::RequiredRubyVersion::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Gemspec::RubyVersionGlobalsUsage::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Gemspec::RubyVersionGlobalsUsage::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::AccessModifierIndentation::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::AccessModifierIndentation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::AccessModifierIndentation::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::AccessModifierIndentation::SPACE
# uninitialized constant RuboCop::Cop::Layout::ArgumentAlignment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::ArgumentAlignment::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::ArgumentAlignment::SPACE
# uninitialized constant RuboCop::Cop::Layout::ArrayAlignment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::ArrayAlignment::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::ArrayAlignment::SPACE
# uninitialized constant RuboCop::Cop::Layout::AssignmentIndentation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::AssignmentIndentation::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::AssignmentIndentation::SPACE
# uninitialized constant RuboCop::Cop::Layout::BeginEndAlignment::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::BeginEndAlignment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::BeginEndAlignment::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::BlockAlignment::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::BlockAlignment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::BlockAlignment::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::BlockEndNewline::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::BlockEndNewline::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::BlockEndNewline::SPACE
# uninitialized constant RuboCop::Cop::Layout::CaseIndentation::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::CaseIndentation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::CaseIndentation::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::CaseIndentation::SPACE
# uninitialized constant RuboCop::Cop::Layout::ClassStructure::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::ClassStructure::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::ClassStructure::VISIBILITY_SCOPES
# Did you mean?  RuboCop::Cop::VisibilityHelp
# uninitialized constant RuboCop::Cop::Layout::ClosingHeredocIndentation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::ClosingHeredocIndentation::OPENING_DELIMITER
# uninitialized constant RuboCop::Cop::Layout::ClosingHeredocIndentation::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::ClosingParenthesisIndentation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::ClosingParenthesisIndentation::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::ClosingParenthesisIndentation::SPACE
# uninitialized constant RuboCop::Cop::Layout::CommentIndentation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::CommentIndentation::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::CommentIndentation::SPACE
# uninitialized constant RuboCop::Cop::Layout::ConditionPosition::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::ConditionPosition::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::ConditionPosition::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::DefEndAlignment::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::DefEndAlignment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::DefEndAlignment::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::ElseAlignment::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::ElseAlignment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::ElseAlignment::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::ElseAlignment::SPACE
# uninitialized constant RuboCop::Cop::Layout::EmptyComment::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::EmptyComment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::EmptyComment::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::EmptyLineAfterGuardClause::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::EmptyLineAfterGuardClause::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::EmptyLineAfterGuardClause::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::EmptyLineAfterMagicComment::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::EmptyLineAfterMagicComment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::EmptyLineAfterMagicComment::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::EmptyLineAfterMultilineCondition::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::EmptyLineAfterMultilineCondition::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::EmptyLineAfterMultilineCondition::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::EmptyLineBetweenDefs::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::EmptyLineBetweenDefs::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::EmptyLineBetweenDefs::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::EmptyLines::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::EmptyLines::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::EmptyLines::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundAccessModifier::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundAccessModifier::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundAccessModifier::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundArguments::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundArguments::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundArguments::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundAttributeAccessor::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundAttributeAccessor::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundAttributeAccessor::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundBeginBody::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundBeginBody::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundBeginBody::MSG_DEFERRED
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundBeginBody::MSG_EXTRA
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundBeginBody::MSG_MISSING
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundBeginBody::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundBlockBody::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundBlockBody::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundBlockBody::MSG_DEFERRED
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundBlockBody::MSG_EXTRA
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundBlockBody::MSG_MISSING
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundBlockBody::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundBody::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundClassBody::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundClassBody::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundClassBody::MSG_DEFERRED
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundClassBody::MSG_EXTRA
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundClassBody::MSG_MISSING
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundClassBody::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundExceptionHandlingKeywords::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundExceptionHandlingKeywords::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundExceptionHandlingKeywords::MSG_DEFERRED
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundExceptionHandlingKeywords::MSG_EXTRA
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundExceptionHandlingKeywords::MSG_MISSING
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundExceptionHandlingKeywords::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundMethodBody::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundMethodBody::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundMethodBody::MSG_DEFERRED
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundMethodBody::MSG_EXTRA
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundMethodBody::MSG_MISSING
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundMethodBody::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundModuleBody::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundModuleBody::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundModuleBody::MSG_DEFERRED
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundModuleBody::MSG_EXTRA
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundModuleBody::MSG_MISSING
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundModuleBody::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::EndOfLine::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::EndOfLine::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::EndOfLine::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::ExtraSpacing::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::ExtraSpacing::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::ExtraSpacing::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::FirstArgumentIndentation::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::FirstArgumentIndentation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::FirstArgumentIndentation::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::FirstArgumentIndentation::SPACE
# uninitialized constant RuboCop::Cop::Layout::FirstArrayElementIndentation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::FirstArrayElementIndentation::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::FirstArrayElementIndentation::SPACE
# uninitialized constant RuboCop::Cop::Layout::FirstArrayElementLineBreak::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::FirstArrayElementLineBreak::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::FirstHashElementIndentation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::FirstHashElementIndentation::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::FirstHashElementIndentation::SPACE
# uninitialized constant RuboCop::Cop::Layout::FirstHashElementLineBreak::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::FirstHashElementLineBreak::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::FirstMethodArgumentLineBreak::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::FirstMethodArgumentLineBreak::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::FirstMethodParameterLineBreak::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::FirstMethodParameterLineBreak::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::FirstParameterIndentation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::FirstParameterIndentation::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::FirstParameterIndentation::SPACE
# uninitialized constant RuboCop::Cop::Layout::HashAlignment::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::HashAlignment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::HashAlignment::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::HeredocArgumentClosingParenthesis::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::HeredocArgumentClosingParenthesis::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::HeredocArgumentClosingParenthesis::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::HeredocIndentation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::HeredocIndentation::OPENING_DELIMITER
# uninitialized constant RuboCop::Cop::Layout::HeredocIndentation::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::IndentationConsistency::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::IndentationConsistency::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::IndentationConsistency::SPACE
# uninitialized constant RuboCop::Cop::Layout::IndentationStyle::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::IndentationStyle::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::IndentationStyle::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::IndentationStyle::SPACE
# uninitialized constant RuboCop::Cop::Layout::IndentationWidth::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::IndentationWidth::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::IndentationWidth::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::IndentationWidth::SPACE
# uninitialized constant RuboCop::Cop::Layout::InitialIndentation::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::InitialIndentation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::InitialIndentation::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::LeadingCommentSpace::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::LeadingCommentSpace::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::LeadingCommentSpace::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::LeadingEmptyLines::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::LeadingEmptyLines::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::LineEndStringConcatenationIndentation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::LineEndStringConcatenationIndentation::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::LineEndStringConcatenationIndentation::SPACE
# uninitialized constant RuboCop::Cop::Layout::LineLength::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::LineLength::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::LineLength::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::MultilineArrayBraceLayout::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::MultilineArrayBraceLayout::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::MultilineArrayLineBreaks::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::MultilineArrayLineBreaks::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::MultilineAssignmentLayout::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::MultilineAssignmentLayout::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::MultilineAssignmentLayout::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::MultilineBlockLayout::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::MultilineBlockLayout::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::MultilineBlockLayout::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::MultilineHashBraceLayout::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::MultilineHashBraceLayout::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::MultilineHashKeyLineBreaks::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::MultilineHashKeyLineBreaks::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::MultilineMethodArgumentLineBreaks::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::MultilineMethodArgumentLineBreaks::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::MultilineMethodCallBraceLayout::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::MultilineMethodCallBraceLayout::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::MultilineMethodDefinitionBraceLayout::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::MultilineMethodDefinitionBraceLayout::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::ParameterAlignment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::ParameterAlignment::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::ParameterAlignment::SPACE
# uninitialized constant RuboCop::Cop::Layout::RedundantLineBreak::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::RedundantLineBreak::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::RescueEnsureAlignment::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::RescueEnsureAlignment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::RescueEnsureAlignment::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::SingleLineBlockChain::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SingleLineBlockChain::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::SingleLineBlockChain::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::SpaceAfterColon::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::SpaceAfterColon::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::SpaceAfterMethodName::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceAfterMethodName::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::SpaceAfterMethodName::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::SpaceAfterNot::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceAfterNot::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::SpaceAroundEqualsInParameterDefault::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceAroundEqualsInParameterDefault::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::SpaceAroundEqualsInParameterDefault::NO_SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Layout::SpaceAroundEqualsInParameterDefault::SPACE_COMMAND
# uninitialized constant RuboCop::Cop::Layout::SpaceAroundEqualsInParameterDefault::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::SpaceAroundEqualsInParameterDefault::SINGLE_SPACE_REGEXP
# uninitialized constant RuboCop::Cop::Layout::SpaceAroundEqualsInParameterDefault::SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Layout::SpaceAroundEqualsInParameterDefault::NO_SPACE_COMMAND
# uninitialized constant RuboCop::Cop::Layout::SpaceAroundKeyword::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::SpaceAroundKeyword::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::SpaceAroundMethodCallOperator::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceAroundMethodCallOperator::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::SpaceAroundMethodCallOperator::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::SpaceAroundOperators::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceAroundOperators::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::SpaceAroundOperators::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::SpaceBeforeBlockBraces::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceBeforeBlockBraces::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::SpaceBeforeBlockBraces::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::SpaceBeforeBrackets::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceBeforeBrackets::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::SpaceBeforeComment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::SpaceBeforeComment::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::SpaceBeforeFirstArg::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceBeforeFirstArg::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::SpaceBeforeFirstArg::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::SpaceInLambdaLiteral::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceInLambdaLiteral::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::SpaceInLambdaLiteral::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideArrayLiteralBrackets::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideArrayLiteralBrackets::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideArrayLiteralBrackets::NO_SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Layout::SpaceInsideArrayLiteralBrackets::SPACE_COMMAND
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideArrayLiteralBrackets::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideArrayLiteralBrackets::SINGLE_SPACE_REGEXP
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideArrayLiteralBrackets::SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Layout::SpaceInsideArrayLiteralBrackets::NO_SPACE_COMMAND
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideArrayPercentLiteral::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideArrayPercentLiteral::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideArrayPercentLiteral::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideHashLiteralBraces::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideHashLiteralBraces::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideHashLiteralBraces::NO_SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Layout::SpaceInsideHashLiteralBraces::SPACE_COMMAND
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideHashLiteralBraces::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideHashLiteralBraces::SINGLE_SPACE_REGEXP
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideHashLiteralBraces::SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Layout::SpaceInsideHashLiteralBraces::NO_SPACE_COMMAND
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideParens::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideParens::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideParens::NO_SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Layout::SpaceInsideParens::SPACE_COMMAND
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideParens::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideParens::SINGLE_SPACE_REGEXP
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideParens::SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Layout::SpaceInsideParens::NO_SPACE_COMMAND
# uninitialized constant RuboCop::Cop::Layout::SpaceInsidePercentLiteralDelimiters::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceInsidePercentLiteralDelimiters::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::SpaceInsidePercentLiteralDelimiters::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideRangeLiteral::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideRangeLiteral::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideReferenceBrackets::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideReferenceBrackets::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideReferenceBrackets::NO_SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Layout::SpaceInsideReferenceBrackets::SPACE_COMMAND
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideReferenceBrackets::SINGLE_SPACE_REGEXP
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideReferenceBrackets::SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Layout::SpaceInsideReferenceBrackets::NO_SPACE_COMMAND
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideStringInterpolation::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideStringInterpolation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideStringInterpolation::NO_SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Layout::SpaceInsideStringInterpolation::SPACE_COMMAND
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideStringInterpolation::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideStringInterpolation::SINGLE_SPACE_REGEXP
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideStringInterpolation::SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Layout::SpaceInsideStringInterpolation::NO_SPACE_COMMAND
# uninitialized constant RuboCop::Cop::Layout::TrailingWhitespace::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::TrailingWhitespace::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::TrailingWhitespace::OPENING_DELIMITER
# uninitialized constant RuboCop::Cop::Layout::TrailingWhitespace::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::AmbiguousAssignment::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::AmbiguousAssignment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::AmbiguousAssignment::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::AmbiguousBlockAssociation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::AmbiguousBlockAssociation::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::AmbiguousOperator::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::AmbiguousOperator::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::AmbiguousOperatorPrecedence::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::AmbiguousRange::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::AmbiguousRange::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::AmbiguousRegexpLiteral::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::AmbiguousRegexpLiteral::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::AssignmentInCondition::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::AssignmentInCondition::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::BigDecimalNew::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::BinaryOperatorWithIdenticalOperands::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::BinaryOperatorWithIdenticalOperands::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::BooleanSymbol::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::BooleanSymbol::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::CircularArgumentReference::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::CircularArgumentReference::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::ConstantDefinitionInBlock::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::ConstantDefinitionInBlock::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::ConstantResolution::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::ConstantResolution::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::Debugger::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::Debugger::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::DeprecatedClassMethods::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::DeprecatedConstants::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::DeprecatedConstants::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::DeprecatedOpenSSLConstant::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::DeprecatedOpenSSLConstant::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::DeprecatedOpenSSLConstant::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::DisjunctiveAssignmentInConstructor::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::DisjunctiveAssignmentInConstructor::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::DuplicateBranch::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::DuplicateBranch::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::DuplicateCaseCondition::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::DuplicateCaseCondition::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::DuplicateElsifCondition::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::DuplicateElsifCondition::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::DuplicateHashKey::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::DuplicateHashKey::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::DuplicateMethods::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::DuplicateRegexpCharacterClassElement::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::DuplicateRegexpCharacterClassElement::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::DuplicateRegexpCharacterClassElement::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::DuplicateRequire::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::DuplicateRequire::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::DuplicateRescueException::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::DuplicateRescueException::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::EachWithObjectArgument::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::ElseLayout::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::ElseLayout::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::ElseLayout::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::EmptyBlock::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::EmptyBlock::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::EmptyClass::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::EmptyClass::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::EmptyConditionalBody::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::EmptyConditionalBody::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::EmptyEnsure::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::EmptyEnsure::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::EmptyExpression::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::EmptyExpression::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::EmptyFile::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::EmptyFile::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::EmptyFile::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::EmptyInPattern::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::EmptyInPattern::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::EmptyInterpolation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::EmptyInterpolation::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::EmptyWhen::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::EmptyWhen::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::EnsureReturn::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::EnsureReturn::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::EnsureReturn::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::ErbNewArguments::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::ErbNewArguments::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::FlipFlop::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::FlipFlop::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::FloatComparison::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::FloatOutOfRange::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::FloatOutOfRange::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::FormatParameterMismatch::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::HashCompareByIdentity::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::HeredocMethodCallPosition::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::HeredocMethodCallPosition::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::HeredocMethodCallPosition::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::IdentityComparison::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::ImplicitStringConcatenation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::ImplicitStringConcatenation::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::IncompatibleIoSelectWithFiberScheduler::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::IneffectiveAccessModifier::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::IneffectiveAccessModifier::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::InheritException::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::InterpolationCheck::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::InterpolationCheck::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::LambdaWithoutLiteralBlock::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::LiteralAsCondition::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::LiteralAsCondition::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::LiteralAsCondition::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::LiteralInInterpolation::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::LiteralInInterpolation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::LiteralInInterpolation::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::Loop::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::Loop::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::MissingCopEnableDirective::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::MissingCopEnableDirective::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::MissingCopEnableDirective::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::MissingSuper::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::MissingSuper::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::MixedRegexpCaptureTypes::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::MixedRegexpCaptureTypes::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::MultipleComparison::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::NestedMethodDefinition::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::NestedMethodDefinition::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::NestedPercentLiteral::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::NestedPercentLiteral::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::NestedPercentLiteral::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::NextWithoutAccumulator::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::NextWithoutAccumulator::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::NoReturnInBeginEndBlocks::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::NoReturnInBeginEndBlocks::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::NonDeterministicRequireOrder::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::NonDeterministicRequireOrder::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::NonLocalExitFromIterator::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::NonLocalExitFromIterator::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::NumberConversion::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::NumberConversion::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::NumberedParameterAssignment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::NumberedParameterAssignment::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::OrAssignmentToConstant::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::OrAssignmentToConstant::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::OrderedMagicComments::FROZEN_STRING_LITERAL
# Did you mean?  RuboCop::Cop::FrozenStringLiteral
# uninitialized constant RuboCop::Cop::Lint::OrderedMagicComments::FROZEN_STRING_LITERAL_ENABLED
# uninitialized constant RuboCop::Cop::Lint::OrderedMagicComments::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::OrderedMagicComments::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::OutOfRangeRegexpRef::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::ParenthesesAsGroupedExpression::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::ParenthesesAsGroupedExpression::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::ParenthesesAsGroupedExpression::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::PercentStringArray::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::PercentStringArray::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::PercentStringArray::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::PercentSymbolArray::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::PercentSymbolArray::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::PercentSymbolArray::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::RaiseException::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::RandOne::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::RedundantCopDisableDirective::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::RedundantCopDisableDirective::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::RedundantCopDisableDirective::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::RedundantCopEnableDirective::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::RedundantCopEnableDirective::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::RedundantCopEnableDirective::NO_SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Lint::RedundantCopEnableDirective::SPACE_COMMAND
# uninitialized constant RuboCop::Cop::Lint::RedundantCopEnableDirective::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::RedundantCopEnableDirective::SINGLE_SPACE_REGEXP
# uninitialized constant RuboCop::Cop::Lint::RedundantCopEnableDirective::SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Lint::RedundantCopEnableDirective::NO_SPACE_COMMAND
# uninitialized constant RuboCop::Cop::Lint::RedundantDirGlobSort::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::RedundantRequireStatement::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::RedundantRequireStatement::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::RedundantSafeNavigation::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::RedundantSafeNavigation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::RedundantSafeNavigation::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::RedundantSplatExpansion::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::RedundantSplatExpansion::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::RedundantStringCoercion::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::RedundantStringCoercion::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::RedundantWithIndex::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::RedundantWithIndex::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::RedundantWithIndex::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::RedundantWithObject::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::RedundantWithObject::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::RedundantWithObject::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::RefinementImportMethods::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::RegexpAsCondition::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::RegexpAsCondition::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::RequireParentheses::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::RequireParentheses::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::RequireParentheses::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::RequireRelativeSelfPath::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::RequireRelativeSelfPath::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::RescueException::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::RescueException::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::RescueType::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::RescueType::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::ReturnInVoidContext::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::ReturnInVoidContext::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::SafeNavigationChain::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::SafeNavigationChain::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::SafeNavigationConsistency::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::SafeNavigationConsistency::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::SafeNavigationWithEmpty::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::SafeNavigationWithEmpty::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::ScriptPermission::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::ScriptPermission::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::SelfAssignment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::SelfAssignment::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::SendWithMixinArgument::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::SendWithMixinArgument::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::ShadowedArgument::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::ShadowedArgument::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::ShadowedException::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::ShadowedException::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::ShadowedException::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::ShadowingOuterLocalVariable::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::ShadowingOuterLocalVariable::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::StructNewOverride::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::SuppressedException::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::SuppressedException::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::SymbolConversion::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::ToEnumArguments::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::ToJSON::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::ToJSON::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::TopLevelReturnWithArgument::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::TopLevelReturnWithArgument::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::TrailingCommaInAttributeDeclaration::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::TrailingCommaInAttributeDeclaration::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::TrailingCommaInAttributeDeclaration::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::TripleQuotes::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::TripleQuotes::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::UnderscorePrefixedVariableName::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::UnderscorePrefixedVariableName::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::UnexpectedBlockArity::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::UnexpectedBlockArity::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::UnifiedInteger::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::UnifiedInteger::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::UnmodifiedReduceAccumulator::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::UnmodifiedReduceAccumulator::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::UnreachableCode::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::UnreachableCode::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::UnreachableLoop::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::UnreachableLoop::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::UriEscapeUnescape::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::UriRegexp::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::UselessAccessModifier::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::UselessAccessModifier::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::UselessAccessModifier::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::UselessAssignment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::UselessAssignment::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::UselessMethodDefinition::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::UselessMethodDefinition::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::UselessRuby2Keywords::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::UselessSetterCall::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::UselessSetterCall::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Lint::UselessTimes::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::UselessTimes::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::Void::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::Void::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Metrics::AbcSize::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Metrics::AbcSize::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Metrics::BlockLength::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Metrics::BlockLength::MSG
# uninitialized constant RuboCop::Cop::Metrics::BlockLength::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Metrics::BlockNesting::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Metrics::BlockNesting::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Metrics::CyclomaticComplexity::KNOWN_ITERATING_METHODS
# uninitialized constant RuboCop::Cop::Metrics::CyclomaticComplexity::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Metrics::CyclomaticComplexity::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Metrics::MethodLength::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Metrics::MethodLength::MSG
# uninitialized constant RuboCop::Cop::Metrics::MethodLength::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Metrics::ParameterLists::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Metrics::ParameterLists::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Metrics::PerceivedComplexity::KNOWN_ITERATING_METHODS
# uninitialized constant RuboCop::Cop::Metrics::PerceivedComplexity::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Metrics::PerceivedComplexity::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Metrics::Utils::AbcSizeCalculator::KNOWN_ITERATING_METHODS
# uninitialized constant RuboCop::Cop::Metrics::Utils::AbcSizeCalculator::VAR_SETTER_TO_GETTER
# uninitialized constant RuboCop::Cop::Migration::DepartmentName::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Migration::DepartmentName::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Migration::DepartmentName::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Naming::AccessorMethodName::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Naming::AccessorMethodName::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Naming::AsciiIdentifiers::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Naming::AsciiIdentifiers::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Naming::AsciiIdentifiers::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Naming::BinaryOperatorParameterName::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Naming::BinaryOperatorParameterName::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Naming::BlockForwarding::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Naming::BlockForwarding::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Naming::BlockForwarding::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Naming::ClassAndModuleCamelCase::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Naming::ClassAndModuleCamelCase::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Naming::ConstantName::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Naming::ConstantName::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Naming::FileName::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Naming::FileName::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Naming::FileName::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Naming::HeredocDelimiterCase::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Naming::HeredocDelimiterCase::OPENING_DELIMITER
# uninitialized constant RuboCop::Cop::Naming::HeredocDelimiterCase::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Naming::HeredocDelimiterNaming::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Naming::HeredocDelimiterNaming::OPENING_DELIMITER
# uninitialized constant RuboCop::Cop::Naming::HeredocDelimiterNaming::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Naming::InclusiveLanguage::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Naming::InclusiveLanguage::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Naming::InclusiveLanguage::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Naming::MemoizedInstanceVariableName::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Naming::MemoizedInstanceVariableName::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Naming::MethodName::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Naming::MethodName::FORMATS
# Did you mean?  RuboCop::Formatter
# uninitialized constant RuboCop::Cop::Naming::MethodName::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Naming::MethodName::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Naming::RescuedExceptionsVariableName::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Naming::RescuedExceptionsVariableName::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Naming::VariableName::FORMATS
# Did you mean?  RuboCop::Formatter
# uninitialized constant RuboCop::Cop::Naming::VariableName::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Naming::VariableName::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Naming::VariableName::SIGILS
# Did you mean?  Signal
# uninitialized constant RuboCop::Cop::Naming::VariableNumber::FORMATS
# Did you mean?  RuboCop::Formatter
# uninitialized constant RuboCop::Cop::Naming::VariableNumber::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Naming::VariableNumber::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Naming::VariableNumber::SIGILS
# Did you mean?  Signal
# uninitialized constant RuboCop::Cop::Performance::AncestorsInclude::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Performance::AncestorsInclude::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::ArraySemiInfiniteRangeSlice::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Performance::ArraySemiInfiniteRangeSlice::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::BigDecimalWithNumericArgument::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::BindCall::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Performance::BindCall::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::BlockGivenWithExplicitBlock::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::Caller::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::Casecmp::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::ChainArrayAllocation::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Performance::ChainArrayAllocation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::ChainArrayAllocation::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Performance::CollectionLiteralInLoop::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::CollectionLiteralInLoop::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Performance::ConcurrentMonotonicTime::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::ConstantRegexp::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::ConstantRegexp::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Performance::Count::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Performance::Count::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::DeletePrefix::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::DeleteSuffix::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::Detect::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::EndWith::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::FixedSize::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::FlatMap::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Performance::FlatMap::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::InefficientHashSearch::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::IoReadlines::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Performance::IoReadlines::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::MapCompact::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Performance::MapCompact::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::MethodObjectAsBlock::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::MethodObjectAsBlock::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Performance::OpenStruct::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::RangeInclude::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::RedundantEqualityComparisonBlock::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::RedundantEqualityComparisonBlock::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Performance::RedundantMatch::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::RedundantMerge::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::RedundantSortBlock::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Performance::RedundantSortBlock::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::RedundantSortBlock::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Performance::RedundantSplitRegexpArgument::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::RedundantStringChars::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Performance::RedundantStringChars::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::ReverseEach::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Performance::ReverseEach::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::ReverseFirst::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Performance::ReverseFirst::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::SelectMap::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Performance::SelectMap::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::Size::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::SortReverse::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Performance::SortReverse::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::SortReverse::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Performance::Squeeze::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::StartWith::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::StringIdentifierArgument::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::StringInclude::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::StringReplacement::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Performance::StringReplacement::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::Sum::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Performance::Sum::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::TimesMap::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::UnfreezeString::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Performance::UriDefaultParser::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::AlignLeftLetBrace::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::AlignLeftLetBrace::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::AlignRightLetBrace::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::AlignRightLetBrace::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::AnyInstance::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::AroundBlock::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::AroundBlock::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::Be::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::Be::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::BeEq::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::BeEql::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::BeNil::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::BeforeAfterAll::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::Capybara::CurrentPathExpectation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::Capybara::FeatureMethods::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::Capybara::FeatureMethods::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::Capybara::VisibilityMatcher::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::ContextMethod::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::ContextMethod::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::ContextWording::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::ContextWording::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::DescribeClass::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::DescribeClass::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::DescribeMethod::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::DescribeMethod::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::DescribeSymbol::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::DescribedClass::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::DescribedClass::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::DescribedClassModuleWrapping::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::DescribedClassModuleWrapping::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::Dialect::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::Dialect::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::EmptyExampleGroup::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::EmptyExampleGroup::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::EmptyHook::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::RSpec::EmptyHook::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::EmptyHook::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::EmptyLineAfterExample::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::RSpec::EmptyLineAfterExample::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::EmptyLineAfterExample::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::EmptyLineAfterExampleGroup::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::RSpec::EmptyLineAfterExampleGroup::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::EmptyLineAfterExampleGroup::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::EmptyLineAfterFinalLet::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::RSpec::EmptyLineAfterFinalLet::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::EmptyLineAfterFinalLet::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::EmptyLineAfterHook::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::RSpec::EmptyLineAfterHook::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::EmptyLineAfterHook::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::EmptyLineAfterSubject::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::RSpec::EmptyLineAfterSubject::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::EmptyLineAfterSubject::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::ExampleLength::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::ExampleLength::MSG
# uninitialized constant RuboCop::Cop::RSpec::ExampleLength::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::ExampleWithoutDescription::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::ExampleWithoutDescription::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::ExampleWording::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::ExampleWording::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::ExcessiveDocstringSpacing::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::ExcessiveDocstringSpacing::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::ExpectActual::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::ExpectActual::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::ExpectChange::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::ExpectInHook::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::ExpectInHook::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::ExpectOutput::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::ExpectOutput::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::FactoryBot::AttributeDefinedStatically::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::FactoryBot::AttributeDefinedStatically::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::FactoryBot::CreateList::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::FactoryBot::FactoryClassName::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::FactoryBot::SyntaxMethods::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::RSpec::FactoryBot::SyntaxMethods::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::FilePath::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::FilePath::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::Focus::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::RSpec::Focus::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::Focus::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::HookArgument::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::HookArgument::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::HooksBeforeExamples::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::HooksBeforeExamples::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::IdenticalEqualityAssertion::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::ImplicitBlockExpectation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::ImplicitExpect::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::ImplicitExpect::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::ImplicitSubject::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::InstanceSpy::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::InstanceSpy::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::InstanceVariable::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::InstanceVariable::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::ItBehavesLike::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::IteratedExpectation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::IteratedExpectation::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::LeadingSubject::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::LeadingSubject::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::LeakyConstantDeclaration::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::LeakyConstantDeclaration::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::LetBeforeExamples::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::LetBeforeExamples::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::LetSetup::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::LetSetup::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::MessageChain::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::MessageExpectation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::MessageSpies::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::MessageSpies::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::MissingExampleGroupArgument::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::MissingExampleGroupArgument::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::MultipleDescribes::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::MultipleDescribes::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::MultipleExpectations::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::MultipleExpectations::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::MultipleMemoizedHelpers::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::MultipleMemoizedHelpers::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::MultipleSubjects::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::RSpec::MultipleSubjects::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::MultipleSubjects::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::NamedSubject::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::NamedSubject::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::NestedGroups::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::NestedGroups::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::NotToNot::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::OverwritingSetup::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::OverwritingSetup::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::Pending::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::Pending::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::Rails::AvoidSetupHook::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::Rails::AvoidSetupHook::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::Rails::HttpStatus::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::ReceiveCounts::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::ReceiveNever::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::RepeatedDescription::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::RepeatedDescription::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::RepeatedExample::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::RepeatedExample::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::RepeatedExampleGroupBody::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::RepeatedExampleGroupBody::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::RepeatedExampleGroupDescription::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::RepeatedExampleGroupDescription::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::RepeatedIncludeExample::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::RepeatedIncludeExample::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::ReturnFromStub::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::ScatteredLet::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::ScatteredLet::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::ScatteredSetup::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::ScatteredSetup::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::SharedContext::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::SharedContext::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::SingleArgumentMessageChain::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::StubbedMock::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::StubbedMock::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::SubjectDeclaration::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::SubjectDeclaration::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::SubjectStub::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::SubjectStub::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::UnspecifiedException::LITERAL_REGEX
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name all
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name all
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant RuboCop::Cop::RSpec::VariableDefinition::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::VariableDefinition::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::VariableName::FORMATS
# Did you mean?  RuboCop::Formatter
# uninitialized constant RuboCop::Cop::RSpec::VariableName::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::VariableName::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::RSpec::VerifiedDoubleReference::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::VerifiedDoubles::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::VoidExpect::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::Yield::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::RSpec::Yield::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::RSpec::Yield::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Rails::ActionControllerTestCase::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::ActionControllerTestCase::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Rails::ActionFilter::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::ActiveRecordAliases::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::ActiveRecordCallbacksOrder::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::ActiveRecordCallbacksOrder::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Rails::ActiveSupportAliases::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::AddColumnIndex::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Rails::AddColumnIndex::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::AfterCommitOverride::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::AfterCommitOverride::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Rails::ArelStar::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::AssertNot::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::AttributeDefaultBlockValue::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::BelongsTo::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::Blank::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::CompactBlank::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Rails::CompactBlank::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::ContentTag::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Rails::ContentTag::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::CreateTableWithTimestamps::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::CreateTableWithTimestamps::MYSQL_SCHEMA_DEFINITIONS
# uninitialized constant RuboCop::Cop::Rails::CreateTableWithTimestamps::POSTGRES_SCHEMA_DEFINITIONS
# uninitialized constant RuboCop::Cop::Rails::CreateTableWithTimestamps::RAILS_ABSTRACT_SCHEMA_DEFINITIONS
# Did you mean?  RuboCop::Cop::Rails::CreateTableWithTimestamps::RAILS_ABSTRACT_SCHEMA_DEFINITIONS_HELPERS
# uninitialized constant RuboCop::Cop::Rails::CreateTableWithTimestamps::RAILS_ABSTRACT_SCHEMA_DEFINITIONS_HELPERS
# uninitialized constant RuboCop::Cop::Rails::Date::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::DefaultScope::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::DelegateAllowBlank::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::DeprecatedActiveModelErrorsMethods::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::DeprecatedActiveModelErrorsMethods::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Rails::DuplicateAssociation::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Rails::DuplicateAssociation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::DuplicateAssociation::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Rails::DuplicateScope::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::DuplicateScope::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Rails::DurationArithmetic::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::DynamicFindBy::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::DynamicFindBy::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Rails::DynamicFindBy::WHERE_METHODS
# Did you mean?  RuboCop::Cop::Rails::WhereNot
# uninitialized constant RuboCop::Cop::Rails::EagerEvaluationLogMessage::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::EnumHash::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::EnumUniqueness::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::EnvironmentComparison::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::EnvironmentVariableAccess::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::EnvironmentVariableAccess::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Rails::Exit::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::ExpandedDateRange::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::ExpandedDateRange::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Rails::FilePath::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Rails::FilePath::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::FindBy::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Rails::FindBy::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::FindById::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Rails::FindById::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::FindEach::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::FindEach::WHERE_METHODS
# Did you mean?  RuboCop::Cop::Rails::WhereNot
# uninitialized constant RuboCop::Cop::Rails::HasAndBelongsToMany::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::HasManyOrHasOneDependent::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::HttpPositionalArguments::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Rails::HttpPositionalArguments::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::HttpStatus::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::I18nLazyLookup::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::I18nLazyLookup::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Rails::I18nLazyLookup::VISIBILITY_SCOPES
# Did you mean?  RuboCop::Cop::VisibilityHelp
# uninitialized constant RuboCop::Cop::Rails::I18nLocaleAssignment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::I18nLocaleTexts::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::IgnoredSkipActionFilterOption::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::Inquiry::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::InverseOf::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::LexicallyScopedActionFilter::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::LinkToBlank::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::MailerName::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::MailerName::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Rails::MatchRoute::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::MigrationClassName::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::MigrationClassName::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Rails::NegateInclude::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::NotNullColumn::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::OrderById::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Rails::OrderById::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::Output::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Rails::Output::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::OutputSafety::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::Pick::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::Pluck::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::Pluck::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Rails::PluckId::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Rails::PluckId::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::PluckId::WHERE_METHODS
# Did you mean?  RuboCop::Cop::Rails::WhereNot
# uninitialized constant RuboCop::Cop::Rails::PluckInWhere::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::PluckInWhere::WHERE_METHODS
# Did you mean?  RuboCop::Cop::Rails::WhereNot
# uninitialized constant RuboCop::Cop::Rails::PluralizationGrammar::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::Present::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::ReadWriteAttribute::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::RedundantAllowNil::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Rails::RedundantAllowNil::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::RedundantForeignKey::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Rails::RedundantForeignKey::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::RedundantPresenceValidationOnBelongsTo::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Rails::RedundantPresenceValidationOnBelongsTo::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::RedundantTravelBack::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Rails::RedundantTravelBack::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::ReflectionClassName::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::RefuteMethods::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::RelativeDateConstant::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Rails::RelativeDateConstant::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::RelativeDateConstant::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Rails::RenderInline::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::RenderPlainText::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::RequestReferer::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::RequireDependency::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::ReversibleMigrationMethodDefinition::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::ReversibleMigrationMethodDefinition::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Rails::RootJoinChain::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Rails::RootJoinChain::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::SafeNavigation::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Rails::SafeNavigation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::SaveBang::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::SchemaComment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::SchemaComment::MYSQL_SCHEMA_DEFINITIONS
# uninitialized constant RuboCop::Cop::Rails::SchemaComment::POSTGRES_SCHEMA_DEFINITIONS
# uninitialized constant RuboCop::Cop::Rails::SchemaComment::RAILS_ABSTRACT_SCHEMA_DEFINITIONS
# Did you mean?  RuboCop::Cop::Rails::SchemaComment::RAILS_ABSTRACT_SCHEMA_DEFINITIONS_HELPERS
# uninitialized constant RuboCop::Cop::Rails::SchemaComment::RAILS_ABSTRACT_SCHEMA_DEFINITIONS_HELPERS
# uninitialized constant RuboCop::Cop::Rails::ScopeArgs::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::ShortI18n::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::SquishedSQLHeredocs::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::SquishedSQLHeredocs::OPENING_DELIMITER
# uninitialized constant RuboCop::Cop::Rails::SquishedSQLHeredocs::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Rails::TableNameAssignment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::TableNameAssignment::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Rails::TableNameAssignment::WHERE_METHODS
# Did you mean?  RuboCop::Cop::Rails::WhereNot
# uninitialized constant RuboCop::Cop::Rails::TimeZone::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::TimeZone::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Rails::TimeZoneAssignment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::TransactionExitStatement::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::UniqBeforePluck::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Rails::UniqBeforePluck::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::UniqueValidationWithoutIndex::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::UniqueValidationWithoutIndex::WHERE_METHODS
# Did you mean?  RuboCop::Cop::Rails::WhereNot
# uninitialized constant RuboCop::Cop::Rails::UnusedIgnoredColumns::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::UnusedIgnoredColumns::WHERE_METHODS
# Did you mean?  RuboCop::Cop::Rails::WhereNot
# uninitialized constant RuboCop::Cop::Rails::Validation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::WhereEquals::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Rails::WhereEquals::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::WhereExists::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Rails::WhereNot::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Rails::WhereNot::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Security::CompoundHash::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Security::CompoundHash::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Security::Eval::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Security::IoMethods::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Security::JSONLoad::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Security::MarshalLoad::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Security::Open::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Security::YAMLLoad::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Sorbet::CallbackConditionalsBinding::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Sorbet::CallbackConditionalsBinding::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Sorbet::EnforceSigilOrder::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Sorbet::EnforceSigilOrder::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Sorbet::EnforceSigilOrder::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Sorbet::EnforceSigilOrder::SIGIL_REGEX
# uninitialized constant RuboCop::Cop::Sorbet::EnforceSigilOrder::STRICTNESS_LEVELS
# Did you mean?  RuboCop::Cop::Sorbet::StrictSigil
# uninitialized constant RuboCop::Cop::Sorbet::ForbidExtendTSigHelpersInShims::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Sorbet::ForbidExtendTSigHelpersInShims::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Sorbet::ForbidIncludeConstLiteral::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Sorbet::ForbidIncludeConstLiteral::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Sorbet::ForbidSuperclassConstLiteral::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Sorbet::ForbidSuperclassConstLiteral::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Sorbet::ForbidUntypedStructProps::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Sorbet::ForbidUntypedStructProps::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Sorbet::OneAncestorPerLine::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Sorbet::OneAncestorPerLine::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Sorbet::SignatureBuildOrder::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Sorbet::SignatureBuildOrder::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Sorbet::SingleLineRbiClassModuleDefinitions::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Sorbet::SingleLineRbiClassModuleDefinitions::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Sorbet::TypeAliasName::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Sorbet::TypeAliasName::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Sorbet::ValidSigil::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Sorbet::ValidSigil::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::SpaceBeforePunctuation::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::AccessModifierDeclarations::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::AccessorGrouping::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::AccessorGrouping::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::AccessorGrouping::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::AccessorGrouping::VISIBILITY_SCOPES
# Did you mean?  RuboCop::Cop::VisibilityHelp
# uninitialized constant RuboCop::Cop::Style::Alias::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::AndOr::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::AndOr::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::AndOr::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::ArgumentsForwarding::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::ArgumentsForwarding::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::ArgumentsForwarding::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::ArrayCoercion::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::ArrayCoercion::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::ArrayJoin::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::AsciiComments::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::AsciiComments::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::AsciiComments::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::Attr::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::Attr::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::AutoResourceCleanup::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::BarePercentLiterals::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::BarePercentLiterals::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::BeginBlock::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::BeginBlock::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::BisectedAttrAccessor::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::BisectedAttrAccessor::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::BisectedAttrAccessor::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::BlockComments::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::BlockComments::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::BlockComments::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::BlockDelimiters::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::BlockDelimiters::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::BlockDelimiters::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::CaseEquality::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::CaseLikeIf::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::CaseLikeIf::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::CaseLikeIf::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::CharacterLiteral::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::CharacterLiteral::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::ClassAndModuleChildren::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::ClassAndModuleChildren::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::ClassAndModuleChildren::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::ClassCheck::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::ClassEqualityComparison::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::ClassEqualityComparison::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::ClassMethods::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::ClassMethods::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::ClassMethodsDefinitions::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::ClassMethodsDefinitions::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::ClassMethodsDefinitions::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::ClassMethodsDefinitions::VISIBILITY_SCOPES
# Did you mean?  RuboCop::Cop::VisibilityHelp
# uninitialized constant RuboCop::Cop::Style::ClassVars::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::CollectionCompact::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::CollectionCompact::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::CollectionMethods::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::CollectionMethods::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::ColonMethodCall::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::ColonMethodCall::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::ColonMethodDefinition::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::ColonMethodDefinition::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::CombinableLoops::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::CombinableLoops::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::CommandLiteral::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::CommandLiteral::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::CommentAnnotation::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::CommentAnnotation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::CommentAnnotation::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::CommentedKeyword::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::CommentedKeyword::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::CommentedKeyword::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::ConditionalAssignment::ALIGN_WITH
# Did you mean?  RuboCop::Cop::Alignment
# uninitialized constant RuboCop::Cop::Style::ConditionalAssignment::END_ALIGNMENT
# Did you mean?  RuboCop::Cop::EndKeywordAlignment
# uninitialized constant RuboCop::Cop::Style::ConditionalAssignment::EQUAL
# uninitialized constant RuboCop::Cop::Style::ConditionalAssignment::KEYWORD
# uninitialized constant RuboCop::Cop::Style::ConditionalAssignment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::ConditionalAssignment::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::ConstantVisibility::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::ConstantVisibility::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::Copyright::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::Copyright::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::Copyright::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::DateTime::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::DateTime::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::DefWithParentheses::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::DefWithParentheses::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::Dir::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::DisableCopsWithinSourceCodeDirective::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::DisableCopsWithinSourceCodeDirective::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::DocumentDynamicEvalDefinition::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::Documentation::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::Documentation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::Documentation::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::DocumentationMethod::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::DocumentationMethod::NON_PUBLIC_MODIFIERS
# uninitialized constant RuboCop::Cop::Style::DocumentationMethod::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::DoubleCopDisableDirective::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::DoubleCopDisableDirective::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::DoubleNegation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::EachForSimpleLoop::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::EachForSimpleLoop::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::EachWithObject::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::EachWithObject::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::EachWithObject::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::EmptyBlockParameter::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::EmptyBlockParameter::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::EmptyBlockParameter::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::EmptyCaseCondition::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::EmptyCaseCondition::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::EmptyCaseCondition::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::EmptyElse::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::EmptyElse::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::EmptyElse::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::EmptyLambdaParameter::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::EmptyLambdaParameter::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::EmptyLambdaParameter::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::EmptyLiteral::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::EmptyLiteral::FROZEN_STRING_LITERAL
# Did you mean?  RuboCop::Cop::FrozenStringLiteral
# uninitialized constant RuboCop::Cop::Style::EmptyLiteral::FROZEN_STRING_LITERAL_ENABLED
# uninitialized constant RuboCop::Cop::Style::EmptyLiteral::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::EmptyMethod::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::EmptyMethod::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::Encoding::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::Encoding::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::Encoding::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::EndBlock::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::EndBlock::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::EndlessMethod::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::EndlessMethod::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::EnvHome::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::EvalWithLocation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::EvenOdd::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::ExpandPathArguments::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::ExpandPathArguments::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::ExplicitBlockArgument::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::ExplicitBlockArgument::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::ExplicitBlockArgument::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::ExponentialNotation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::ExponentialNotation::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::FetchEnvVar::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::FetchEnvVar::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::FileRead::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::FileRead::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::FileWrite::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::FileWrite::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::FloatDivision::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::For::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::For::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::For::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::FormatString::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::FrozenStringLiteralComment::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::FrozenStringLiteralComment::FROZEN_STRING_LITERAL
# Did you mean?  RuboCop::Cop::FrozenStringLiteral
# uninitialized constant RuboCop::Cop::Style::FrozenStringLiteralComment::FROZEN_STRING_LITERAL_ENABLED
# uninitialized constant RuboCop::Cop::Style::FrozenStringLiteralComment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::FrozenStringLiteralComment::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::GlobalStdStream::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::GlobalStdStream::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::GlobalVars::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::GlobalVars::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::GuardClause::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::GuardClause::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::HashConversion::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::HashEachMethods::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::HashEachMethods::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::HashExcept::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::HashExcept::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::HashLikeCase::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::HashLikeCase::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::HashSyntax::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::HashSyntax::EXPLICIT_HASH_VALUE_MSG
# uninitialized constant RuboCop::Cop::Style::HashSyntax::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::HashSyntax::OMIT_HASH_VALUE_MSG
# uninitialized constant RuboCop::Cop::Style::HashSyntax::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::IdenticalConditionalBranches::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::IdenticalConditionalBranches::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::IdenticalConditionalBranches::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::IfInsideElse::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::IfInsideElse::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::IfInsideElse::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::IfUnlessModifier::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::IfUnlessModifier::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::IfUnlessModifier::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::IfUnlessModifierOfIfUnless::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::IfUnlessModifierOfIfUnless::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::IfWithBooleanLiteralBranches::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::IfWithBooleanLiteralBranches::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::IfWithSemicolon::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::IfWithSemicolon::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::ImplicitRuntimeError::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::InPatternThen::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::InPatternThen::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::InfiniteLoop::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::InfiniteLoop::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::InlineComment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::InlineComment::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::InverseMethods::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::InverseMethods::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::InverseMethods::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::IpAddresses::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::IpAddresses::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::KeywordParametersOrder::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::KeywordParametersOrder::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::KeywordParametersOrder::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::Lambda::LITERAL_REGEX
# Did you mean?  RuboCop::Cop::Style::Lambda::LITERAL_MESSAGE
# uninitialized constant RuboCop::Cop::Style::Lambda::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::LambdaCall::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::LineEndConcatenation::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::LineEndConcatenation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::LineEndConcatenation::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::MapToHash::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::MapToHash::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::MethodCallWithoutArgsParentheses::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::MethodCallWithoutArgsParentheses::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::MethodCalledOnDoEndBlock::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::MethodCalledOnDoEndBlock::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::MethodCalledOnDoEndBlock::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::MethodDefParentheses::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::MethodDefParentheses::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::MethodDefParentheses::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::MinMax::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::MinMax::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::MissingElse::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::MissingElse::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::MissingRespondToMissing::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::MissingRespondToMissing::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::MixinGrouping::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::MixinGrouping::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::MixinUsage::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::ModuleFunction::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::ModuleFunction::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::MultilineBlockChain::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::MultilineBlockChain::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::MultilineBlockChain::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::MultilineIfModifier::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::MultilineIfModifier::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::MultilineIfModifier::SPACE
# uninitialized constant RuboCop::Cop::Style::MultilineIfThen::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::MultilineIfThen::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::MultilineIfThen::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::MultilineInPatternThen::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::MultilineInPatternThen::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::MultilineInPatternThen::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::MultilineMemoization::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::MultilineMemoization::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::MultilineMethodSignature::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::MultilineMethodSignature::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::MultilineMethodSignature::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::MultilineTernaryOperator::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::MultilineTernaryOperator::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::MultilineWhenThen::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::MultilineWhenThen::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::MultilineWhenThen::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::MultipleComparison::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::MultipleComparison::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::MutableConstant::FROZEN_STRING_LITERAL
# Did you mean?  RuboCop::Cop::FrozenStringLiteral
# uninitialized constant RuboCop::Cop::Style::MutableConstant::FROZEN_STRING_LITERAL_ENABLED
# uninitialized constant RuboCop::Cop::Style::MutableConstant::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::MutableConstant::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::NegatedIfElseCondition::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::NegatedIfElseCondition::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::NegatedIfElseCondition::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::NestedFileDirname::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::NestedFileDirname::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::NestedModifier::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::NestedModifier::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::NestedModifier::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::NestedParenthesizedCalls::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::NestedParenthesizedCalls::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::NestedParenthesizedCalls::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::NestedTernaryOperator::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::NestedTernaryOperator::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::Next::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::Next::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::Next::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::NilComparison::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::NilLambda::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::NilLambda::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::NilLambda::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::NonNilCheck::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::Not::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::Not::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::NumberedParameters::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::NumberedParameters::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::NumberedParametersLimit::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::NumberedParametersLimit::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::NumericLiteralPrefix::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::NumericLiteralPrefix::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::NumericLiterals::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::NumericLiterals::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::NumericPredicate::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::ObjectThen::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::ObjectThen::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::OneLineConditional::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::OneLineConditional::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::OpenStructUse::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::OpenStructUse::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::OptionHash::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::OptionHash::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::OptionalArguments::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::OptionalArguments::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::OptionalBooleanParameter::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::OptionalBooleanParameter::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::OrAssignment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::OrAssignment::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::ParallelAssignment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::ParallelAssignment::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::PercentQLiterals::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::PercentQLiterals::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::PercentQLiterals::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::PerlBackrefs::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::PerlBackrefs::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::PreferredHashMethods::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::Proc::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::Proc::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::QuotedSymbols::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::QuotedSymbols::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::RaiseArgs::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::RandomWithOffset::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::RedundantArgument::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::RedundantArgument::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::RedundantArgument::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::RedundantAssignment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::RedundantAssignment::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::RedundantBegin::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::RedundantBegin::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::RedundantBegin::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::RedundantCapitalW::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::RedundantCapitalW::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::RedundantCapitalW::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::RedundantCondition::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::RedundantCondition::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::RedundantCondition::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::RedundantConditional::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::RedundantConditional::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::RedundantConditional::SPACE
# uninitialized constant RuboCop::Cop::Style::RedundantException::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::RedundantFetchBlock::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::RedundantFetchBlock::FROZEN_STRING_LITERAL
# Did you mean?  RuboCop::Cop::FrozenStringLiteral
# uninitialized constant RuboCop::Cop::Style::RedundantFetchBlock::FROZEN_STRING_LITERAL_ENABLED
# uninitialized constant RuboCop::Cop::Style::RedundantFetchBlock::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::RedundantFetchBlock::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::RedundantFileExtensionInRequire::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::RedundantFileExtensionInRequire::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::RedundantFreeze::FROZEN_STRING_LITERAL
# Did you mean?  RuboCop::Cop::FrozenStringLiteral
# uninitialized constant RuboCop::Cop::Style::RedundantFreeze::FROZEN_STRING_LITERAL_ENABLED
# uninitialized constant RuboCop::Cop::Style::RedundantFreeze::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::RedundantInitialize::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::RedundantInitialize::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::RedundantInitialize::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::RedundantInterpolation::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::RedundantInterpolation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::RedundantInterpolation::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::RedundantPercentQ::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::RedundantPercentQ::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::RedundantRegexpCharacterClass::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::RedundantRegexpCharacterClass::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::RedundantRegexpEscape::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::RedundantRegexpEscape::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::RedundantRegexpEscape::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::RedundantReturn::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::RedundantReturn::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::RedundantReturn::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::RedundantSelf::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::RedundantSelf::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::RedundantSelfAssignment::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::RedundantSelfAssignment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::RedundantSelfAssignment::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::RedundantSelfAssignmentBranch::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::RedundantSelfAssignmentBranch::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::RedundantSelfAssignmentBranch::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::RedundantSort::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::RedundantSort::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::RedundantSortBy::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::RedundantSortBy::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::RedundantSortBy::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::RegexpLiteral::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::RegexpLiteral::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::RegexpLiteral::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::RescueModifier::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::RescueModifier::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::RescueModifier::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::RescueModifier::SPACE
# uninitialized constant RuboCop::Cop::Style::RescueStandardError::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::RescueStandardError::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::RescueStandardError::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::ReturnNil::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::ReturnNil::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::SafeNavigation::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::SafeNavigation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::SafeNavigation::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::Sample::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::SelectByRegexp::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::SelectByRegexp::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::SelfAssignment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::SelfAssignment::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::Semicolon::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::Semicolon::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::Semicolon::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::Send::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::SignalException::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::SingleArgumentDig::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::SingleLineBlockParams::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::SingleLineBlockParams::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::SingleLineMethods::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::SingleLineMethods::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::SingleLineMethods::SPACE
# uninitialized constant RuboCop::Cop::Style::SlicingWithRange::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::SoleNestedConditional::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::SoleNestedConditional::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::SoleNestedConditional::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::SpecialGlobalVars::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::SpecialGlobalVars::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::SpecialGlobalVars::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::StabbyLambdaParentheses::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::StabbyLambdaParentheses::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::StaticClass::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::StaticClass::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::StaticClass::VISIBILITY_SCOPES
# Did you mean?  RuboCop::Cop::VisibilityHelp
# uninitialized constant RuboCop::Cop::Style::StderrPuts::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::StderrPuts::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::StringChars::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::StringChars::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::StringConcatenation::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::StringConcatenation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::StringHashKeys::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::StringHashKeys::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::StringLiterals::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::StringLiterals::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::StringMethods::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::StringMethods::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::Strip::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::Strip::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::StructInheritance::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::StructInheritance::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::StructInheritance::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::SwapValues::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::SwapValues::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::SwapValues::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::SymbolArray::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::SymbolArray::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::SymbolLiteral::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::SymbolLiteral::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::SymbolProc::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::SymbolProc::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::SymbolProc::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::TernaryParentheses::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::TernaryParentheses::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::TernaryParentheses::NO_SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Style::TernaryParentheses::SPACE_COMMAND
# uninitialized constant RuboCop::Cop::Style::TernaryParentheses::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::TernaryParentheses::SINGLE_SPACE_REGEXP
# uninitialized constant RuboCop::Cop::Style::TernaryParentheses::SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Style::TernaryParentheses::NO_SPACE_COMMAND
# uninitialized constant RuboCop::Cop::Style::TopLevelMethodDefinition::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::TrailingBodyOnClass::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::TrailingBodyOnClass::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::TrailingBodyOnClass::SPACE
# uninitialized constant RuboCop::Cop::Style::TrailingBodyOnMethodDefinition::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::TrailingBodyOnMethodDefinition::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::TrailingBodyOnMethodDefinition::SPACE
# uninitialized constant RuboCop::Cop::Style::TrailingBodyOnModule::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::TrailingBodyOnModule::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::TrailingBodyOnModule::SPACE
# uninitialized constant RuboCop::Cop::Style::TrailingCommaInBlockArgs::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::TrailingCommaInBlockArgs::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::TrailingMethodEndStatement::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::TrailingMethodEndStatement::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::TrailingUnderscoreVariable::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::TrailingUnderscoreVariable::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::TrailingUnderscoreVariable::NO_SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Style::TrailingUnderscoreVariable::SPACE_COMMAND
# uninitialized constant RuboCop::Cop::Style::TrailingUnderscoreVariable::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::TrailingUnderscoreVariable::SINGLE_SPACE_REGEXP
# uninitialized constant RuboCop::Cop::Style::TrailingUnderscoreVariable::SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Style::TrailingUnderscoreVariable::NO_SPACE_COMMAND
# uninitialized constant RuboCop::Cop::Style::TrivialAccessors::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::TrivialAccessors::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::UnlessElse::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::UnlessElse::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::UnlessElse::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::UnlessLogicalOperators::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::UnlessLogicalOperators::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::UnpackFirst::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::VariableInterpolation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::VariableInterpolation::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::WhenThen::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::WhenThen::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::WhileUntilDo::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::WhileUntilDo::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::WhileUntilModifier::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::WhileUntilModifier::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::WordArray::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::WordArray::RESTRICT_ON_SEND
# uninitialized constant RuboCop::Cop::Style::YodaCondition::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::YodaCondition::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::ZeroLengthPredicate::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::SurroundingSpace::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::TrailingComma::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Formatter::ClangStyleFormatter::COLOR_FOR_SEVERITY
# uninitialized constant RuboCop::Formatter::FormatterSet::DEFAULT_INDENT
# uninitialized constant RuboCop::Formatter::FuubarStyleFormatter::COLOR_FOR_SEVERITY
# uninitialized constant RuboCop::Formatter::FuubarStyleFormatter::ELLIPSES
# uninitialized constant RuboCop::Formatter::PacmanFormatter::COLOR_FOR_SEVERITY
# uninitialized constant RuboCop::Formatter::PacmanFormatter::ELLIPSES
# uninitialized constant RuboCop::Formatter::ProgressFormatter::COLOR_FOR_SEVERITY
# uninitialized constant RuboCop::Formatter::ProgressFormatter::ELLIPSES
# uninitialized constant RuboCop::MagicComment::EmacsComment::KEYWORDS
# uninitialized constant RuboCop::MagicComment::EmacsComment::TOKEN
# Did you mean?  RuboCop::Token
# uninitialized constant RuboCop::MagicComment::VimComment::TOKEN
# Did you mean?  RuboCop::Token
# wrong constant name <Class:Compiler>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Lexer>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant RuboCop::TargetRuby::ToolVersionsFile::RUBY_VERSION_FILENAME
# Did you mean?  RuboCop::TargetRuby::RubyVersionFile
# uninitialized constant RuboCop::TargetRuby::ToolVersionsFile::RUBY_VERSION_PATTERN
# Did you mean?  RuboCop::TargetRuby::RubyVersionFile
# wrong constant name node_id
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pretty_print_children
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name script_lines
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name source
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name script_lines
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name enabled?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pause
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name resume
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name enabled?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name reset_stats!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name runtime_stats
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name simulate_oom!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name stats_enabled?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name keep_script_lines
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name keep_script_lines=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant SDBM
# uninitialized constant SDBM
# uninitialized constant SDBMError
# uninitialized constant SDBMError
# uninitialized constant Scanf
# uninitialized constant Scanf
# wrong constant name <=>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ==
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ===
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name divide
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name eql?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name flatten_merge
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pretty_print
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pretty_print_cycle
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name reset
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Shell
# uninitialized constant Shell
# uninitialized constant VERSION
# wrong constant name _dump
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name clone
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dup
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _load
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name clone
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name __init__
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Socket::APPEND
# uninitialized constant Socket::BINARY
# uninitialized constant Socket::CREAT
# uninitialized constant Socket::DSYNC
# Did you mean?  Socket::SYNC
# uninitialized constant Socket::EXCL
# uninitialized constant Socket::FNM_CASEFOLD
# Did you mean?  Socket::FNM_SYSCASE
# uninitialized constant Socket::FNM_DOTMATCH
# uninitialized constant Socket::FNM_EXTGLOB
# uninitialized constant Socket::FNM_NOESCAPE
# Did you mean?  Socket::FNM_CASEFOLD
# uninitialized constant Socket::FNM_PATHNAME
# Did you mean?  Socket::FNM_SHORTNAME
# uninitialized constant Socket::FNM_SHORTNAME
# Did you mean?  Socket::FNM_SYSCASE
# uninitialized constant Socket::FNM_SYSCASE
# Did you mean?  Socket::FNM_CASEFOLD
# uninitialized constant Socket::LOCK_EX
# Did you mean?  Socket::LOCK_NB
#                Socket::LOCK_UN
#                Socket::LOCK_SH
# uninitialized constant Socket::LOCK_NB
# Did you mean?  Socket::LOCK_UN
#                Socket::LOCK_EX
#                Socket::LOCK_SH
# uninitialized constant Socket::LOCK_SH
# Did you mean?  Socket::LOCK_NB
#                Socket::LOCK_UN
#                Socket::LOCK_EX
# uninitialized constant Socket::LOCK_UN
# Did you mean?  Socket::LOCK_NB
#                Socket::LOCK_EX
#                Socket::LOCK_SH
# uninitialized constant Socket::NOCTTY
# uninitialized constant Socket::NOFOLLOW
# uninitialized constant Socket::NONBLOCK
# uninitialized constant Socket::NULL
# uninitialized constant Socket::PRIORITY
# uninitialized constant Socket::RDONLY
# Did you mean?  Socket::WRONLY
# uninitialized constant Socket::RDWR
# uninitialized constant Socket::READABLE
# Did you mean?  Forwardable
# uninitialized constant Socket::SEEK_CUR
# Did you mean?  Socket::SEEK_END
# uninitialized constant Socket::SEEK_DATA
# Did you mean?  Socket::SEEK_SET
# uninitialized constant Socket::SEEK_END
# Did you mean?  Socket::SEEK_SET
# uninitialized constant Socket::SEEK_HOLE
# Did you mean?  Socket::SEEK_END
# uninitialized constant Socket::SEEK_SET
# Did you mean?  Socket::SEEK_END
# uninitialized constant Socket::SHARE_DELETE
# uninitialized constant Socket::SYNC
# Did you mean?  Socket::DSYNC
# uninitialized constant Socket::TRUNC
# uninitialized constant Socket::WRITABLE
# Did you mean?  Socket::WaitWritable
# uninitialized constant Socket::WRONLY
# Did you mean?  Socket::RDONLY
# wrong constant name shellescape
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name shellsplit
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_encoding_by_bom
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name new
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name bol?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fixed_anchor?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name deconstruct
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name deconstruct_keys
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name filter
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name new
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Struct>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name ends_with?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name starts_with?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Sync
# uninitialized constant Sync
# uninitialized constant Sync_m
# uninitialized constant Sync_m
# uninitialized constant Syslog
# uninitialized constant Syslog
# wrong constant name <Class:Mixin>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name system_command
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name system_command!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name T.noreturn
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name T.noreturn
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name T.untyped
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <Class:Remover>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant VERSION
# wrong constant name _close
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name call
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name native_thread_id
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name limit
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ignore_deadlock
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ignore_deadlock=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name new
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant ThreadsWait
# uninitialized constant ThreadsWait
# uninitialized constant Time::DAYS_INTO_WEEK
# uninitialized constant Time::WEEKEND_DAYS
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name eval_script
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name instruction_sequence
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parameters
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name allow_reentry
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name new
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Tracer
# Did you mean?  TracePoint
# uninitialized constant Tracer
# Did you mean?  TracePoint
# wrong constant name <Class:Normalizer>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant UNF::Normalizer::VERSION
# wrong constant name normalize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# undefined singleton method `instance' for `UNF::Normalizer'
# 
#           method = klass.singleton_method(name)
#                         ^^^^^^^^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name instance
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name normalize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:File>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:WS>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::Escape
# Did you mean?  URI::ESCAPED
# uninitialized constant URI::Escape
# Did you mean?  URI::ESCAPED
# wrong constant name new2
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::File::ABS_PATH
# uninitialized constant URI::File::ABS_URI
# Did you mean?  URI::File::ABS_URI_REF
# uninitialized constant URI::File::ABS_URI_REF
# uninitialized constant URI::File::DEFAULT_PARSER
# Did you mean?  URI::File::DEFAULT_PORT
# uninitialized constant URI::File::ESCAPED
# uninitialized constant URI::File::FRAGMENT
# uninitialized constant URI::File::HOST
# uninitialized constant URI::File::OPAQUE
# uninitialized constant URI::File::PORT
# uninitialized constant URI::File::QUERY
# uninitialized constant URI::File::REGISTRY
# uninitialized constant URI::File::REL_PATH
# uninitialized constant URI::File::REL_URI
# Did you mean?  URI::File::REL_URI_REF
# uninitialized constant URI::File::REL_URI_REF
# uninitialized constant URI::File::RFC3986_PARSER
# Did you mean?  URI::File::RFC3986_Parser
#                URI::RFC3986_Parser
#                URI::File::RFC2396_Parser
#                URI::RFC2396_Parser
# uninitialized constant URI::File::SCHEME
# uninitialized constant URI::File::TBLDECWWWCOMP_
# Did you mean?  URI::File::TBLENCWWWCOMP_
#                URI::TBLENCWWWCOMP_
# uninitialized constant URI::File::TBLENCWWWCOMP_
# Did you mean?  URI::File::TBLDECWWWCOMP_
#                URI::TBLDECWWWCOMP_
# uninitialized constant URI::File::UNSAFE
# uninitialized constant URI::File::URI_REF
# uninitialized constant URI::File::USERINFO
# uninitialized constant URI::File::USE_REGISTRY
# uninitialized constant URI::File::VERSION
# Did you mean?  URI::File::VERSION_CODE
# uninitialized constant URI::File::VERSION_CODE
# uninitialized constant URI::File::WEB_ENCODINGS_
# Did you mean?  Encoding
# wrong constant name check_password
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check_user
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check_userinfo
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_userinfo
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name authority
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name origin
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name attributes
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name attributes=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dn
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dn=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name extensions
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name extensions=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name filter
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name filter=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scope
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scope=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_attributes
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_dn
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_extensions
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_filter
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_scope
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name join
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name regexp
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name split
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name make_components_hash
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::WS::ABS_PATH
# uninitialized constant URI::WS::ABS_URI
# Did you mean?  URI::WS::ABS_URI_REF
# uninitialized constant URI::WS::ABS_URI_REF
# uninitialized constant URI::WS::DEFAULT_PARSER
# Did you mean?  URI::WS::DEFAULT_PORT
# uninitialized constant URI::WS::ESCAPED
# uninitialized constant URI::WS::FRAGMENT
# uninitialized constant URI::WS::HOST
# uninitialized constant URI::WS::OPAQUE
# uninitialized constant URI::WS::PORT
# uninitialized constant URI::WS::QUERY
# uninitialized constant URI::WS::REGISTRY
# uninitialized constant URI::WS::REL_PATH
# uninitialized constant URI::WS::REL_URI
# Did you mean?  URI::WS::REL_URI_REF
# uninitialized constant URI::WS::REL_URI_REF
# uninitialized constant URI::WS::RFC3986_PARSER
# Did you mean?  URI::WS::RFC3986_Parser
#                URI::RFC3986_Parser
#                URI::WS::RFC2396_Parser
#                URI::RFC2396_Parser
# uninitialized constant URI::WS::SCHEME
# uninitialized constant URI::WS::TBLDECWWWCOMP_
# Did you mean?  URI::WS::TBLENCWWWCOMP_
#                URI::TBLENCWWWCOMP_
# uninitialized constant URI::WS::TBLENCWWWCOMP_
# Did you mean?  URI::WS::TBLDECWWWCOMP_
#                URI::TBLDECWWWCOMP_
# uninitialized constant URI::WS::UNSAFE
# uninitialized constant URI::WS::URI_REF
# uninitialized constant URI::WS::USERINFO
# uninitialized constant URI::WS::USE_REGISTRY
# uninitialized constant URI::WS::VERSION
# Did you mean?  URI::WS::VERSION_CODE
# uninitialized constant URI::WS::VERSION_CODE
# uninitialized constant URI::WS::WEB_ENCODINGS_
# Did you mean?  Encoding
# wrong constant name request_uri
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name get_encoding
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name register_scheme
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name private?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name protected?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name public?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::AST::Enumerator::Elem
# uninitialized constant Unparser::Concord::DELEGATION_RESERVED_KEYWORDS
# Did you mean?  Unparser::Concord::DelegationError
# uninitialized constant Unparser::Concord::DELEGATION_RESERVED_METHOD_NAMES
# Did you mean?  Unparser::Concord::DELEGATION_RESERVED_KEYWORDS
# uninitialized constant Unparser::Concord::RUBY_RESERVED_KEYWORDS
# Did you mean?  RUBY_RELEASE_DATE
# uninitialized constant Unparser::Emitter::BINARY_OPERATORS
# Did you mean?  Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::KEYWORDS
# uninitialized constant Unparser::Emitter::K_ALIAS
# Did you mean?  Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::K_AND
# Did you mean?  Unparser::Emitter::K_END
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::K_BEGIN
# Did you mean?  Unparser::Emitter::Begin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::K_BREAK
# uninitialized constant Unparser::Emitter::K_CASE
# Did you mean?  Unparser::Emitter::Case
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
# uninitialized constant Unparser::Emitter::K_CLASS
# Did you mean?  Unparser::Emitter::Class
#                Class
#                Unparser::Emitter::SClass
#                Unparser::Emitter::K_CASE
# uninitialized constant Unparser::Emitter::K_DEF
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::K_UNDEF
# uninitialized constant Unparser::Emitter::K_DEFINE
# Did you mean?  Unparser::Emitter::K_DEFINED
# uninitialized constant Unparser::Emitter::K_DEFINED
# Did you mean?  Unparser::Emitter::Defined
# uninitialized constant Unparser::Emitter::K_DO
# Did you mean?  Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::K_EEND
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::K_ELSE
# Did you mean?  Unparser::Emitter::K_ELSIF
#                Unparser::Emitter::K_FALSE
# uninitialized constant Unparser::Emitter::K_ELSIF
# Did you mean?  Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::K_ENCODING
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::K_END
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::K_ENSURE
# Did you mean?  Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::K_FALSE
# Did you mean?  Unparser::Emitter::K_FILE
#                Unparser::Emitter::K_ELSE
#                Unparser::Emitter::K_CASE
# uninitialized constant Unparser::Emitter::K_FILE
# Did you mean?  File
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::K_WHILE
#                Unparser::Emitter::K_FALSE
# uninitialized constant Unparser::Emitter::K_FOR
# Did you mean?  Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::K_IF
# Did you mean?  Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::K_IN
# Did you mean?  Unparser::Emitter::K_IF
# uninitialized constant Unparser::Emitter::K_MODULE
# Did you mean?  Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::K_NEXT
# Did you mean?  Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::K_NIL
# Did you mean?  Unparser::Emitter::K_IN
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::K_UNTIL
# uninitialized constant Unparser::Emitter::K_NOT
# Did you mean?  Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::K_OR
# Did you mean?  Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::K_POSTEXE
# uninitialized constant Unparser::Emitter::K_PREEXE
# uninitialized constant Unparser::Emitter::K_REDO
# Did you mean?  Unparser::Emitter::K_DO
# uninitialized constant Unparser::Emitter::K_RESCUE
# Did you mean?  Unparser::Emitter::Rescue
# uninitialized constant Unparser::Emitter::K_RETRY
# Did you mean?  Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::K_RETURN
# Did you mean?  Unparser::Emitter::K_RETRY
# uninitialized constant Unparser::Emitter::K_SELF
# Did you mean?  Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::K_SUPER
# Did you mean?  Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::K_THEN
# Did you mean?  Unparser::Emitter::K_WHEN
# uninitialized constant Unparser::Emitter::K_TRUE
# Did you mean?  Unparser::Emitter::K_THEN
# uninitialized constant Unparser::Emitter::K_UNDEF
# Did you mean?  Unparser::Emitter::Undef
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::K_UNLESS
# Did you mean?  Unparser::Emitter::K_UNTIL
# uninitialized constant Unparser::Emitter::K_UNTIL
# Did you mean?  Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::K_WHEN
# Did you mean?  Unparser::Emitter::When
#                Unparser::Emitter::K_THEN
# uninitialized constant Unparser::Emitter::K_WHILE
# Did you mean?  Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::K_YIELD
# Did you mean?  Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::UNARY_OPERATORS
# Did you mean?  Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::Emitter::Assignment::BINARY_OPERATORS
# Did you mean?  Unparser::Emitter::Assignment::UNARY_OPERATORS
#                Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::Assignment::KEYWORDS
# uninitialized constant Unparser::Emitter::Assignment::K_ALIAS
# Did you mean?  Unparser::Emitter::Assignment::Alias
#                Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::Assignment::K_AND
# Did you mean?  Unparser::Emitter::Assignment::K_END
#                Unparser::Emitter::K_END
#                Unparser::Emitter::Assignment::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::Assignment::K_BEGIN
# Did you mean?  Unparser::Emitter::Assignment::Begin
#                Unparser::Emitter::Begin
#                Unparser::Emitter::Assignment::KWBegin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::Assignment::K_BREAK
# uninitialized constant Unparser::Emitter::Assignment::K_CASE
# Did you mean?  Unparser::Emitter::Assignment::Case
#                Unparser::Emitter::Case
#                Unparser::Emitter::Assignment::K_FALSE
#                Unparser::Emitter::Assignment::K_CLASS
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
# uninitialized constant Unparser::Emitter::Assignment::K_CLASS
# Did you mean?  Unparser::Emitter::Assignment::Class
#                Unparser::Emitter::Class
#                Class
#                Unparser::Emitter::Assignment::SClass
#                Unparser::Emitter::SClass
#                Unparser::Emitter::Assignment::K_CASE
#                Unparser::Emitter::K_CASE
# uninitialized constant Unparser::Emitter::Assignment::K_DEF
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::Assignment::K_DO
#                Unparser::Emitter::Assignment::K_SELF
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::Assignment::K_UNDEF
#                Unparser::Emitter::K_UNDEF
# uninitialized constant Unparser::Emitter::Assignment::K_DEFINE
# Did you mean?  Unparser::Emitter::K_DEFINED
#                Unparser::Emitter::Assignment::K_DEFINED
# uninitialized constant Unparser::Emitter::Assignment::K_DEFINED
# Did you mean?  Unparser::Emitter::Defined
#                Unparser::Emitter::Assignment::Defined
#                Unparser::Emitter::K_DEFINE
# uninitialized constant Unparser::Emitter::Assignment::K_DO
# Did you mean?  Unparser::Emitter::Assignment::K_OR
# uninitialized constant Unparser::Emitter::Assignment::K_EEND
# Did you mean?  Unparser::Emitter::Assignment::K_AND
#                Unparser::Emitter::K_END
#                Unparser::Emitter::K_AND
#                Unparser::Emitter::Assignment::K_END
# uninitialized constant Unparser::Emitter::Assignment::K_ELSE
# Did you mean?  Unparser::Emitter::K_FALSE
#                Unparser::Emitter::Assignment::K_ELSIF
#                Unparser::Emitter::Assignment::K_FALSE
#                Unparser::Emitter::K_ELSIF
# uninitialized constant Unparser::Emitter::Assignment::K_ELSIF
# Did you mean?  Unparser::Emitter::Assignment::K_ELSE
#                Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::Assignment::K_ENCODING
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::Assignment::K_END
# Did you mean?  Unparser::Emitter::Assignment::K_AND
#                Unparser::Emitter::K_AND
#                Unparser::Emitter::Assignment::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::Assignment::K_ENSURE
# Did you mean?  Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::Assignment::K_FALSE
# Did you mean?  Unparser::Emitter::K_ELSE
#                Unparser::Emitter::Assignment::K_FILE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::Assignment::K_ELSE
#                Unparser::Emitter::Assignment::K_CASE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Assignment::K_FILE
# Did you mean?  File
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::Assignment::K_NIL
#                Unparser::Emitter::Assignment::K_FALSE
#                Unparser::Emitter::K_WHILE
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::Assignment::K_WHILE
# uninitialized constant Unparser::Emitter::Assignment::K_FOR
# Did you mean?  Unparser::Emitter::Assignment::K_OR
#                Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::Assignment::K_IF
# Did you mean?  Unparser::Emitter::Assignment::K_IN
#                Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::Assignment::K_IN
# Did you mean?  Unparser::Emitter::Assignment::K_IF
#                Unparser::Emitter::K_IF
# uninitialized constant Unparser::Emitter::Assignment::K_MODULE
# Did you mean?  Unparser::Emitter::Assignment::Module
#                Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::Assignment::K_NEXT
# Did you mean?  Unparser::Emitter::Assignment::K_NOT
#                Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::Assignment::K_NIL
# Did you mean?  Unparser::Emitter::Assignment::K_IN
#                Unparser::Emitter::K_IN
#                Unparser::Emitter::Assignment::K_FILE
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::Assignment::K_UNTIL
#                Unparser::Emitter::K_UNTIL
# uninitialized constant Unparser::Emitter::Assignment::K_NOT
# Did you mean?  Unparser::Emitter::Assignment::K_NEXT
#                Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::Assignment::K_OR
# Did you mean?  Unparser::Emitter::Assignment::K_FOR
#                Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::Assignment::K_POSTEXE
# uninitialized constant Unparser::Emitter::Assignment::K_PREEXE
# uninitialized constant Unparser::Emitter::Assignment::K_REDO
# Did you mean?  Unparser::Emitter::Assignment::K_DO
#                Unparser::Emitter::K_DO
# uninitialized constant Unparser::Emitter::Assignment::K_RESCUE
# Did you mean?  Unparser::Emitter::Rescue
#                Unparser::Emitter::Assignment::Rescue
# uninitialized constant Unparser::Emitter::Assignment::K_RETRY
# Did you mean?  Unparser::Emitter::Assignment::K_RETURN
#                Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::Assignment::K_RETURN
# Did you mean?  Unparser::Emitter::Assignment::K_RETRY
#                Unparser::Emitter::K_RETRY
# uninitialized constant Unparser::Emitter::Assignment::K_SELF
# Did you mean?  Unparser::Emitter::Assignment::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Assignment::K_SUPER
# Did you mean?  Unparser::Emitter::Assignment::Super
#                Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::Assignment::K_THEN
# Did you mean?  Unparser::Emitter::Assignment::K_WHEN
#                Unparser::Emitter::K_WHEN
# uninitialized constant Unparser::Emitter::Assignment::K_TRUE
# Did you mean?  Unparser::Emitter::Assignment::K_THEN
# uninitialized constant Unparser::Emitter::Assignment::K_UNDEF
# Did you mean?  Unparser::Emitter::Assignment::Undef
#                Unparser::Emitter::Undef
#                Unparser::Emitter::Assignment::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Assignment::K_UNLESS
# Did you mean?  Unparser::Emitter::Assignment::K_UNTIL
# uninitialized constant Unparser::Emitter::Assignment::K_UNTIL
# Did you mean?  Unparser::Emitter::Assignment::K_NIL
#                Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::Assignment::K_WHEN
# Did you mean?  Unparser::Emitter::When
#                Unparser::Emitter::Assignment::When
#                Unparser::Emitter::K_THEN
#                Unparser::Emitter::Assignment::K_THEN
# uninitialized constant Unparser::Emitter::Assignment::K_WHILE
# Did you mean?  Unparser::Emitter::Assignment::K_FILE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Assignment::K_YIELD
# Did you mean?  Unparser::Emitter::Assignment::Yield
#                Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::Assignment::NO_INDENT
# uninitialized constant Unparser::Emitter::Assignment::REGISTRY
# uninitialized constant Unparser::Emitter::Assignment::UNARY_OPERATORS
# Did you mean?  Unparser::Emitter::Assignment::BINARY_OPERATOR
#                Unparser::Emitter::Assignment::BINARY_OPERATORS
#                Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::Emitter::BinaryAssign::BINARY_OPERATORS
# Did you mean?  Unparser::Emitter::BinaryAssign::UNARY_OPERATORS
#                Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::BinaryAssign::KEYWORDS
# uninitialized constant Unparser::Emitter::BinaryAssign::K_ALIAS
# Did you mean?  Unparser::Emitter::BinaryAssign::Alias
#                Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::BinaryAssign::K_AND
# Did you mean?  Unparser::Emitter::BinaryAssign::K_END
#                Unparser::Emitter::K_END
#                Unparser::Emitter::BinaryAssign::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::BinaryAssign::K_BEGIN
# Did you mean?  Unparser::Emitter::BinaryAssign::Begin
#                Unparser::Emitter::Begin
#                Unparser::Emitter::BinaryAssign::KWBegin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::BinaryAssign::K_BREAK
# uninitialized constant Unparser::Emitter::BinaryAssign::K_CASE
# Did you mean?  Unparser::Emitter::BinaryAssign::Case
#                Unparser::Emitter::Case
#                Unparser::Emitter::BinaryAssign::K_FALSE
#                Unparser::Emitter::BinaryAssign::K_CLASS
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
# uninitialized constant Unparser::Emitter::BinaryAssign::K_CLASS
# Did you mean?  Unparser::Emitter::BinaryAssign::Class
#                Unparser::Emitter::Class
#                Class
#                Unparser::Emitter::BinaryAssign::SClass
#                Unparser::Emitter::SClass
#                Unparser::Emitter::BinaryAssign::K_CASE
#                Unparser::Emitter::K_CASE
# uninitialized constant Unparser::Emitter::BinaryAssign::K_DEF
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::BinaryAssign::K_DO
#                Unparser::Emitter::BinaryAssign::K_SELF
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::BinaryAssign::K_UNDEF
#                Unparser::Emitter::K_UNDEF
# uninitialized constant Unparser::Emitter::BinaryAssign::K_DEFINE
# Did you mean?  Unparser::Emitter::K_DEFINED
#                Unparser::Emitter::BinaryAssign::K_DEFINED
# uninitialized constant Unparser::Emitter::BinaryAssign::K_DEFINED
# Did you mean?  Unparser::Emitter::Defined
#                Unparser::Emitter::BinaryAssign::Defined
#                Unparser::Emitter::K_DEFINE
# uninitialized constant Unparser::Emitter::BinaryAssign::K_DO
# Did you mean?  Unparser::Emitter::BinaryAssign::K_OR
# uninitialized constant Unparser::Emitter::BinaryAssign::K_EEND
# Did you mean?  Unparser::Emitter::BinaryAssign::K_AND
#                Unparser::Emitter::K_END
#                Unparser::Emitter::K_AND
#                Unparser::Emitter::BinaryAssign::K_END
# uninitialized constant Unparser::Emitter::BinaryAssign::K_ELSE
# Did you mean?  Unparser::Emitter::K_FALSE
#                Unparser::Emitter::BinaryAssign::K_ELSIF
#                Unparser::Emitter::BinaryAssign::K_FALSE
#                Unparser::Emitter::K_ELSIF
# uninitialized constant Unparser::Emitter::BinaryAssign::K_ELSIF
# Did you mean?  Unparser::Emitter::BinaryAssign::K_ELSE
#                Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::BinaryAssign::K_ENCODING
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::BinaryAssign::K_END
# Did you mean?  Unparser::Emitter::BinaryAssign::K_AND
#                Unparser::Emitter::K_AND
#                Unparser::Emitter::BinaryAssign::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::BinaryAssign::K_ENSURE
# Did you mean?  Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::BinaryAssign::K_FALSE
# Did you mean?  Unparser::Emitter::K_ELSE
#                Unparser::Emitter::BinaryAssign::K_FILE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::BinaryAssign::K_ELSE
#                Unparser::Emitter::BinaryAssign::K_CASE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::BinaryAssign::K_FILE
# Did you mean?  File
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::BinaryAssign::K_NIL
#                Unparser::Emitter::BinaryAssign::K_FALSE
#                Unparser::Emitter::K_WHILE
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::BinaryAssign::K_WHILE
# uninitialized constant Unparser::Emitter::BinaryAssign::K_FOR
# Did you mean?  Unparser::Emitter::BinaryAssign::K_OR
#                Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::BinaryAssign::K_IF
# Did you mean?  Unparser::Emitter::BinaryAssign::K_IN
#                Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::BinaryAssign::K_IN
# Did you mean?  Unparser::Emitter::BinaryAssign::K_IF
#                Unparser::Emitter::K_IF
# uninitialized constant Unparser::Emitter::BinaryAssign::K_MODULE
# Did you mean?  Unparser::Emitter::BinaryAssign::Module
#                Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::BinaryAssign::K_NEXT
# Did you mean?  Unparser::Emitter::BinaryAssign::K_NOT
#                Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::BinaryAssign::K_NIL
# Did you mean?  Unparser::Emitter::BinaryAssign::K_IN
#                Unparser::Emitter::K_IN
#                Unparser::Emitter::BinaryAssign::K_FILE
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::BinaryAssign::K_UNTIL
#                Unparser::Emitter::K_UNTIL
# uninitialized constant Unparser::Emitter::BinaryAssign::K_NOT
# Did you mean?  Unparser::Emitter::BinaryAssign::K_NEXT
#                Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::BinaryAssign::K_OR
# Did you mean?  Unparser::Emitter::BinaryAssign::K_FOR
#                Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::BinaryAssign::K_POSTEXE
# uninitialized constant Unparser::Emitter::BinaryAssign::K_PREEXE
# uninitialized constant Unparser::Emitter::BinaryAssign::K_REDO
# Did you mean?  Unparser::Emitter::BinaryAssign::K_DO
#                Unparser::Emitter::K_DO
# uninitialized constant Unparser::Emitter::BinaryAssign::K_RESCUE
# Did you mean?  Unparser::Emitter::Rescue
#                Unparser::Emitter::BinaryAssign::Rescue
# uninitialized constant Unparser::Emitter::BinaryAssign::K_RETRY
# Did you mean?  Unparser::Emitter::BinaryAssign::K_RETURN
#                Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::BinaryAssign::K_RETURN
# Did you mean?  Unparser::Emitter::BinaryAssign::K_RETRY
#                Unparser::Emitter::K_RETRY
# uninitialized constant Unparser::Emitter::BinaryAssign::K_SELF
# Did you mean?  Unparser::Emitter::BinaryAssign::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::BinaryAssign::K_SUPER
# Did you mean?  Unparser::Emitter::BinaryAssign::Super
#                Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::BinaryAssign::K_THEN
# Did you mean?  Unparser::Emitter::BinaryAssign::K_WHEN
#                Unparser::Emitter::K_WHEN
# uninitialized constant Unparser::Emitter::BinaryAssign::K_TRUE
# Did you mean?  Unparser::Emitter::BinaryAssign::K_THEN
# uninitialized constant Unparser::Emitter::BinaryAssign::K_UNDEF
# Did you mean?  Unparser::Emitter::BinaryAssign::Undef
#                Unparser::Emitter::Undef
#                Unparser::Emitter::BinaryAssign::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::BinaryAssign::K_UNLESS
# Did you mean?  Unparser::Emitter::BinaryAssign::K_UNTIL
# uninitialized constant Unparser::Emitter::BinaryAssign::K_UNTIL
# Did you mean?  Unparser::Emitter::BinaryAssign::K_NIL
#                Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::BinaryAssign::K_WHEN
# Did you mean?  Unparser::Emitter::When
#                Unparser::Emitter::BinaryAssign::When
#                Unparser::Emitter::K_THEN
#                Unparser::Emitter::BinaryAssign::K_THEN
# uninitialized constant Unparser::Emitter::BinaryAssign::K_WHILE
# Did you mean?  Unparser::Emitter::BinaryAssign::K_FILE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::BinaryAssign::K_YIELD
# Did you mean?  Unparser::Emitter::BinaryAssign::Yield
#                Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::BinaryAssign::NO_INDENT
# uninitialized constant Unparser::Emitter::BinaryAssign::REGISTRY
# uninitialized constant Unparser::Emitter::BinaryAssign::UNARY_OPERATORS
# Did you mean?  Unparser::Emitter::BinaryAssign::BINARY_OPERATORS
#                Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::Emitter::CaseGuard::BINARY_OPERATORS
# Did you mean?  Unparser::Emitter::CaseGuard::UNARY_OPERATORS
#                Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::CaseGuard::KEYWORDS
# uninitialized constant Unparser::Emitter::CaseGuard::K_ALIAS
# Did you mean?  Unparser::Emitter::CaseGuard::Alias
#                Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::CaseGuard::K_AND
# Did you mean?  Unparser::Emitter::CaseGuard::K_END
#                Unparser::Emitter::K_END
#                Unparser::Emitter::CaseGuard::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::CaseGuard::K_BEGIN
# Did you mean?  Unparser::Emitter::CaseGuard::Begin
#                Unparser::Emitter::Begin
#                Unparser::Emitter::CaseGuard::KWBegin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::CaseGuard::K_BREAK
# uninitialized constant Unparser::Emitter::CaseGuard::K_CASE
# Did you mean?  Unparser::Emitter::CaseGuard::Case
#                Unparser::Emitter::CaseGuard::K_FALSE
#                Unparser::Emitter::CaseGuard::K_CLASS
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
# uninitialized constant Unparser::Emitter::CaseGuard::K_CLASS
# Did you mean?  Unparser::Emitter::CaseGuard::Class
#                Unparser::Emitter::Class
#                Class
#                Unparser::Emitter::CaseGuard::SClass
#                Unparser::Emitter::SClass
#                Unparser::Emitter::CaseGuard::K_CASE
#                Unparser::Emitter::K_CASE
# uninitialized constant Unparser::Emitter::CaseGuard::K_DEF
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::CaseGuard::K_DO
#                Unparser::Emitter::CaseGuard::K_SELF
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::CaseGuard::K_UNDEF
#                Unparser::Emitter::K_UNDEF
# uninitialized constant Unparser::Emitter::CaseGuard::K_DEFINE
# Did you mean?  Unparser::Emitter::K_DEFINED
#                Unparser::Emitter::CaseGuard::K_DEFINED
# uninitialized constant Unparser::Emitter::CaseGuard::K_DEFINED
# Did you mean?  Unparser::Emitter::Defined
#                Unparser::Emitter::CaseGuard::Defined
#                Unparser::Emitter::K_DEFINE
# uninitialized constant Unparser::Emitter::CaseGuard::K_DO
# Did you mean?  Unparser::Emitter::CaseGuard::K_OR
# uninitialized constant Unparser::Emitter::CaseGuard::K_EEND
# Did you mean?  Unparser::Emitter::CaseGuard::K_AND
#                Unparser::Emitter::K_END
#                Unparser::Emitter::K_AND
#                Unparser::Emitter::CaseGuard::K_END
# uninitialized constant Unparser::Emitter::CaseGuard::K_ELSE
# Did you mean?  Unparser::Emitter::K_FALSE
#                Unparser::Emitter::CaseGuard::K_ELSIF
#                Unparser::Emitter::CaseGuard::K_FALSE
#                Unparser::Emitter::K_ELSIF
# uninitialized constant Unparser::Emitter::CaseGuard::K_ELSIF
# Did you mean?  Unparser::Emitter::CaseGuard::K_ELSE
#                Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::CaseGuard::K_ENCODING
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::CaseGuard::K_END
# Did you mean?  Unparser::Emitter::CaseGuard::K_AND
#                Unparser::Emitter::K_AND
#                Unparser::Emitter::CaseGuard::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::CaseGuard::K_ENSURE
# Did you mean?  Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::CaseGuard::K_FALSE
# Did you mean?  Unparser::Emitter::K_ELSE
#                Unparser::Emitter::CaseGuard::K_FILE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::CaseGuard::K_ELSE
#                Unparser::Emitter::CaseGuard::K_CASE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::CaseGuard::K_FILE
# Did you mean?  File
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::CaseGuard::K_NIL
#                Unparser::Emitter::CaseGuard::K_FALSE
#                Unparser::Emitter::K_WHILE
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::CaseGuard::K_WHILE
# uninitialized constant Unparser::Emitter::CaseGuard::K_FOR
# Did you mean?  Unparser::Emitter::CaseGuard::K_OR
#                Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::CaseGuard::K_IF
# Did you mean?  Unparser::Emitter::CaseGuard::K_IN
#                Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::CaseGuard::K_IN
# Did you mean?  Unparser::Emitter::CaseGuard::K_IF
#                Unparser::Emitter::K_IF
# uninitialized constant Unparser::Emitter::CaseGuard::K_MODULE
# Did you mean?  Unparser::Emitter::CaseGuard::Module
#                Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::CaseGuard::K_NEXT
# Did you mean?  Unparser::Emitter::CaseGuard::K_NOT
#                Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::CaseGuard::K_NIL
# Did you mean?  Unparser::Emitter::CaseGuard::K_IN
#                Unparser::Emitter::K_IN
#                Unparser::Emitter::CaseGuard::K_FILE
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::CaseGuard::K_UNTIL
#                Unparser::Emitter::K_UNTIL
# uninitialized constant Unparser::Emitter::CaseGuard::K_NOT
# Did you mean?  Unparser::Emitter::CaseGuard::K_NEXT
#                Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::CaseGuard::K_OR
# Did you mean?  Unparser::Emitter::CaseGuard::K_FOR
#                Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::CaseGuard::K_POSTEXE
# uninitialized constant Unparser::Emitter::CaseGuard::K_PREEXE
# uninitialized constant Unparser::Emitter::CaseGuard::K_REDO
# Did you mean?  Unparser::Emitter::CaseGuard::K_DO
#                Unparser::Emitter::K_DO
# uninitialized constant Unparser::Emitter::CaseGuard::K_RESCUE
# Did you mean?  Unparser::Emitter::Rescue
#                Unparser::Emitter::CaseGuard::Rescue
# uninitialized constant Unparser::Emitter::CaseGuard::K_RETRY
# Did you mean?  Unparser::Emitter::CaseGuard::K_RETURN
#                Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::CaseGuard::K_RETURN
# Did you mean?  Unparser::Emitter::CaseGuard::K_RETRY
#                Unparser::Emitter::K_RETRY
# uninitialized constant Unparser::Emitter::CaseGuard::K_SELF
# Did you mean?  Unparser::Emitter::CaseGuard::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::CaseGuard::K_SUPER
# Did you mean?  Unparser::Emitter::CaseGuard::Super
#                Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::CaseGuard::K_THEN
# Did you mean?  Unparser::Emitter::CaseGuard::K_WHEN
#                Unparser::Emitter::K_WHEN
# uninitialized constant Unparser::Emitter::CaseGuard::K_TRUE
# Did you mean?  Unparser::Emitter::CaseGuard::K_THEN
# uninitialized constant Unparser::Emitter::CaseGuard::K_UNDEF
# Did you mean?  Unparser::Emitter::CaseGuard::Undef
#                Unparser::Emitter::Undef
#                Unparser::Emitter::CaseGuard::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::CaseGuard::K_UNLESS
# Did you mean?  Unparser::Emitter::CaseGuard::K_UNTIL
# uninitialized constant Unparser::Emitter::CaseGuard::K_UNTIL
# Did you mean?  Unparser::Emitter::CaseGuard::K_NIL
#                Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::CaseGuard::K_WHEN
# Did you mean?  Unparser::Emitter::When
#                Unparser::Emitter::CaseGuard::When
#                Unparser::Emitter::K_THEN
#                Unparser::Emitter::CaseGuard::K_THEN
# uninitialized constant Unparser::Emitter::CaseGuard::K_WHILE
# Did you mean?  Unparser::Emitter::CaseGuard::K_FILE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::CaseGuard::K_YIELD
# Did you mean?  Unparser::Emitter::CaseGuard::Yield
#                Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::CaseGuard::NO_INDENT
# uninitialized constant Unparser::Emitter::CaseGuard::REGISTRY
# uninitialized constant Unparser::Emitter::CaseGuard::UNARY_OPERATORS
# Did you mean?  Unparser::Emitter::CaseGuard::BINARY_OPERATORS
#                Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::Emitter::FlipFlop::BINARY_OPERATORS
# Did you mean?  Unparser::Emitter::FlipFlop::UNARY_OPERATORS
#                Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::FlipFlop::KEYWORDS
# uninitialized constant Unparser::Emitter::FlipFlop::K_ALIAS
# Did you mean?  Unparser::Emitter::FlipFlop::Alias
#                Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::FlipFlop::K_AND
# Did you mean?  Unparser::Emitter::FlipFlop::K_END
#                Unparser::Emitter::K_END
#                Unparser::Emitter::FlipFlop::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::FlipFlop::K_BEGIN
# Did you mean?  Unparser::Emitter::FlipFlop::Begin
#                Unparser::Emitter::Begin
#                Unparser::Emitter::FlipFlop::KWBegin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::FlipFlop::K_BREAK
# uninitialized constant Unparser::Emitter::FlipFlop::K_CASE
# Did you mean?  Unparser::Emitter::FlipFlop::Case
#                Unparser::Emitter::Case
#                Unparser::Emitter::FlipFlop::K_FALSE
#                Unparser::Emitter::FlipFlop::K_CLASS
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
# uninitialized constant Unparser::Emitter::FlipFlop::K_CLASS
# Did you mean?  Unparser::Emitter::FlipFlop::Class
#                Unparser::Emitter::Class
#                Class
#                Unparser::Emitter::FlipFlop::SClass
#                Unparser::Emitter::SClass
#                Unparser::Emitter::FlipFlop::K_CASE
#                Unparser::Emitter::K_CASE
# uninitialized constant Unparser::Emitter::FlipFlop::K_DEF
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::FlipFlop::K_DO
#                Unparser::Emitter::FlipFlop::K_SELF
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::FlipFlop::K_UNDEF
#                Unparser::Emitter::K_UNDEF
# uninitialized constant Unparser::Emitter::FlipFlop::K_DEFINE
# Did you mean?  Unparser::Emitter::K_DEFINED
#                Unparser::Emitter::FlipFlop::K_DEFINED
# uninitialized constant Unparser::Emitter::FlipFlop::K_DEFINED
# Did you mean?  Unparser::Emitter::Defined
#                Unparser::Emitter::FlipFlop::Defined
#                Unparser::Emitter::K_DEFINE
# uninitialized constant Unparser::Emitter::FlipFlop::K_DO
# Did you mean?  Unparser::Emitter::FlipFlop::K_OR
# uninitialized constant Unparser::Emitter::FlipFlop::K_EEND
# Did you mean?  Unparser::Emitter::FlipFlop::K_AND
#                Unparser::Emitter::K_END
#                Unparser::Emitter::K_AND
#                Unparser::Emitter::FlipFlop::K_END
# uninitialized constant Unparser::Emitter::FlipFlop::K_ELSE
# Did you mean?  Unparser::Emitter::K_FALSE
#                Unparser::Emitter::FlipFlop::K_ELSIF
#                Unparser::Emitter::FlipFlop::K_FALSE
#                Unparser::Emitter::K_ELSIF
# uninitialized constant Unparser::Emitter::FlipFlop::K_ELSIF
# Did you mean?  Unparser::Emitter::FlipFlop::K_ELSE
#                Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::FlipFlop::K_ENCODING
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::FlipFlop::K_END
# Did you mean?  Unparser::Emitter::FlipFlop::K_AND
#                Unparser::Emitter::K_AND
#                Unparser::Emitter::FlipFlop::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::FlipFlop::K_ENSURE
# Did you mean?  Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::FlipFlop::K_FALSE
# Did you mean?  Unparser::Emitter::K_ELSE
#                Unparser::Emitter::FlipFlop::K_FILE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::FlipFlop::K_ELSE
#                Unparser::Emitter::FlipFlop::K_CASE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::FlipFlop::K_FILE
# Did you mean?  File
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::FlipFlop::K_NIL
#                Unparser::Emitter::FlipFlop::K_FALSE
#                Unparser::Emitter::K_WHILE
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::FlipFlop::K_WHILE
# uninitialized constant Unparser::Emitter::FlipFlop::K_FOR
# Did you mean?  Unparser::Emitter::FlipFlop::K_OR
#                Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::FlipFlop::K_IF
# Did you mean?  Unparser::Emitter::FlipFlop::K_IN
#                Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::FlipFlop::K_IN
# Did you mean?  Unparser::Emitter::FlipFlop::K_IF
#                Unparser::Emitter::K_IF
# uninitialized constant Unparser::Emitter::FlipFlop::K_MODULE
# Did you mean?  Unparser::Emitter::FlipFlop::Module
#                Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::FlipFlop::K_NEXT
# Did you mean?  Unparser::Emitter::FlipFlop::K_NOT
#                Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::FlipFlop::K_NIL
# Did you mean?  Unparser::Emitter::FlipFlop::K_IN
#                Unparser::Emitter::K_IN
#                Unparser::Emitter::FlipFlop::K_FILE
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::FlipFlop::K_UNTIL
#                Unparser::Emitter::K_UNTIL
# uninitialized constant Unparser::Emitter::FlipFlop::K_NOT
# Did you mean?  Unparser::Emitter::FlipFlop::K_NEXT
#                Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::FlipFlop::K_OR
# Did you mean?  Unparser::Emitter::FlipFlop::K_FOR
#                Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::FlipFlop::K_POSTEXE
# uninitialized constant Unparser::Emitter::FlipFlop::K_PREEXE
# uninitialized constant Unparser::Emitter::FlipFlop::K_REDO
# Did you mean?  Unparser::Emitter::FlipFlop::K_DO
#                Unparser::Emitter::K_DO
# uninitialized constant Unparser::Emitter::FlipFlop::K_RESCUE
# Did you mean?  Unparser::Emitter::Rescue
#                Unparser::Emitter::FlipFlop::Rescue
# uninitialized constant Unparser::Emitter::FlipFlop::K_RETRY
# Did you mean?  Unparser::Emitter::FlipFlop::K_RETURN
#                Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::FlipFlop::K_RETURN
# Did you mean?  Unparser::Emitter::FlipFlop::K_RETRY
#                Unparser::Emitter::K_RETRY
# uninitialized constant Unparser::Emitter::FlipFlop::K_SELF
# Did you mean?  Unparser::Emitter::FlipFlop::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::FlipFlop::K_SUPER
# Did you mean?  Unparser::Emitter::FlipFlop::Super
#                Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::FlipFlop::K_THEN
# Did you mean?  Unparser::Emitter::FlipFlop::K_WHEN
#                Unparser::Emitter::K_WHEN
# uninitialized constant Unparser::Emitter::FlipFlop::K_TRUE
# Did you mean?  Unparser::Emitter::FlipFlop::K_THEN
# uninitialized constant Unparser::Emitter::FlipFlop::K_UNDEF
# Did you mean?  Unparser::Emitter::FlipFlop::Undef
#                Unparser::Emitter::Undef
#                Unparser::Emitter::FlipFlop::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::FlipFlop::K_UNLESS
# Did you mean?  Unparser::Emitter::FlipFlop::K_UNTIL
# uninitialized constant Unparser::Emitter::FlipFlop::K_UNTIL
# Did you mean?  Unparser::Emitter::FlipFlop::K_NIL
#                Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::FlipFlop::K_WHEN
# Did you mean?  Unparser::Emitter::When
#                Unparser::Emitter::FlipFlop::When
#                Unparser::Emitter::K_THEN
#                Unparser::Emitter::FlipFlop::K_THEN
# uninitialized constant Unparser::Emitter::FlipFlop::K_WHILE
# Did you mean?  Unparser::Emitter::FlipFlop::K_FILE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::FlipFlop::K_YIELD
# Did you mean?  Unparser::Emitter::FlipFlop::Yield
#                Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::FlipFlop::NO_INDENT
# uninitialized constant Unparser::Emitter::FlipFlop::REGISTRY
# uninitialized constant Unparser::Emitter::FlipFlop::UNARY_OPERATORS
# Did you mean?  Unparser::Emitter::FlipFlop::BINARY_OPERATORS
#                Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::Emitter::Float::BINARY_OPERATORS
# Did you mean?  Unparser::Emitter::Float::UNARY_OPERATORS
#                Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::Float::KEYWORDS
# uninitialized constant Unparser::Emitter::Float::K_ALIAS
# Did you mean?  Unparser::Emitter::Float::Alias
#                Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::Float::K_AND
# Did you mean?  Unparser::Emitter::Float::K_END
#                Unparser::Emitter::K_END
#                Unparser::Emitter::Float::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::Float::K_BEGIN
# Did you mean?  Unparser::Emitter::Float::Begin
#                Unparser::Emitter::Begin
#                Unparser::Emitter::Float::KWBegin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::Float::K_BREAK
# uninitialized constant Unparser::Emitter::Float::K_CASE
# Did you mean?  Unparser::Emitter::Float::Case
#                Unparser::Emitter::Case
#                Unparser::Emitter::Float::K_FALSE
#                Unparser::Emitter::Float::K_CLASS
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
# uninitialized constant Unparser::Emitter::Float::K_CLASS
# Did you mean?  Unparser::Emitter::Float::Class
#                Unparser::Emitter::Class
#                Class
#                Unparser::Emitter::Float::SClass
#                Unparser::Emitter::SClass
#                Unparser::Emitter::Float::K_CASE
#                Unparser::Emitter::K_CASE
# uninitialized constant Unparser::Emitter::Float::K_DEF
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::Float::K_DO
#                Unparser::Emitter::Float::K_SELF
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::Float::K_UNDEF
#                Unparser::Emitter::K_UNDEF
# uninitialized constant Unparser::Emitter::Float::K_DEFINE
# Did you mean?  Unparser::Emitter::K_DEFINED
#                Unparser::Emitter::Float::K_DEFINED
# uninitialized constant Unparser::Emitter::Float::K_DEFINED
# Did you mean?  Unparser::Emitter::Defined
#                Unparser::Emitter::Float::Defined
#                Unparser::Emitter::K_DEFINE
# uninitialized constant Unparser::Emitter::Float::K_DO
# Did you mean?  Unparser::Emitter::Float::K_OR
# uninitialized constant Unparser::Emitter::Float::K_EEND
# Did you mean?  Unparser::Emitter::Float::K_AND
#                Unparser::Emitter::K_END
#                Unparser::Emitter::K_AND
#                Unparser::Emitter::Float::K_END
# uninitialized constant Unparser::Emitter::Float::K_ELSE
# Did you mean?  Unparser::Emitter::K_FALSE
#                Unparser::Emitter::Float::K_ELSIF
#                Unparser::Emitter::Float::K_FALSE
#                Unparser::Emitter::K_ELSIF
# uninitialized constant Unparser::Emitter::Float::K_ELSIF
# Did you mean?  Unparser::Emitter::Float::K_ELSE
#                Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::Float::K_ENCODING
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::Float::K_END
# Did you mean?  Unparser::Emitter::Float::K_AND
#                Unparser::Emitter::K_AND
#                Unparser::Emitter::Float::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::Float::K_ENSURE
# Did you mean?  Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::Float::K_FALSE
# Did you mean?  Unparser::Emitter::K_ELSE
#                Unparser::Emitter::Float::K_FILE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::Float::K_ELSE
#                Unparser::Emitter::Float::K_CASE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Float::K_FILE
# Did you mean?  File
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::Float::K_NIL
#                Unparser::Emitter::Float::K_FALSE
#                Unparser::Emitter::K_WHILE
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::Float::K_WHILE
# uninitialized constant Unparser::Emitter::Float::K_FOR
# Did you mean?  Unparser::Emitter::Float::K_OR
#                Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::Float::K_IF
# Did you mean?  Unparser::Emitter::Float::K_IN
#                Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::Float::K_IN
# Did you mean?  Unparser::Emitter::Float::K_IF
#                Unparser::Emitter::K_IF
# uninitialized constant Unparser::Emitter::Float::K_MODULE
# Did you mean?  Unparser::Emitter::Float::Module
#                Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::Float::K_NEXT
# Did you mean?  Unparser::Emitter::Float::K_NOT
#                Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::Float::K_NIL
# Did you mean?  Unparser::Emitter::Float::K_IN
#                Unparser::Emitter::K_IN
#                Unparser::Emitter::Float::K_FILE
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::Float::K_UNTIL
#                Unparser::Emitter::K_UNTIL
# uninitialized constant Unparser::Emitter::Float::K_NOT
# Did you mean?  Unparser::Emitter::Float::K_NEXT
#                Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::Float::K_OR
# Did you mean?  Unparser::Emitter::Float::K_FOR
#                Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::Float::K_POSTEXE
# uninitialized constant Unparser::Emitter::Float::K_PREEXE
# uninitialized constant Unparser::Emitter::Float::K_REDO
# Did you mean?  Unparser::Emitter::Float::K_DO
#                Unparser::Emitter::K_DO
# uninitialized constant Unparser::Emitter::Float::K_RESCUE
# Did you mean?  Unparser::Emitter::Rescue
#                Unparser::Emitter::Float::Rescue
# uninitialized constant Unparser::Emitter::Float::K_RETRY
# Did you mean?  Unparser::Emitter::Float::K_RETURN
#                Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::Float::K_RETURN
# Did you mean?  Unparser::Emitter::Float::K_RETRY
#                Unparser::Emitter::K_RETRY
# uninitialized constant Unparser::Emitter::Float::K_SELF
# Did you mean?  Unparser::Emitter::Float::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Float::K_SUPER
# Did you mean?  Unparser::Emitter::Float::Super
#                Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::Float::K_THEN
# Did you mean?  Unparser::Emitter::Float::K_WHEN
#                Unparser::Emitter::K_WHEN
# uninitialized constant Unparser::Emitter::Float::K_TRUE
# Did you mean?  Unparser::Emitter::Float::K_THEN
# uninitialized constant Unparser::Emitter::Float::K_UNDEF
# Did you mean?  Unparser::Emitter::Float::Undef
#                Unparser::Emitter::Undef
#                Unparser::Emitter::Float::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Float::K_UNLESS
# Did you mean?  Unparser::Emitter::Float::K_UNTIL
# uninitialized constant Unparser::Emitter::Float::K_UNTIL
# Did you mean?  Unparser::Emitter::Float::K_NIL
#                Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::Float::K_WHEN
# Did you mean?  Unparser::Emitter::When
#                Unparser::Emitter::Float::When
#                Unparser::Emitter::K_THEN
#                Unparser::Emitter::Float::K_THEN
# uninitialized constant Unparser::Emitter::Float::K_WHILE
# Did you mean?  Unparser::Emitter::Float::K_FILE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Float::K_YIELD
# Did you mean?  Unparser::Emitter::Float::Yield
#                Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::Float::NO_INDENT
# uninitialized constant Unparser::Emitter::Float::REGISTRY
# uninitialized constant Unparser::Emitter::Float::UNARY_OPERATORS
# Did you mean?  Unparser::Emitter::Float::BINARY_OPERATORS
#                Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::Emitter::Hookexe::BINARY_OPERATORS
# Did you mean?  Unparser::Emitter::Hookexe::UNARY_OPERATORS
#                Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::Hookexe::KEYWORDS
# uninitialized constant Unparser::Emitter::Hookexe::K_ALIAS
# Did you mean?  Unparser::Emitter::Hookexe::Alias
#                Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::Hookexe::K_AND
# Did you mean?  Unparser::Emitter::Hookexe::K_END
#                Unparser::Emitter::K_END
#                Unparser::Emitter::Hookexe::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::Hookexe::K_BEGIN
# Did you mean?  Unparser::Emitter::Hookexe::Begin
#                Unparser::Emitter::Begin
#                Unparser::Emitter::Hookexe::KWBegin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::Hookexe::K_BREAK
# uninitialized constant Unparser::Emitter::Hookexe::K_CASE
# Did you mean?  Unparser::Emitter::Hookexe::Case
#                Unparser::Emitter::Case
#                Unparser::Emitter::Hookexe::K_FALSE
#                Unparser::Emitter::Hookexe::K_CLASS
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
# uninitialized constant Unparser::Emitter::Hookexe::K_CLASS
# Did you mean?  Unparser::Emitter::Hookexe::Class
#                Unparser::Emitter::Class
#                Class
#                Unparser::Emitter::Hookexe::SClass
#                Unparser::Emitter::SClass
#                Unparser::Emitter::Hookexe::K_CASE
#                Unparser::Emitter::K_CASE
# uninitialized constant Unparser::Emitter::Hookexe::K_DEF
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::Hookexe::K_DO
#                Unparser::Emitter::Hookexe::K_SELF
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::Hookexe::K_UNDEF
#                Unparser::Emitter::K_UNDEF
# uninitialized constant Unparser::Emitter::Hookexe::K_DEFINE
# Did you mean?  Unparser::Emitter::K_DEFINED
#                Unparser::Emitter::Hookexe::K_DEFINED
# uninitialized constant Unparser::Emitter::Hookexe::K_DEFINED
# Did you mean?  Unparser::Emitter::Defined
#                Unparser::Emitter::Hookexe::Defined
#                Unparser::Emitter::K_DEFINE
# uninitialized constant Unparser::Emitter::Hookexe::K_DO
# Did you mean?  Unparser::Emitter::Hookexe::K_OR
# uninitialized constant Unparser::Emitter::Hookexe::K_EEND
# Did you mean?  Unparser::Emitter::Hookexe::K_AND
#                Unparser::Emitter::K_END
#                Unparser::Emitter::K_AND
#                Unparser::Emitter::Hookexe::K_END
# uninitialized constant Unparser::Emitter::Hookexe::K_ELSE
# Did you mean?  Unparser::Emitter::K_FALSE
#                Unparser::Emitter::Hookexe::K_ELSIF
#                Unparser::Emitter::Hookexe::K_FALSE
#                Unparser::Emitter::K_ELSIF
# uninitialized constant Unparser::Emitter::Hookexe::K_ELSIF
# Did you mean?  Unparser::Emitter::Hookexe::K_ELSE
#                Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::Hookexe::K_ENCODING
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::Hookexe::K_END
# Did you mean?  Unparser::Emitter::Hookexe::K_AND
#                Unparser::Emitter::K_AND
#                Unparser::Emitter::Hookexe::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::Hookexe::K_ENSURE
# Did you mean?  Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::Hookexe::K_FALSE
# Did you mean?  Unparser::Emitter::K_ELSE
#                Unparser::Emitter::Hookexe::K_FILE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::Hookexe::K_ELSE
#                Unparser::Emitter::Hookexe::K_CASE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Hookexe::K_FILE
# Did you mean?  File
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::Hookexe::K_NIL
#                Unparser::Emitter::Hookexe::K_FALSE
#                Unparser::Emitter::K_WHILE
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::Hookexe::K_WHILE
# uninitialized constant Unparser::Emitter::Hookexe::K_FOR
# Did you mean?  Unparser::Emitter::Hookexe::K_OR
#                Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::Hookexe::K_IF
# Did you mean?  Unparser::Emitter::Hookexe::K_IN
#                Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::Hookexe::K_IN
# Did you mean?  Unparser::Emitter::Hookexe::K_IF
#                Unparser::Emitter::K_IF
# uninitialized constant Unparser::Emitter::Hookexe::K_MODULE
# Did you mean?  Unparser::Emitter::Hookexe::Module
#                Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::Hookexe::K_NEXT
# Did you mean?  Unparser::Emitter::Hookexe::K_NOT
#                Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::Hookexe::K_NIL
# Did you mean?  Unparser::Emitter::Hookexe::K_IN
#                Unparser::Emitter::K_IN
#                Unparser::Emitter::Hookexe::K_FILE
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::Hookexe::K_UNTIL
#                Unparser::Emitter::K_UNTIL
# uninitialized constant Unparser::Emitter::Hookexe::K_NOT
# Did you mean?  Unparser::Emitter::Hookexe::K_NEXT
#                Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::Hookexe::K_OR
# Did you mean?  Unparser::Emitter::Hookexe::K_FOR
#                Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::Hookexe::K_POSTEXE
# uninitialized constant Unparser::Emitter::Hookexe::K_PREEXE
# uninitialized constant Unparser::Emitter::Hookexe::K_REDO
# Did you mean?  Unparser::Emitter::Hookexe::K_DO
#                Unparser::Emitter::K_DO
# uninitialized constant Unparser::Emitter::Hookexe::K_RESCUE
# Did you mean?  Unparser::Emitter::Rescue
#                Unparser::Emitter::Hookexe::Rescue
# uninitialized constant Unparser::Emitter::Hookexe::K_RETRY
# Did you mean?  Unparser::Emitter::Hookexe::K_RETURN
#                Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::Hookexe::K_RETURN
# Did you mean?  Unparser::Emitter::Hookexe::K_RETRY
#                Unparser::Emitter::K_RETRY
# uninitialized constant Unparser::Emitter::Hookexe::K_SELF
# Did you mean?  Unparser::Emitter::Hookexe::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Hookexe::K_SUPER
# Did you mean?  Unparser::Emitter::Hookexe::Super
#                Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::Hookexe::K_THEN
# Did you mean?  Unparser::Emitter::Hookexe::K_WHEN
#                Unparser::Emitter::K_WHEN
# uninitialized constant Unparser::Emitter::Hookexe::K_TRUE
# Did you mean?  Unparser::Emitter::Hookexe::K_THEN
# uninitialized constant Unparser::Emitter::Hookexe::K_UNDEF
# Did you mean?  Unparser::Emitter::Hookexe::Undef
#                Unparser::Emitter::Undef
#                Unparser::Emitter::Hookexe::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Hookexe::K_UNLESS
# Did you mean?  Unparser::Emitter::Hookexe::K_UNTIL
# uninitialized constant Unparser::Emitter::Hookexe::K_UNTIL
# Did you mean?  Unparser::Emitter::Hookexe::K_NIL
#                Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::Hookexe::K_WHEN
# Did you mean?  Unparser::Emitter::When
#                Unparser::Emitter::Hookexe::When
#                Unparser::Emitter::K_THEN
#                Unparser::Emitter::Hookexe::K_THEN
# uninitialized constant Unparser::Emitter::Hookexe::K_WHILE
# Did you mean?  Unparser::Emitter::Hookexe::K_FILE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Hookexe::K_YIELD
# Did you mean?  Unparser::Emitter::Hookexe::Yield
#                Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::Hookexe::NO_INDENT
# uninitialized constant Unparser::Emitter::Hookexe::REGISTRY
# uninitialized constant Unparser::Emitter::Hookexe::UNARY_OPERATORS
# Did you mean?  Unparser::Emitter::Hookexe::BINARY_OPERATORS
#                Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::Emitter::MatchPattern::BINARY_OPERATORS
# Did you mean?  Unparser::Emitter::MatchPattern::UNARY_OPERATORS
#                Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::MatchPattern::KEYWORDS
# uninitialized constant Unparser::Emitter::MatchPattern::K_ALIAS
# Did you mean?  Unparser::Emitter::MatchPattern::Alias
#                Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::MatchPattern::K_AND
# Did you mean?  Unparser::Emitter::MatchPattern::K_END
#                Unparser::Emitter::K_END
#                Unparser::Emitter::MatchPattern::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::MatchPattern::K_BEGIN
# Did you mean?  Unparser::Emitter::MatchPattern::Begin
#                Unparser::Emitter::Begin
#                Unparser::Emitter::MatchPattern::KWBegin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::MatchPattern::K_BREAK
# uninitialized constant Unparser::Emitter::MatchPattern::K_CASE
# Did you mean?  Unparser::Emitter::MatchPattern::Case
#                Unparser::Emitter::Case
#                Unparser::Emitter::MatchPattern::K_FALSE
#                Unparser::Emitter::MatchPattern::K_CLASS
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
# uninitialized constant Unparser::Emitter::MatchPattern::K_CLASS
# Did you mean?  Unparser::Emitter::MatchPattern::Class
#                Unparser::Emitter::Class
#                Class
#                Unparser::Emitter::MatchPattern::SClass
#                Unparser::Emitter::SClass
#                Unparser::Emitter::MatchPattern::K_CASE
#                Unparser::Emitter::K_CASE
# uninitialized constant Unparser::Emitter::MatchPattern::K_DEF
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::MatchPattern::K_DO
#                Unparser::Emitter::MatchPattern::K_SELF
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::MatchPattern::K_UNDEF
#                Unparser::Emitter::K_UNDEF
# uninitialized constant Unparser::Emitter::MatchPattern::K_DEFINE
# Did you mean?  Unparser::Emitter::K_DEFINED
#                Unparser::Emitter::MatchPattern::K_DEFINED
# uninitialized constant Unparser::Emitter::MatchPattern::K_DEFINED
# Did you mean?  Unparser::Emitter::Defined
#                Unparser::Emitter::MatchPattern::Defined
#                Unparser::Emitter::K_DEFINE
# uninitialized constant Unparser::Emitter::MatchPattern::K_DO
# Did you mean?  Unparser::Emitter::MatchPattern::K_OR
# uninitialized constant Unparser::Emitter::MatchPattern::K_EEND
# Did you mean?  Unparser::Emitter::MatchPattern::K_AND
#                Unparser::Emitter::K_END
#                Unparser::Emitter::K_AND
#                Unparser::Emitter::MatchPattern::K_END
# uninitialized constant Unparser::Emitter::MatchPattern::K_ELSE
# Did you mean?  Unparser::Emitter::K_FALSE
#                Unparser::Emitter::MatchPattern::K_ELSIF
#                Unparser::Emitter::MatchPattern::K_FALSE
#                Unparser::Emitter::K_ELSIF
# uninitialized constant Unparser::Emitter::MatchPattern::K_ELSIF
# Did you mean?  Unparser::Emitter::MatchPattern::K_ELSE
#                Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::MatchPattern::K_ENCODING
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::MatchPattern::K_END
# Did you mean?  Unparser::Emitter::MatchPattern::K_AND
#                Unparser::Emitter::K_AND
#                Unparser::Emitter::MatchPattern::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::MatchPattern::K_ENSURE
# Did you mean?  Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::MatchPattern::K_FALSE
# Did you mean?  Unparser::Emitter::K_ELSE
#                Unparser::Emitter::MatchPattern::K_FILE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::MatchPattern::K_ELSE
#                Unparser::Emitter::MatchPattern::K_CASE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::MatchPattern::K_FILE
# Did you mean?  File
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::MatchPattern::K_NIL
#                Unparser::Emitter::MatchPattern::K_FALSE
#                Unparser::Emitter::K_WHILE
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::MatchPattern::K_WHILE
# uninitialized constant Unparser::Emitter::MatchPattern::K_FOR
# Did you mean?  Unparser::Emitter::MatchPattern::K_OR
#                Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::MatchPattern::K_IF
# Did you mean?  Unparser::Emitter::MatchPattern::K_IN
#                Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::MatchPattern::K_IN
# Did you mean?  Unparser::Emitter::MatchPattern::K_IF
#                Unparser::Emitter::K_IF
# uninitialized constant Unparser::Emitter::MatchPattern::K_MODULE
# Did you mean?  Unparser::Emitter::MatchPattern::Module
#                Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::MatchPattern::K_NEXT
# Did you mean?  Unparser::Emitter::MatchPattern::K_NOT
#                Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::MatchPattern::K_NIL
# Did you mean?  Unparser::Emitter::MatchPattern::K_IN
#                Unparser::Emitter::K_IN
#                Unparser::Emitter::MatchPattern::K_FILE
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::MatchPattern::K_UNTIL
#                Unparser::Emitter::K_UNTIL
# uninitialized constant Unparser::Emitter::MatchPattern::K_NOT
# Did you mean?  Unparser::Emitter::MatchPattern::K_NEXT
#                Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::MatchPattern::K_OR
# Did you mean?  Unparser::Emitter::MatchPattern::K_FOR
#                Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::MatchPattern::K_POSTEXE
# uninitialized constant Unparser::Emitter::MatchPattern::K_PREEXE
# uninitialized constant Unparser::Emitter::MatchPattern::K_REDO
# Did you mean?  Unparser::Emitter::MatchPattern::K_DO
#                Unparser::Emitter::K_DO
# uninitialized constant Unparser::Emitter::MatchPattern::K_RESCUE
# Did you mean?  Unparser::Emitter::Rescue
#                Unparser::Emitter::MatchPattern::Rescue
# uninitialized constant Unparser::Emitter::MatchPattern::K_RETRY
# Did you mean?  Unparser::Emitter::MatchPattern::K_RETURN
#                Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::MatchPattern::K_RETURN
# Did you mean?  Unparser::Emitter::MatchPattern::K_RETRY
#                Unparser::Emitter::K_RETRY
# uninitialized constant Unparser::Emitter::MatchPattern::K_SELF
# Did you mean?  Unparser::Emitter::MatchPattern::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::MatchPattern::K_SUPER
# Did you mean?  Unparser::Emitter::MatchPattern::Super
#                Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::MatchPattern::K_THEN
# Did you mean?  Unparser::Emitter::MatchPattern::K_WHEN
#                Unparser::Emitter::K_WHEN
# uninitialized constant Unparser::Emitter::MatchPattern::K_TRUE
# Did you mean?  Unparser::Emitter::MatchPattern::K_THEN
# uninitialized constant Unparser::Emitter::MatchPattern::K_UNDEF
# Did you mean?  Unparser::Emitter::MatchPattern::Undef
#                Unparser::Emitter::Undef
#                Unparser::Emitter::MatchPattern::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::MatchPattern::K_UNLESS
# Did you mean?  Unparser::Emitter::MatchPattern::K_UNTIL
# uninitialized constant Unparser::Emitter::MatchPattern::K_UNTIL
# Did you mean?  Unparser::Emitter::MatchPattern::K_NIL
#                Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::MatchPattern::K_WHEN
# Did you mean?  Unparser::Emitter::When
#                Unparser::Emitter::MatchPattern::When
#                Unparser::Emitter::K_THEN
#                Unparser::Emitter::MatchPattern::K_THEN
# uninitialized constant Unparser::Emitter::MatchPattern::K_WHILE
# Did you mean?  Unparser::Emitter::MatchPattern::K_FILE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::MatchPattern::K_YIELD
# Did you mean?  Unparser::Emitter::MatchPattern::Yield
#                Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::MatchPattern::NO_INDENT
# uninitialized constant Unparser::Emitter::MatchPattern::REGISTRY
# uninitialized constant Unparser::Emitter::MatchPattern::UNARY_OPERATORS
# Did you mean?  Unparser::Emitter::MatchPattern::BINARY_OPERATORS
#                Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::Emitter::Morearg::BINARY_OPERATORS
# Did you mean?  Unparser::Emitter::Morearg::UNARY_OPERATORS
#                Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::Morearg::KEYWORDS
# uninitialized constant Unparser::Emitter::Morearg::K_ALIAS
# Did you mean?  Unparser::Emitter::Morearg::Alias
#                Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::Morearg::K_AND
# Did you mean?  Unparser::Emitter::Morearg::K_END
#                Unparser::Emitter::K_END
#                Unparser::Emitter::Morearg::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::Morearg::K_BEGIN
# Did you mean?  Unparser::Emitter::Morearg::Begin
#                Unparser::Emitter::Begin
#                Unparser::Emitter::Morearg::KWBegin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::Morearg::K_BREAK
# uninitialized constant Unparser::Emitter::Morearg::K_CASE
# Did you mean?  Unparser::Emitter::Morearg::Case
#                Unparser::Emitter::Case
#                Unparser::Emitter::Morearg::K_FALSE
#                Unparser::Emitter::Morearg::K_CLASS
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
# uninitialized constant Unparser::Emitter::Morearg::K_CLASS
# Did you mean?  Unparser::Emitter::Morearg::Class
#                Unparser::Emitter::Class
#                Class
#                Unparser::Emitter::Morearg::SClass
#                Unparser::Emitter::SClass
#                Unparser::Emitter::Morearg::K_CASE
#                Unparser::Emitter::K_CASE
# uninitialized constant Unparser::Emitter::Morearg::K_DEF
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::Morearg::K_DO
#                Unparser::Emitter::Morearg::K_SELF
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::Morearg::K_UNDEF
#                Unparser::Emitter::K_UNDEF
# uninitialized constant Unparser::Emitter::Morearg::K_DEFINE
# Did you mean?  Unparser::Emitter::K_DEFINED
#                Unparser::Emitter::Morearg::K_DEFINED
# uninitialized constant Unparser::Emitter::Morearg::K_DEFINED
# Did you mean?  Unparser::Emitter::Defined
#                Unparser::Emitter::Morearg::Defined
#                Unparser::Emitter::K_DEFINE
# uninitialized constant Unparser::Emitter::Morearg::K_DO
# Did you mean?  Unparser::Emitter::Morearg::K_OR
# uninitialized constant Unparser::Emitter::Morearg::K_EEND
# Did you mean?  Unparser::Emitter::Morearg::K_AND
#                Unparser::Emitter::K_END
#                Unparser::Emitter::K_AND
#                Unparser::Emitter::Morearg::K_END
# uninitialized constant Unparser::Emitter::Morearg::K_ELSE
# Did you mean?  Unparser::Emitter::K_FALSE
#                Unparser::Emitter::Morearg::K_ELSIF
#                Unparser::Emitter::Morearg::K_FALSE
#                Unparser::Emitter::K_ELSIF
# uninitialized constant Unparser::Emitter::Morearg::K_ELSIF
# Did you mean?  Unparser::Emitter::Morearg::K_ELSE
#                Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::Morearg::K_ENCODING
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::Morearg::K_END
# Did you mean?  Unparser::Emitter::Morearg::K_AND
#                Unparser::Emitter::K_AND
#                Unparser::Emitter::Morearg::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::Morearg::K_ENSURE
# Did you mean?  Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::Morearg::K_FALSE
# Did you mean?  Unparser::Emitter::K_ELSE
#                Unparser::Emitter::Morearg::K_FILE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::Morearg::K_ELSE
#                Unparser::Emitter::Morearg::K_CASE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Morearg::K_FILE
# Did you mean?  File
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::Morearg::K_NIL
#                Unparser::Emitter::Morearg::K_FALSE
#                Unparser::Emitter::K_WHILE
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::Morearg::K_WHILE
# uninitialized constant Unparser::Emitter::Morearg::K_FOR
# Did you mean?  Unparser::Emitter::Morearg::K_OR
#                Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::Morearg::K_IF
# Did you mean?  Unparser::Emitter::Morearg::K_IN
#                Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::Morearg::K_IN
# Did you mean?  Unparser::Emitter::Morearg::K_IF
#                Unparser::Emitter::K_IF
# uninitialized constant Unparser::Emitter::Morearg::K_MODULE
# Did you mean?  Unparser::Emitter::Morearg::Module
#                Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::Morearg::K_NEXT
# Did you mean?  Unparser::Emitter::Morearg::K_NOT
#                Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::Morearg::K_NIL
# Did you mean?  Unparser::Emitter::Morearg::K_IN
#                Unparser::Emitter::K_IN
#                Unparser::Emitter::Morearg::K_FILE
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::Morearg::K_UNTIL
#                Unparser::Emitter::K_UNTIL
# uninitialized constant Unparser::Emitter::Morearg::K_NOT
# Did you mean?  Unparser::Emitter::Morearg::K_NEXT
#                Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::Morearg::K_OR
# Did you mean?  Unparser::Emitter::Morearg::K_FOR
#                Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::Morearg::K_POSTEXE
# uninitialized constant Unparser::Emitter::Morearg::K_PREEXE
# uninitialized constant Unparser::Emitter::Morearg::K_REDO
# Did you mean?  Unparser::Emitter::Morearg::K_DO
#                Unparser::Emitter::K_DO
# uninitialized constant Unparser::Emitter::Morearg::K_RESCUE
# Did you mean?  Unparser::Emitter::Rescue
#                Unparser::Emitter::Morearg::Rescue
# uninitialized constant Unparser::Emitter::Morearg::K_RETRY
# Did you mean?  Unparser::Emitter::Morearg::K_RETURN
#                Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::Morearg::K_RETURN
# Did you mean?  Unparser::Emitter::Morearg::K_RETRY
#                Unparser::Emitter::K_RETRY
# uninitialized constant Unparser::Emitter::Morearg::K_SELF
# Did you mean?  Unparser::Emitter::Morearg::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Morearg::K_SUPER
# Did you mean?  Unparser::Emitter::Morearg::Super
#                Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::Morearg::K_THEN
# Did you mean?  Unparser::Emitter::Morearg::K_WHEN
#                Unparser::Emitter::K_WHEN
# uninitialized constant Unparser::Emitter::Morearg::K_TRUE
# Did you mean?  Unparser::Emitter::Morearg::K_THEN
# uninitialized constant Unparser::Emitter::Morearg::K_UNDEF
# Did you mean?  Unparser::Emitter::Morearg::Undef
#                Unparser::Emitter::Undef
#                Unparser::Emitter::Morearg::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Morearg::K_UNLESS
# Did you mean?  Unparser::Emitter::Morearg::K_UNTIL
# uninitialized constant Unparser::Emitter::Morearg::K_UNTIL
# Did you mean?  Unparser::Emitter::Morearg::K_NIL
#                Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::Morearg::K_WHEN
# Did you mean?  Unparser::Emitter::When
#                Unparser::Emitter::Morearg::When
#                Unparser::Emitter::K_THEN
#                Unparser::Emitter::Morearg::K_THEN
# uninitialized constant Unparser::Emitter::Morearg::K_WHILE
# Did you mean?  Unparser::Emitter::Morearg::K_FILE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Morearg::K_YIELD
# Did you mean?  Unparser::Emitter::Morearg::Yield
#                Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::Morearg::NO_INDENT
# uninitialized constant Unparser::Emitter::Morearg::REGISTRY
# uninitialized constant Unparser::Emitter::Morearg::UNARY_OPERATORS
# Did you mean?  Unparser::Emitter::Morearg::BINARY_OPERATORS
#                Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::Emitter::NthRef::BINARY_OPERATORS
# Did you mean?  Unparser::Emitter::NthRef::UNARY_OPERATORS
#                Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::NthRef::KEYWORDS
# uninitialized constant Unparser::Emitter::NthRef::K_ALIAS
# Did you mean?  Unparser::Emitter::NthRef::Alias
#                Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::NthRef::K_AND
# Did you mean?  Unparser::Emitter::NthRef::K_END
#                Unparser::Emitter::K_END
#                Unparser::Emitter::NthRef::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::NthRef::K_BEGIN
# Did you mean?  Unparser::Emitter::NthRef::Begin
#                Unparser::Emitter::Begin
#                Unparser::Emitter::NthRef::KWBegin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::NthRef::K_BREAK
# uninitialized constant Unparser::Emitter::NthRef::K_CASE
# Did you mean?  Unparser::Emitter::NthRef::Case
#                Unparser::Emitter::Case
#                Unparser::Emitter::NthRef::K_FALSE
#                Unparser::Emitter::NthRef::K_CLASS
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
# uninitialized constant Unparser::Emitter::NthRef::K_CLASS
# Did you mean?  Unparser::Emitter::NthRef::Class
#                Unparser::Emitter::Class
#                Class
#                Unparser::Emitter::NthRef::SClass
#                Unparser::Emitter::SClass
#                Unparser::Emitter::NthRef::K_CASE
#                Unparser::Emitter::K_CASE
# uninitialized constant Unparser::Emitter::NthRef::K_DEF
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::NthRef::K_DO
#                Unparser::Emitter::NthRef::K_SELF
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::NthRef::K_UNDEF
#                Unparser::Emitter::K_UNDEF
# uninitialized constant Unparser::Emitter::NthRef::K_DEFINE
# Did you mean?  Unparser::Emitter::K_DEFINED
#                Unparser::Emitter::NthRef::K_DEFINED
# uninitialized constant Unparser::Emitter::NthRef::K_DEFINED
# Did you mean?  Unparser::Emitter::Defined
#                Unparser::Emitter::NthRef::Defined
#                Unparser::Emitter::K_DEFINE
# uninitialized constant Unparser::Emitter::NthRef::K_DO
# Did you mean?  Unparser::Emitter::NthRef::K_OR
# uninitialized constant Unparser::Emitter::NthRef::K_EEND
# Did you mean?  Unparser::Emitter::NthRef::K_AND
#                Unparser::Emitter::K_END
#                Unparser::Emitter::K_AND
#                Unparser::Emitter::NthRef::K_END
# uninitialized constant Unparser::Emitter::NthRef::K_ELSE
# Did you mean?  Unparser::Emitter::K_FALSE
#                Unparser::Emitter::NthRef::K_ELSIF
#                Unparser::Emitter::NthRef::K_FALSE
#                Unparser::Emitter::K_ELSIF
# uninitialized constant Unparser::Emitter::NthRef::K_ELSIF
# Did you mean?  Unparser::Emitter::NthRef::K_ELSE
#                Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::NthRef::K_ENCODING
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::NthRef::K_END
# Did you mean?  Unparser::Emitter::NthRef::K_AND
#                Unparser::Emitter::K_AND
#                Unparser::Emitter::NthRef::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::NthRef::K_ENSURE
# Did you mean?  Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::NthRef::K_FALSE
# Did you mean?  Unparser::Emitter::K_ELSE
#                Unparser::Emitter::NthRef::K_FILE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::NthRef::K_ELSE
#                Unparser::Emitter::NthRef::K_CASE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::NthRef::K_FILE
# Did you mean?  File
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::NthRef::K_NIL
#                Unparser::Emitter::NthRef::K_FALSE
#                Unparser::Emitter::K_WHILE
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::NthRef::K_WHILE
# uninitialized constant Unparser::Emitter::NthRef::K_FOR
# Did you mean?  Unparser::Emitter::NthRef::K_OR
#                Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::NthRef::K_IF
# Did you mean?  Unparser::Emitter::NthRef::K_IN
#                Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::NthRef::K_IN
# Did you mean?  Unparser::Emitter::NthRef::K_IF
#                Unparser::Emitter::K_IF
# uninitialized constant Unparser::Emitter::NthRef::K_MODULE
# Did you mean?  Unparser::Emitter::NthRef::Module
#                Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::NthRef::K_NEXT
# Did you mean?  Unparser::Emitter::NthRef::K_NOT
#                Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::NthRef::K_NIL
# Did you mean?  Unparser::Emitter::NthRef::K_IN
#                Unparser::Emitter::K_IN
#                Unparser::Emitter::NthRef::K_FILE
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::NthRef::K_UNTIL
#                Unparser::Emitter::K_UNTIL
# uninitialized constant Unparser::Emitter::NthRef::K_NOT
# Did you mean?  Unparser::Emitter::NthRef::K_NEXT
#                Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::NthRef::K_OR
# Did you mean?  Unparser::Emitter::NthRef::K_FOR
#                Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::NthRef::K_POSTEXE
# uninitialized constant Unparser::Emitter::NthRef::K_PREEXE
# uninitialized constant Unparser::Emitter::NthRef::K_REDO
# Did you mean?  Unparser::Emitter::NthRef::K_DO
#                Unparser::Emitter::K_DO
# uninitialized constant Unparser::Emitter::NthRef::K_RESCUE
# Did you mean?  Unparser::Emitter::Rescue
#                Unparser::Emitter::NthRef::Rescue
# uninitialized constant Unparser::Emitter::NthRef::K_RETRY
# Did you mean?  Unparser::Emitter::NthRef::K_RETURN
#                Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::NthRef::K_RETURN
# Did you mean?  Unparser::Emitter::NthRef::K_RETRY
#                Unparser::Emitter::K_RETRY
# uninitialized constant Unparser::Emitter::NthRef::K_SELF
# Did you mean?  Unparser::Emitter::NthRef::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::NthRef::K_SUPER
# Did you mean?  Unparser::Emitter::NthRef::Super
#                Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::NthRef::K_THEN
# Did you mean?  Unparser::Emitter::NthRef::K_WHEN
#                Unparser::Emitter::K_WHEN
# uninitialized constant Unparser::Emitter::NthRef::K_TRUE
# Did you mean?  Unparser::Emitter::NthRef::K_THEN
# uninitialized constant Unparser::Emitter::NthRef::K_UNDEF
# Did you mean?  Unparser::Emitter::NthRef::Undef
#                Unparser::Emitter::Undef
#                Unparser::Emitter::NthRef::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::NthRef::K_UNLESS
# Did you mean?  Unparser::Emitter::NthRef::K_UNTIL
# uninitialized constant Unparser::Emitter::NthRef::K_UNTIL
# Did you mean?  Unparser::Emitter::NthRef::K_NIL
#                Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::NthRef::K_WHEN
# Did you mean?  Unparser::Emitter::When
#                Unparser::Emitter::NthRef::When
#                Unparser::Emitter::K_THEN
#                Unparser::Emitter::NthRef::K_THEN
# uninitialized constant Unparser::Emitter::NthRef::K_WHILE
# Did you mean?  Unparser::Emitter::NthRef::K_FILE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::NthRef::K_YIELD
# Did you mean?  Unparser::Emitter::NthRef::Yield
#                Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::NthRef::NO_INDENT
# uninitialized constant Unparser::Emitter::NthRef::REGISTRY
# uninitialized constant Unparser::Emitter::NthRef::UNARY_OPERATORS
# Did you mean?  Unparser::Emitter::NthRef::BINARY_OPERATORS
#                Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::Emitter::Post::BINARY_OPERATORS
# Did you mean?  Unparser::Emitter::Post::UNARY_OPERATORS
#                Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::Post::KEYWORDS
# uninitialized constant Unparser::Emitter::Post::K_ALIAS
# Did you mean?  Unparser::Emitter::Post::Alias
#                Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::Post::K_AND
# Did you mean?  Unparser::Emitter::Post::K_END
#                Unparser::Emitter::K_END
#                Unparser::Emitter::Post::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::Post::K_BEGIN
# Did you mean?  Unparser::Emitter::Post::Begin
#                Unparser::Emitter::Begin
#                Unparser::Emitter::Post::KWBegin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::Post::K_BREAK
# uninitialized constant Unparser::Emitter::Post::K_CASE
# Did you mean?  Unparser::Emitter::Post::Case
#                Unparser::Emitter::Case
#                Unparser::Emitter::Post::K_FALSE
#                Unparser::Emitter::Post::K_CLASS
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
# uninitialized constant Unparser::Emitter::Post::K_CLASS
# Did you mean?  Unparser::Emitter::Post::Class
#                Unparser::Emitter::Class
#                Class
#                Unparser::Emitter::Post::SClass
#                Unparser::Emitter::SClass
#                Unparser::Emitter::Post::K_CASE
#                Unparser::Emitter::K_CASE
# uninitialized constant Unparser::Emitter::Post::K_DEF
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::Post::K_DO
#                Unparser::Emitter::Post::K_SELF
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::Post::K_UNDEF
#                Unparser::Emitter::K_UNDEF
# uninitialized constant Unparser::Emitter::Post::K_DEFINE
# Did you mean?  Unparser::Emitter::K_DEFINED
#                Unparser::Emitter::Post::K_DEFINED
# uninitialized constant Unparser::Emitter::Post::K_DEFINED
# Did you mean?  Unparser::Emitter::Defined
#                Unparser::Emitter::Post::Defined
#                Unparser::Emitter::K_DEFINE
# uninitialized constant Unparser::Emitter::Post::K_DO
# Did you mean?  Unparser::Emitter::Post::K_OR
# uninitialized constant Unparser::Emitter::Post::K_EEND
# Did you mean?  Unparser::Emitter::Post::K_AND
#                Unparser::Emitter::K_END
#                Unparser::Emitter::K_AND
#                Unparser::Emitter::Post::K_END
# uninitialized constant Unparser::Emitter::Post::K_ELSE
# Did you mean?  Unparser::Emitter::K_FALSE
#                Unparser::Emitter::Post::K_ELSIF
#                Unparser::Emitter::Post::K_FALSE
#                Unparser::Emitter::K_ELSIF
# uninitialized constant Unparser::Emitter::Post::K_ELSIF
# Did you mean?  Unparser::Emitter::Post::K_ELSE
#                Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::Post::K_ENCODING
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::Post::K_END
# Did you mean?  Unparser::Emitter::Post::K_AND
#                Unparser::Emitter::K_AND
#                Unparser::Emitter::Post::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::Post::K_ENSURE
# Did you mean?  Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::Post::K_FALSE
# Did you mean?  Unparser::Emitter::K_ELSE
#                Unparser::Emitter::Post::K_FILE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::Post::K_ELSE
#                Unparser::Emitter::Post::K_CASE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Post::K_FILE
# Did you mean?  File
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::Post::K_NIL
#                Unparser::Emitter::Post::K_FALSE
#                Unparser::Emitter::K_WHILE
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::Post::K_WHILE
# uninitialized constant Unparser::Emitter::Post::K_FOR
# Did you mean?  Unparser::Emitter::Post::K_OR
#                Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::Post::K_IF
# Did you mean?  Unparser::Emitter::Post::K_IN
#                Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::Post::K_IN
# Did you mean?  Unparser::Emitter::Post::K_IF
#                Unparser::Emitter::K_IF
# uninitialized constant Unparser::Emitter::Post::K_MODULE
# Did you mean?  Unparser::Emitter::Post::Module
#                Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::Post::K_NEXT
# Did you mean?  Unparser::Emitter::Post::K_NOT
#                Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::Post::K_NIL
# Did you mean?  Unparser::Emitter::Post::K_IN
#                Unparser::Emitter::K_IN
#                Unparser::Emitter::Post::K_FILE
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::Post::K_UNTIL
#                Unparser::Emitter::K_UNTIL
# uninitialized constant Unparser::Emitter::Post::K_NOT
# Did you mean?  Unparser::Emitter::Post::K_NEXT
#                Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::Post::K_OR
# Did you mean?  Unparser::Emitter::Post::K_FOR
#                Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::Post::K_POSTEXE
# uninitialized constant Unparser::Emitter::Post::K_PREEXE
# uninitialized constant Unparser::Emitter::Post::K_REDO
# Did you mean?  Unparser::Emitter::Post::K_DO
#                Unparser::Emitter::K_DO
# uninitialized constant Unparser::Emitter::Post::K_RESCUE
# Did you mean?  Unparser::Emitter::Rescue
#                Unparser::Emitter::Post::Rescue
# uninitialized constant Unparser::Emitter::Post::K_RETRY
# Did you mean?  Unparser::Emitter::Post::K_RETURN
#                Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::Post::K_RETURN
# Did you mean?  Unparser::Emitter::Post::K_RETRY
#                Unparser::Emitter::K_RETRY
# uninitialized constant Unparser::Emitter::Post::K_SELF
# Did you mean?  Unparser::Emitter::Post::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Post::K_SUPER
# Did you mean?  Unparser::Emitter::Post::Super
#                Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::Post::K_THEN
# Did you mean?  Unparser::Emitter::Post::K_WHEN
#                Unparser::Emitter::K_WHEN
# uninitialized constant Unparser::Emitter::Post::K_TRUE
# Did you mean?  Unparser::Emitter::Post::K_THEN
# uninitialized constant Unparser::Emitter::Post::K_UNDEF
# Did you mean?  Unparser::Emitter::Post::Undef
#                Unparser::Emitter::Undef
#                Unparser::Emitter::Post::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Post::K_UNLESS
# Did you mean?  Unparser::Emitter::Post::K_UNTIL
# uninitialized constant Unparser::Emitter::Post::K_UNTIL
# Did you mean?  Unparser::Emitter::Post::K_NIL
#                Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::Post::K_WHEN
# Did you mean?  Unparser::Emitter::When
#                Unparser::Emitter::Post::When
#                Unparser::Emitter::K_THEN
#                Unparser::Emitter::Post::K_THEN
# uninitialized constant Unparser::Emitter::Post::K_WHILE
# Did you mean?  Unparser::Emitter::Post::K_FILE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Post::K_YIELD
# Did you mean?  Unparser::Emitter::Post::Yield
#                Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::Post::NO_INDENT
# uninitialized constant Unparser::Emitter::Post::REGISTRY
# uninitialized constant Unparser::Emitter::Post::UNARY_OPERATORS
# Did you mean?  Unparser::Emitter::Post::BINARY_OPERATORS
#                Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::Emitter::Primitive::Complex::BINARY_OPERATORS
# Did you mean?  Unparser::Emitter::Primitive::Complex::UNARY_OPERATORS
#                Unparser::Emitter::Primitive::UNARY_OPERATORS
#                Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::Primitive::Complex::KEYWORDS
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_ALIAS
# Did you mean?  Unparser::Emitter::Primitive::Complex::Alias
#                Unparser::Emitter::Primitive::Alias
#                Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_AND
# Did you mean?  Unparser::Emitter::Primitive::Complex::K_END
#                Unparser::Emitter::Primitive::K_END
#                Unparser::Emitter::K_END
#                Unparser::Emitter::Primitive::Complex::K_EEND
#                Unparser::Emitter::Primitive::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_BEGIN
# Did you mean?  Unparser::Emitter::Primitive::Complex::Begin
#                Unparser::Emitter::Primitive::Begin
#                Unparser::Emitter::Begin
#                Unparser::Emitter::Primitive::Complex::KWBegin
#                Unparser::Emitter::Primitive::KWBegin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_BREAK
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_CASE
# Did you mean?  Unparser::Emitter::Case
#                Unparser::Emitter::Primitive::Complex::Case
#                Unparser::Emitter::Primitive::Case
#                Unparser::Emitter::Primitive::Complex::K_CLASS
#                Unparser::Emitter::Primitive::K_FALSE
#                Unparser::Emitter::Primitive::K_CLASS
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
#                Unparser::Emitter::Primitive::Complex::K_FALSE
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_CLASS
# Did you mean?  Unparser::Emitter::Primitive::Complex::Class
#                Class
#                Unparser::Emitter::Class
#                Unparser::Emitter::Primitive::Class
#                Unparser::Emitter::SClass
#                Unparser::Emitter::Primitive::SClass
#                Unparser::Emitter::Primitive::Complex::SClass
#                Unparser::Emitter::Primitive::Complex::K_CASE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::Primitive::K_CASE
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_DEF
# Did you mean?  Unparser::Emitter::Primitive::Complex::K_DO
#                Unparser::Emitter::K_DO
#                Unparser::Emitter::Primitive::K_DO
#                Unparser::Emitter::Primitive::Complex::K_SELF
#                Unparser::Emitter::Primitive::K_SELF
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::Primitive::K_UNDEF
#                Unparser::Emitter::K_UNDEF
#                Unparser::Emitter::Primitive::Complex::K_UNDEF
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_DEFINE
# Did you mean?  Unparser::Emitter::Primitive::K_DEFINED
#                Unparser::Emitter::Primitive::Complex::K_DEFINED
#                Unparser::Emitter::K_DEFINED
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_DEFINED
# Did you mean?  Unparser::Emitter::Defined
#                Unparser::Emitter::Primitive::Defined
#                Unparser::Emitter::Primitive::Complex::Defined
#                Unparser::Emitter::K_DEFINE
#                Unparser::Emitter::Primitive::K_DEFINE
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_DO
# Did you mean?  Unparser::Emitter::Primitive::K_OR
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_EEND
# Did you mean?  Unparser::Emitter::Primitive::K_AND
#                Unparser::Emitter::K_AND
#                Unparser::Emitter::Primitive::Complex::K_AND
#                Unparser::Emitter::Primitive::Complex::K_END
#                Unparser::Emitter::Primitive::K_END
#                Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_ELSE
# Did you mean?  Unparser::Emitter::K_ELSIF
#                Unparser::Emitter::Primitive::K_ELSIF
#                Unparser::Emitter::Primitive::K_FALSE
#                Unparser::Emitter::Primitive::Complex::K_ELSIF
#                Unparser::Emitter::Primitive::Complex::K_FALSE
#                Unparser::Emitter::K_FALSE
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_ELSIF
# Did you mean?  Unparser::Emitter::Primitive::Complex::K_ELSE
#                Unparser::Emitter::Primitive::K_ELSE
#                Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_ENCODING
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_END
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::Primitive::Complex::K_AND
#                Unparser::Emitter::Primitive::K_AND
#                Unparser::Emitter::Primitive::Complex::K_EEND
#                Unparser::Emitter::Primitive::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_ENSURE
# Did you mean?  Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_FALSE
# Did you mean?  Unparser::Emitter::K_FILE
#                Unparser::Emitter::K_ELSE
#                Unparser::Emitter::Primitive::Complex::K_FILE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::Primitive::Complex::K_ELSE
#                Unparser::Emitter::Primitive::Complex::K_CASE
#                Unparser::Emitter::Primitive::K_FILE
#                Unparser::Emitter::Primitive::K_ELSE
#                Unparser::Emitter::Primitive::K_CASE
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_FILE
# Did you mean?  File
#                Unparser::Emitter::Primitive::K_NIL
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::Primitive::Complex::K_NIL
#                Unparser::Emitter::K_WHILE
#                Unparser::Emitter::Primitive::Complex::K_FALSE
#                Unparser::Emitter::Primitive::Complex::K_WHILE
#                Unparser::Emitter::Primitive::K_FALSE
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::Primitive::K_WHILE
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_FOR
# Did you mean?  Unparser::Emitter::Primitive::Complex::K_OR
#                Unparser::Emitter::Primitive::K_OR
#                Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_IF
# Did you mean?  Unparser::Emitter::Primitive::Complex::K_IN
#                Unparser::Emitter::Primitive::K_IN
#                Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_IN
# Did you mean?  Unparser::Emitter::K_IF
#                Unparser::Emitter::Primitive::Complex::K_IF
#                Unparser::Emitter::Primitive::K_IF
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_MODULE
# Did you mean?  Unparser::Emitter::Primitive::Complex::Module
#                Unparser::Emitter::Primitive::Module
#                Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_NEXT
# Did you mean?  Unparser::Emitter::Primitive::Complex::K_NOT
#                Unparser::Emitter::Primitive::K_NOT
#                Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_NIL
# Did you mean?  Unparser::Emitter::K_IN
#                Unparser::Emitter::Primitive::K_IN
#                Unparser::Emitter::Primitive::Complex::K_IN
#                Unparser::Emitter::Primitive::K_FILE
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::Primitive::Complex::K_FILE
#                Unparser::Emitter::K_UNTIL
#                Unparser::Emitter::Primitive::K_UNTIL
#                Unparser::Emitter::Primitive::Complex::K_UNTIL
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_NOT
# Did you mean?  Unparser::Emitter::Primitive::Complex::K_NEXT
#                Unparser::Emitter::Primitive::K_NEXT
#                Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_OR
# Did you mean?  Unparser::Emitter::Primitive::Complex::K_FOR
#                Unparser::Emitter::Primitive::K_FOR
#                Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_POSTEXE
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_PREEXE
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_REDO
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::Primitive::K_DO
#                Unparser::Emitter::Primitive::Complex::K_DO
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_RESCUE
# Did you mean?  Unparser::Emitter::Rescue
#                Unparser::Emitter::Primitive::Rescue
#                Unparser::Emitter::Primitive::Complex::Rescue
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_RETRY
# Did you mean?  Unparser::Emitter::Primitive::Complex::K_RETURN
#                Unparser::Emitter::Primitive::K_RETURN
#                Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_RETURN
# Did you mean?  Unparser::Emitter::Primitive::Complex::K_RETRY
#                Unparser::Emitter::K_RETRY
#                Unparser::Emitter::Primitive::K_RETRY
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_SELF
# Did you mean?  Unparser::Emitter::K_DEF
#                Unparser::Emitter::Primitive::K_DEF
#                Unparser::Emitter::Primitive::Complex::K_DEF
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_SUPER
# Did you mean?  Unparser::Emitter::Primitive::Complex::Super
#                Unparser::Emitter::Primitive::Super
#                Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_THEN
# Did you mean?  Unparser::Emitter::Primitive::K_WHEN
#                Unparser::Emitter::K_WHEN
#                Unparser::Emitter::Primitive::Complex::K_WHEN
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_TRUE
# Did you mean?  Unparser::Emitter::Primitive::Complex::K_THEN
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_UNDEF
# Did you mean?  Unparser::Emitter::Undef
#                Unparser::Emitter::Primitive::Undef
#                Unparser::Emitter::Primitive::Complex::Undef
#                Unparser::Emitter::Primitive::Complex::K_DEF
#                Unparser::Emitter::K_DEF
#                Unparser::Emitter::Primitive::K_DEF
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_UNLESS
# Did you mean?  Unparser::Emitter::Primitive::Complex::K_UNTIL
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_UNTIL
# Did you mean?  Unparser::Emitter::Primitive::Complex::K_NIL
#                Unparser::Emitter::Primitive::K_NIL
#                Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_WHEN
# Did you mean?  Unparser::Emitter::Primitive::Complex::When
#                Unparser::Emitter::When
#                Unparser::Emitter::Primitive::When
#                Unparser::Emitter::Primitive::K_THEN
#                Unparser::Emitter::K_THEN
#                Unparser::Emitter::Primitive::Complex::K_THEN
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_WHILE
# Did you mean?  Unparser::Emitter::Primitive::Complex::K_FILE
#                Unparser::Emitter::Primitive::K_FILE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_YIELD
# Did you mean?  Unparser::Emitter::Primitive::Complex::Yield
#                Unparser::Emitter::Primitive::Yield
#                Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::Primitive::Complex::NO_INDENT
# uninitialized constant Unparser::Emitter::Primitive::Complex::REGISTRY
# uninitialized constant Unparser::Emitter::Primitive::Complex::UNARY_OPERATORS
# Did you mean?  Unparser::Emitter::Primitive::Complex::BINARY_OPERATORS
#                Unparser::Emitter::Primitive::BINARY_OPERATORS
#                Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::Emitter::Primitive::Rational::BINARY_OPERATORS
# Did you mean?  Unparser::Emitter::Primitive::Rational::UNARY_OPERATORS
#                Unparser::Emitter::Primitive::UNARY_OPERATORS
#                Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::Primitive::Rational::KEYWORDS
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_ALIAS
# Did you mean?  Unparser::Emitter::Primitive::Rational::Alias
#                Unparser::Emitter::Primitive::Alias
#                Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_AND
# Did you mean?  Unparser::Emitter::Primitive::Rational::K_END
#                Unparser::Emitter::Primitive::K_END
#                Unparser::Emitter::K_END
#                Unparser::Emitter::Primitive::Rational::K_EEND
#                Unparser::Emitter::Primitive::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_BEGIN
# Did you mean?  Unparser::Emitter::Primitive::Rational::Begin
#                Unparser::Emitter::Primitive::Begin
#                Unparser::Emitter::Begin
#                Unparser::Emitter::Primitive::Rational::KWBegin
#                Unparser::Emitter::Primitive::KWBegin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_BREAK
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_CASE
# Did you mean?  Unparser::Emitter::Case
#                Unparser::Emitter::Primitive::Rational::Case
#                Unparser::Emitter::Primitive::Case
#                Unparser::Emitter::Primitive::Rational::K_CLASS
#                Unparser::Emitter::Primitive::K_FALSE
#                Unparser::Emitter::Primitive::K_CLASS
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
#                Unparser::Emitter::Primitive::Rational::K_FALSE
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_CLASS
# Did you mean?  Unparser::Emitter::Primitive::Rational::Class
#                Class
#                Unparser::Emitter::Class
#                Unparser::Emitter::Primitive::Class
#                Unparser::Emitter::SClass
#                Unparser::Emitter::Primitive::SClass
#                Unparser::Emitter::Primitive::Rational::SClass
#                Unparser::Emitter::Primitive::Rational::K_CASE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::Primitive::K_CASE
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_DEF
# Did you mean?  Unparser::Emitter::Primitive::Rational::K_DO
#                Unparser::Emitter::K_DO
#                Unparser::Emitter::Primitive::K_DO
#                Unparser::Emitter::Primitive::Rational::K_SELF
#                Unparser::Emitter::Primitive::K_SELF
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::Primitive::K_UNDEF
#                Unparser::Emitter::K_UNDEF
#                Unparser::Emitter::Primitive::Rational::K_UNDEF
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_DEFINE
# Did you mean?  Unparser::Emitter::Primitive::K_DEFINED
#                Unparser::Emitter::Primitive::Rational::K_DEFINED
#                Unparser::Emitter::K_DEFINED
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_DEFINED
# Did you mean?  Unparser::Emitter::Defined
#                Unparser::Emitter::Primitive::Defined
#                Unparser::Emitter::Primitive::Rational::Defined
#                Unparser::Emitter::K_DEFINE
#                Unparser::Emitter::Primitive::K_DEFINE
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_DO
# Did you mean?  Unparser::Emitter::Primitive::K_OR
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_EEND
# Did you mean?  Unparser::Emitter::Primitive::K_AND
#                Unparser::Emitter::K_AND
#                Unparser::Emitter::Primitive::Rational::K_AND
#                Unparser::Emitter::Primitive::Rational::K_END
#                Unparser::Emitter::Primitive::K_END
#                Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_ELSE
# Did you mean?  Unparser::Emitter::K_ELSIF
#                Unparser::Emitter::Primitive::K_ELSIF
#                Unparser::Emitter::Primitive::K_FALSE
#                Unparser::Emitter::Primitive::Rational::K_ELSIF
#                Unparser::Emitter::Primitive::Rational::K_FALSE
#                Unparser::Emitter::K_FALSE
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_ELSIF
# Did you mean?  Unparser::Emitter::Primitive::Rational::K_ELSE
#                Unparser::Emitter::Primitive::K_ELSE
#                Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_ENCODING
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_END
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::Primitive::Rational::K_AND
#                Unparser::Emitter::Primitive::K_AND
#                Unparser::Emitter::Primitive::Rational::K_EEND
#                Unparser::Emitter::Primitive::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_ENSURE
# Did you mean?  Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_FALSE
# Did you mean?  Unparser::Emitter::K_FILE
#                Unparser::Emitter::K_ELSE
#                Unparser::Emitter::Primitive::Rational::K_FILE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::Primitive::Rational::K_ELSE
#                Unparser::Emitter::Primitive::Rational::K_CASE
#                Unparser::Emitter::Primitive::K_FILE
#                Unparser::Emitter::Primitive::K_ELSE
#                Unparser::Emitter::Primitive::K_CASE
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_FILE
# Did you mean?  File
#                Unparser::Emitter::Primitive::K_NIL
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::Primitive::Rational::K_NIL
#                Unparser::Emitter::K_WHILE
#                Unparser::Emitter::Primitive::Rational::K_FALSE
#                Unparser::Emitter::Primitive::Rational::K_WHILE
#                Unparser::Emitter::Primitive::K_FALSE
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::Primitive::K_WHILE
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_FOR
# Did you mean?  Unparser::Emitter::Primitive::Rational::K_OR
#                Unparser::Emitter::Primitive::K_OR
#                Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_IF
# Did you mean?  Unparser::Emitter::Primitive::Rational::K_IN
#                Unparser::Emitter::Primitive::K_IN
#                Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_IN
# Did you mean?  Unparser::Emitter::K_IF
#                Unparser::Emitter::Primitive::Rational::K_IF
#                Unparser::Emitter::Primitive::K_IF
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_MODULE
# Did you mean?  Unparser::Emitter::Primitive::Rational::Module
#                Unparser::Emitter::Primitive::Module
#                Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_NEXT
# Did you mean?  Unparser::Emitter::Primitive::Rational::K_NOT
#                Unparser::Emitter::Primitive::K_NOT
#                Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_NIL
# Did you mean?  Unparser::Emitter::K_IN
#                Unparser::Emitter::Primitive::K_IN
#                Unparser::Emitter::Primitive::Rational::K_IN
#                Unparser::Emitter::Primitive::K_FILE
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::Primitive::Rational::K_FILE
#                Unparser::Emitter::K_UNTIL
#                Unparser::Emitter::Primitive::K_UNTIL
#                Unparser::Emitter::Primitive::Rational::K_UNTIL
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_NOT
# Did you mean?  Unparser::Emitter::Primitive::Rational::K_NEXT
#                Unparser::Emitter::Primitive::K_NEXT
#                Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_OR
# Did you mean?  Unparser::Emitter::Primitive::Rational::K_FOR
#                Unparser::Emitter::Primitive::K_FOR
#                Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_POSTEXE
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_PREEXE
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_REDO
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::Primitive::K_DO
#                Unparser::Emitter::Primitive::Rational::K_DO
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_RESCUE
# Did you mean?  Unparser::Emitter::Rescue
#                Unparser::Emitter::Primitive::Rescue
#                Unparser::Emitter::Primitive::Rational::Rescue
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_RETRY
# Did you mean?  Unparser::Emitter::Primitive::Rational::K_RETURN
#                Unparser::Emitter::Primitive::K_RETURN
#                Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_RETURN
# Did you mean?  Unparser::Emitter::Primitive::Rational::K_RETRY
#                Unparser::Emitter::K_RETRY
#                Unparser::Emitter::Primitive::K_RETRY
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_SELF
# Did you mean?  Unparser::Emitter::K_DEF
#                Unparser::Emitter::Primitive::K_DEF
#                Unparser::Emitter::Primitive::Rational::K_DEF
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_SUPER
# Did you mean?  Unparser::Emitter::Primitive::Rational::Super
#                Unparser::Emitter::Primitive::Super
#                Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_THEN
# Did you mean?  Unparser::Emitter::Primitive::K_WHEN
#                Unparser::Emitter::K_WHEN
#                Unparser::Emitter::Primitive::Rational::K_WHEN
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_TRUE
# Did you mean?  Unparser::Emitter::Primitive::Rational::K_THEN
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_UNDEF
# Did you mean?  Unparser::Emitter::Undef
#                Unparser::Emitter::Primitive::Undef
#                Unparser::Emitter::Primitive::Rational::Undef
#                Unparser::Emitter::Primitive::Rational::K_DEF
#                Unparser::Emitter::K_DEF
#                Unparser::Emitter::Primitive::K_DEF
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_UNLESS
# Did you mean?  Unparser::Emitter::Primitive::Rational::K_UNTIL
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_UNTIL
# Did you mean?  Unparser::Emitter::Primitive::Rational::K_NIL
#                Unparser::Emitter::Primitive::K_NIL
#                Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_WHEN
# Did you mean?  Unparser::Emitter::Primitive::Rational::When
#                Unparser::Emitter::When
#                Unparser::Emitter::Primitive::When
#                Unparser::Emitter::Primitive::K_THEN
#                Unparser::Emitter::K_THEN
#                Unparser::Emitter::Primitive::Rational::K_THEN
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_WHILE
# Did you mean?  Unparser::Emitter::Primitive::Rational::K_FILE
#                Unparser::Emitter::Primitive::K_FILE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_YIELD
# Did you mean?  Unparser::Emitter::Primitive::Rational::Yield
#                Unparser::Emitter::Primitive::Yield
#                Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::Primitive::Rational::NO_INDENT
# uninitialized constant Unparser::Emitter::Primitive::Rational::REGISTRY
# uninitialized constant Unparser::Emitter::Primitive::Rational::UNARY_OPERATORS
# Did you mean?  Unparser::Emitter::Primitive::Rational::BINARY_OPERATORS
#                Unparser::Emitter::Primitive::BINARY_OPERATORS
#                Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::Emitter::Procarg::BINARY_OPERATORS
# Did you mean?  Unparser::Emitter::Procarg::UNARY_OPERATORS
#                Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::Procarg::KEYWORDS
# uninitialized constant Unparser::Emitter::Procarg::K_ALIAS
# Did you mean?  Unparser::Emitter::Procarg::Alias
#                Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::Procarg::K_AND
# Did you mean?  Unparser::Emitter::Procarg::K_END
#                Unparser::Emitter::K_END
#                Unparser::Emitter::Procarg::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::Procarg::K_BEGIN
# Did you mean?  Unparser::Emitter::Procarg::Begin
#                Unparser::Emitter::Begin
#                Unparser::Emitter::Procarg::KWBegin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::Procarg::K_BREAK
# uninitialized constant Unparser::Emitter::Procarg::K_CASE
# Did you mean?  Unparser::Emitter::Procarg::Case
#                Unparser::Emitter::Case
#                Unparser::Emitter::Procarg::K_FALSE
#                Unparser::Emitter::Procarg::K_CLASS
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
# uninitialized constant Unparser::Emitter::Procarg::K_CLASS
# Did you mean?  Unparser::Emitter::Procarg::Class
#                Unparser::Emitter::Class
#                Class
#                Unparser::Emitter::Procarg::SClass
#                Unparser::Emitter::SClass
#                Unparser::Emitter::Procarg::K_CASE
#                Unparser::Emitter::K_CASE
# uninitialized constant Unparser::Emitter::Procarg::K_DEF
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::Procarg::K_DO
#                Unparser::Emitter::Procarg::K_SELF
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::Procarg::K_UNDEF
#                Unparser::Emitter::K_UNDEF
# uninitialized constant Unparser::Emitter::Procarg::K_DEFINE
# Did you mean?  Unparser::Emitter::K_DEFINED
#                Unparser::Emitter::Procarg::K_DEFINED
# uninitialized constant Unparser::Emitter::Procarg::K_DEFINED
# Did you mean?  Unparser::Emitter::Defined
#                Unparser::Emitter::Procarg::Defined
#                Unparser::Emitter::K_DEFINE
# uninitialized constant Unparser::Emitter::Procarg::K_DO
# Did you mean?  Unparser::Emitter::Procarg::K_OR
# uninitialized constant Unparser::Emitter::Procarg::K_EEND
# Did you mean?  Unparser::Emitter::Procarg::K_AND
#                Unparser::Emitter::K_END
#                Unparser::Emitter::K_AND
#                Unparser::Emitter::Procarg::K_END
# uninitialized constant Unparser::Emitter::Procarg::K_ELSE
# Did you mean?  Unparser::Emitter::K_FALSE
#                Unparser::Emitter::Procarg::K_ELSIF
#                Unparser::Emitter::Procarg::K_FALSE
#                Unparser::Emitter::K_ELSIF
# uninitialized constant Unparser::Emitter::Procarg::K_ELSIF
# Did you mean?  Unparser::Emitter::Procarg::K_ELSE
#                Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::Procarg::K_ENCODING
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::Procarg::K_END
# Did you mean?  Unparser::Emitter::Procarg::K_AND
#                Unparser::Emitter::K_AND
#                Unparser::Emitter::Procarg::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::Procarg::K_ENSURE
# Did you mean?  Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::Procarg::K_FALSE
# Did you mean?  Unparser::Emitter::K_ELSE
#                Unparser::Emitter::Procarg::K_FILE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::Procarg::K_ELSE
#                Unparser::Emitter::Procarg::K_CASE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Procarg::K_FILE
# Did you mean?  File
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::Procarg::K_NIL
#                Unparser::Emitter::Procarg::K_FALSE
#                Unparser::Emitter::K_WHILE
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::Procarg::K_WHILE
# uninitialized constant Unparser::Emitter::Procarg::K_FOR
# Did you mean?  Unparser::Emitter::Procarg::K_OR
#                Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::Procarg::K_IF
# Did you mean?  Unparser::Emitter::Procarg::K_IN
#                Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::Procarg::K_IN
# Did you mean?  Unparser::Emitter::Procarg::K_IF
#                Unparser::Emitter::K_IF
# uninitialized constant Unparser::Emitter::Procarg::K_MODULE
# Did you mean?  Unparser::Emitter::Procarg::Module
#                Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::Procarg::K_NEXT
# Did you mean?  Unparser::Emitter::Procarg::K_NOT
#                Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::Procarg::K_NIL
# Did you mean?  Unparser::Emitter::Procarg::K_IN
#                Unparser::Emitter::K_IN
#                Unparser::Emitter::Procarg::K_FILE
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::Procarg::K_UNTIL
#                Unparser::Emitter::K_UNTIL
# uninitialized constant Unparser::Emitter::Procarg::K_NOT
# Did you mean?  Unparser::Emitter::Procarg::K_NEXT
#                Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::Procarg::K_OR
# Did you mean?  Unparser::Emitter::Procarg::K_FOR
#                Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::Procarg::K_POSTEXE
# uninitialized constant Unparser::Emitter::Procarg::K_PREEXE
# uninitialized constant Unparser::Emitter::Procarg::K_REDO
# Did you mean?  Unparser::Emitter::Procarg::K_DO
#                Unparser::Emitter::K_DO
# uninitialized constant Unparser::Emitter::Procarg::K_RESCUE
# Did you mean?  Unparser::Emitter::Rescue
#                Unparser::Emitter::Procarg::Rescue
# uninitialized constant Unparser::Emitter::Procarg::K_RETRY
# Did you mean?  Unparser::Emitter::Procarg::K_RETURN
#                Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::Procarg::K_RETURN
# Did you mean?  Unparser::Emitter::Procarg::K_RETRY
#                Unparser::Emitter::K_RETRY
# uninitialized constant Unparser::Emitter::Procarg::K_SELF
# Did you mean?  Unparser::Emitter::Procarg::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Procarg::K_SUPER
# Did you mean?  Unparser::Emitter::Procarg::Super
#                Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::Procarg::K_THEN
# Did you mean?  Unparser::Emitter::Procarg::K_WHEN
#                Unparser::Emitter::K_WHEN
# uninitialized constant Unparser::Emitter::Procarg::K_TRUE
# Did you mean?  Unparser::Emitter::Procarg::K_THEN
# uninitialized constant Unparser::Emitter::Procarg::K_UNDEF
# Did you mean?  Unparser::Emitter::Procarg::Undef
#                Unparser::Emitter::Undef
#                Unparser::Emitter::Procarg::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Procarg::K_UNLESS
# Did you mean?  Unparser::Emitter::Procarg::K_UNTIL
# uninitialized constant Unparser::Emitter::Procarg::K_UNTIL
# Did you mean?  Unparser::Emitter::Procarg::K_NIL
#                Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::Procarg::K_WHEN
# Did you mean?  Unparser::Emitter::When
#                Unparser::Emitter::Procarg::When
#                Unparser::Emitter::K_THEN
#                Unparser::Emitter::Procarg::K_THEN
# uninitialized constant Unparser::Emitter::Procarg::K_WHILE
# Did you mean?  Unparser::Emitter::Procarg::K_FILE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Procarg::K_YIELD
# Did you mean?  Unparser::Emitter::Procarg::Yield
#                Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::Procarg::NO_INDENT
# uninitialized constant Unparser::Emitter::Procarg::REGISTRY
# uninitialized constant Unparser::Emitter::Procarg::UNARY_OPERATORS
# Did you mean?  Unparser::Emitter::Procarg::BINARY_OPERATORS
#                Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::Emitter::Range::BINARY_OPERATORS
# Did you mean?  Unparser::Emitter::Range::UNARY_OPERATORS
#                Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::Range::KEYWORDS
# uninitialized constant Unparser::Emitter::Range::K_ALIAS
# Did you mean?  Unparser::Emitter::Range::Alias
#                Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::Range::K_AND
# Did you mean?  Unparser::Emitter::Range::K_END
#                Unparser::Emitter::K_END
#                Unparser::Emitter::Range::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::Range::K_BEGIN
# Did you mean?  Unparser::Emitter::Range::Begin
#                Unparser::Emitter::Begin
#                Unparser::Emitter::Range::KWBegin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::Range::K_BREAK
# uninitialized constant Unparser::Emitter::Range::K_CASE
# Did you mean?  Unparser::Emitter::Range::Case
#                Unparser::Emitter::Case
#                Unparser::Emitter::Range::K_FALSE
#                Unparser::Emitter::Range::K_CLASS
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
# uninitialized constant Unparser::Emitter::Range::K_CLASS
# Did you mean?  Unparser::Emitter::Range::Class
#                Unparser::Emitter::Class
#                Class
#                Unparser::Emitter::Range::SClass
#                Unparser::Emitter::SClass
#                Unparser::Emitter::Range::K_CASE
#                Unparser::Emitter::K_CASE
# uninitialized constant Unparser::Emitter::Range::K_DEF
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::Range::K_DO
#                Unparser::Emitter::Range::K_SELF
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::Range::K_UNDEF
#                Unparser::Emitter::K_UNDEF
# uninitialized constant Unparser::Emitter::Range::K_DEFINE
# Did you mean?  Unparser::Emitter::K_DEFINED
#                Unparser::Emitter::Range::K_DEFINED
# uninitialized constant Unparser::Emitter::Range::K_DEFINED
# Did you mean?  Unparser::Emitter::Defined
#                Unparser::Emitter::Range::Defined
#                Unparser::Emitter::K_DEFINE
# uninitialized constant Unparser::Emitter::Range::K_DO
# Did you mean?  Unparser::Emitter::Range::K_OR
# uninitialized constant Unparser::Emitter::Range::K_EEND
# Did you mean?  Unparser::Emitter::Range::K_AND
#                Unparser::Emitter::K_END
#                Unparser::Emitter::K_AND
#                Unparser::Emitter::Range::K_END
# uninitialized constant Unparser::Emitter::Range::K_ELSE
# Did you mean?  Unparser::Emitter::K_FALSE
#                Unparser::Emitter::Range::K_ELSIF
#                Unparser::Emitter::Range::K_FALSE
#                Unparser::Emitter::K_ELSIF
# uninitialized constant Unparser::Emitter::Range::K_ELSIF
# Did you mean?  Unparser::Emitter::Range::K_ELSE
#                Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::Range::K_ENCODING
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::Range::K_END
# Did you mean?  Unparser::Emitter::Range::K_AND
#                Unparser::Emitter::K_AND
#                Unparser::Emitter::Range::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::Range::K_ENSURE
# Did you mean?  Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::Range::K_FALSE
# Did you mean?  Unparser::Emitter::K_ELSE
#                Unparser::Emitter::Range::K_FILE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::Range::K_ELSE
#                Unparser::Emitter::Range::K_CASE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Range::K_FILE
# Did you mean?  File
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::Range::K_NIL
#                Unparser::Emitter::Range::K_FALSE
#                Unparser::Emitter::K_WHILE
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::Range::K_WHILE
# uninitialized constant Unparser::Emitter::Range::K_FOR
# Did you mean?  Unparser::Emitter::Range::K_OR
#                Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::Range::K_IF
# Did you mean?  Unparser::Emitter::Range::K_IN
#                Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::Range::K_IN
# Did you mean?  Unparser::Emitter::Range::K_IF
#                Unparser::Emitter::K_IF
# uninitialized constant Unparser::Emitter::Range::K_MODULE
# Did you mean?  Unparser::Emitter::Range::Module
#                Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::Range::K_NEXT
# Did you mean?  Unparser::Emitter::Range::K_NOT
#                Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::Range::K_NIL
# Did you mean?  Unparser::Emitter::Range::K_IN
#                Unparser::Emitter::K_IN
#                Unparser::Emitter::Range::K_FILE
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::Range::K_UNTIL
#                Unparser::Emitter::K_UNTIL
# uninitialized constant Unparser::Emitter::Range::K_NOT
# Did you mean?  Unparser::Emitter::Range::K_NEXT
#                Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::Range::K_OR
# Did you mean?  Unparser::Emitter::Range::K_FOR
#                Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::Range::K_POSTEXE
# uninitialized constant Unparser::Emitter::Range::K_PREEXE
# uninitialized constant Unparser::Emitter::Range::K_REDO
# Did you mean?  Unparser::Emitter::Range::K_DO
#                Unparser::Emitter::K_DO
# uninitialized constant Unparser::Emitter::Range::K_RESCUE
# Did you mean?  Unparser::Emitter::Rescue
#                Unparser::Emitter::Range::Rescue
# uninitialized constant Unparser::Emitter::Range::K_RETRY
# Did you mean?  Unparser::Emitter::Range::K_RETURN
#                Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::Range::K_RETURN
# Did you mean?  Unparser::Emitter::Range::K_RETRY
#                Unparser::Emitter::K_RETRY
# uninitialized constant Unparser::Emitter::Range::K_SELF
# Did you mean?  Unparser::Emitter::Range::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Range::K_SUPER
# Did you mean?  Unparser::Emitter::Range::Super
#                Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::Range::K_THEN
# Did you mean?  Unparser::Emitter::Range::K_WHEN
#                Unparser::Emitter::K_WHEN
# uninitialized constant Unparser::Emitter::Range::K_TRUE
# Did you mean?  Unparser::Emitter::Range::K_THEN
# uninitialized constant Unparser::Emitter::Range::K_UNDEF
# Did you mean?  Unparser::Emitter::Range::Undef
#                Unparser::Emitter::Undef
#                Unparser::Emitter::Range::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Range::K_UNLESS
# Did you mean?  Unparser::Emitter::Range::K_UNTIL
# uninitialized constant Unparser::Emitter::Range::K_UNTIL
# Did you mean?  Unparser::Emitter::Range::K_NIL
#                Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::Range::K_WHEN
# Did you mean?  Unparser::Emitter::When
#                Unparser::Emitter::Range::When
#                Unparser::Emitter::K_THEN
#                Unparser::Emitter::Range::K_THEN
# uninitialized constant Unparser::Emitter::Range::K_WHILE
# Did you mean?  Unparser::Emitter::Range::K_FILE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Range::K_YIELD
# Did you mean?  Unparser::Emitter::Range::Yield
#                Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::Range::NO_INDENT
# uninitialized constant Unparser::Emitter::Range::REGISTRY
# uninitialized constant Unparser::Emitter::Range::UNARY_OPERATORS
# Did you mean?  Unparser::Emitter::Range::BINARY_OPERATORS
#                Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::Emitter::Repetition::BINARY_OPERATORS
# Did you mean?  Unparser::Emitter::Repetition::UNARY_OPERATORS
#                Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::Repetition::KEYWORDS
# uninitialized constant Unparser::Emitter::Repetition::K_ALIAS
# Did you mean?  Unparser::Emitter::Repetition::Alias
#                Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::Repetition::K_AND
# Did you mean?  Unparser::Emitter::Repetition::K_END
#                Unparser::Emitter::K_END
#                Unparser::Emitter::Repetition::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::Repetition::K_BEGIN
# Did you mean?  Unparser::Emitter::Repetition::Begin
#                Unparser::Emitter::Begin
#                Unparser::Emitter::Repetition::KWBegin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::Repetition::K_BREAK
# uninitialized constant Unparser::Emitter::Repetition::K_CASE
# Did you mean?  Unparser::Emitter::Repetition::Case
#                Unparser::Emitter::Case
#                Unparser::Emitter::Repetition::K_FALSE
#                Unparser::Emitter::Repetition::K_CLASS
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
# uninitialized constant Unparser::Emitter::Repetition::K_CLASS
# Did you mean?  Unparser::Emitter::Repetition::Class
#                Unparser::Emitter::Class
#                Class
#                Unparser::Emitter::Repetition::SClass
#                Unparser::Emitter::SClass
#                Unparser::Emitter::Repetition::K_CASE
#                Unparser::Emitter::K_CASE
# uninitialized constant Unparser::Emitter::Repetition::K_DEF
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::Repetition::K_DO
#                Unparser::Emitter::Repetition::K_SELF
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::Repetition::K_UNDEF
#                Unparser::Emitter::K_UNDEF
# uninitialized constant Unparser::Emitter::Repetition::K_DEFINE
# Did you mean?  Unparser::Emitter::K_DEFINED
#                Unparser::Emitter::Repetition::K_DEFINED
# uninitialized constant Unparser::Emitter::Repetition::K_DEFINED
# Did you mean?  Unparser::Emitter::Defined
#                Unparser::Emitter::Repetition::Defined
#                Unparser::Emitter::K_DEFINE
# uninitialized constant Unparser::Emitter::Repetition::K_DO
# Did you mean?  Unparser::Emitter::Repetition::K_OR
# uninitialized constant Unparser::Emitter::Repetition::K_EEND
# Did you mean?  Unparser::Emitter::Repetition::K_AND
#                Unparser::Emitter::K_END
#                Unparser::Emitter::K_AND
#                Unparser::Emitter::Repetition::K_END
# uninitialized constant Unparser::Emitter::Repetition::K_ELSE
# Did you mean?  Unparser::Emitter::K_FALSE
#                Unparser::Emitter::Repetition::K_ELSIF
#                Unparser::Emitter::Repetition::K_FALSE
#                Unparser::Emitter::K_ELSIF
# uninitialized constant Unparser::Emitter::Repetition::K_ELSIF
# Did you mean?  Unparser::Emitter::Repetition::K_ELSE
#                Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::Repetition::K_ENCODING
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::Repetition::K_END
# Did you mean?  Unparser::Emitter::Repetition::K_AND
#                Unparser::Emitter::K_AND
#                Unparser::Emitter::Repetition::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::Repetition::K_ENSURE
# Did you mean?  Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::Repetition::K_FALSE
# Did you mean?  Unparser::Emitter::K_ELSE
#                Unparser::Emitter::Repetition::K_FILE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::Repetition::K_ELSE
#                Unparser::Emitter::Repetition::K_CASE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Repetition::K_FILE
# Did you mean?  File
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::Repetition::K_NIL
#                Unparser::Emitter::Repetition::K_FALSE
#                Unparser::Emitter::K_WHILE
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::Repetition::K_WHILE
# uninitialized constant Unparser::Emitter::Repetition::K_FOR
# Did you mean?  Unparser::Emitter::Repetition::K_OR
#                Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::Repetition::K_IF
# Did you mean?  Unparser::Emitter::Repetition::K_IN
#                Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::Repetition::K_IN
# Did you mean?  Unparser::Emitter::Repetition::K_IF
#                Unparser::Emitter::K_IF
# uninitialized constant Unparser::Emitter::Repetition::K_MODULE
# Did you mean?  Unparser::Emitter::Repetition::Module
#                Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::Repetition::K_NEXT
# Did you mean?  Unparser::Emitter::Repetition::K_NOT
#                Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::Repetition::K_NIL
# Did you mean?  Unparser::Emitter::Repetition::K_IN
#                Unparser::Emitter::K_IN
#                Unparser::Emitter::Repetition::K_FILE
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::Repetition::K_UNTIL
#                Unparser::Emitter::K_UNTIL
# uninitialized constant Unparser::Emitter::Repetition::K_NOT
# Did you mean?  Unparser::Emitter::Repetition::K_NEXT
#                Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::Repetition::K_OR
# Did you mean?  Unparser::Emitter::Repetition::K_FOR
#                Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::Repetition::K_POSTEXE
# uninitialized constant Unparser::Emitter::Repetition::K_PREEXE
# uninitialized constant Unparser::Emitter::Repetition::K_REDO
# Did you mean?  Unparser::Emitter::Repetition::K_DO
#                Unparser::Emitter::K_DO
# uninitialized constant Unparser::Emitter::Repetition::K_RESCUE
# Did you mean?  Unparser::Emitter::Rescue
#                Unparser::Emitter::Repetition::Rescue
# uninitialized constant Unparser::Emitter::Repetition::K_RETRY
# Did you mean?  Unparser::Emitter::Repetition::K_RETURN
#                Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::Repetition::K_RETURN
# Did you mean?  Unparser::Emitter::Repetition::K_RETRY
#                Unparser::Emitter::K_RETRY
# uninitialized constant Unparser::Emitter::Repetition::K_SELF
# Did you mean?  Unparser::Emitter::Repetition::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Repetition::K_SUPER
# Did you mean?  Unparser::Emitter::Repetition::Super
#                Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::Repetition::K_THEN
# Did you mean?  Unparser::Emitter::Repetition::K_WHEN
#                Unparser::Emitter::K_WHEN
# uninitialized constant Unparser::Emitter::Repetition::K_TRUE
# Did you mean?  Unparser::Emitter::Repetition::K_THEN
# uninitialized constant Unparser::Emitter::Repetition::K_UNDEF
# Did you mean?  Unparser::Emitter::Repetition::Undef
#                Unparser::Emitter::Undef
#                Unparser::Emitter::Repetition::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Repetition::K_UNLESS
# Did you mean?  Unparser::Emitter::Repetition::K_UNTIL
# uninitialized constant Unparser::Emitter::Repetition::K_UNTIL
# Did you mean?  Unparser::Emitter::Repetition::K_NIL
#                Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::Repetition::K_WHEN
# Did you mean?  Unparser::Emitter::When
#                Unparser::Emitter::Repetition::When
#                Unparser::Emitter::K_THEN
#                Unparser::Emitter::Repetition::K_THEN
# uninitialized constant Unparser::Emitter::Repetition::K_WHILE
# Did you mean?  Unparser::Emitter::Repetition::K_FILE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Repetition::K_YIELD
# Did you mean?  Unparser::Emitter::Repetition::Yield
#                Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::Repetition::NO_INDENT
# uninitialized constant Unparser::Emitter::Repetition::REGISTRY
# uninitialized constant Unparser::Emitter::Repetition::UNARY_OPERATORS
# Did you mean?  Unparser::Emitter::Repetition::BINARY_OPERATORS
#                Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::Emitter::Simple::BINARY_OPERATORS
# Did you mean?  Unparser::Emitter::Simple::UNARY_OPERATORS
#                Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::Simple::KEYWORDS
# uninitialized constant Unparser::Emitter::Simple::K_ALIAS
# Did you mean?  Unparser::Emitter::Simple::Alias
#                Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::Simple::K_AND
# Did you mean?  Unparser::Emitter::Simple::K_END
#                Unparser::Emitter::K_END
#                Unparser::Emitter::Simple::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::Simple::K_BEGIN
# Did you mean?  Unparser::Emitter::Simple::Begin
#                Unparser::Emitter::Begin
#                Unparser::Emitter::Simple::KWBegin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::Simple::K_BREAK
# uninitialized constant Unparser::Emitter::Simple::K_CASE
# Did you mean?  Unparser::Emitter::Simple::Case
#                Unparser::Emitter::Case
#                Unparser::Emitter::Simple::K_FALSE
#                Unparser::Emitter::Simple::K_CLASS
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
# uninitialized constant Unparser::Emitter::Simple::K_CLASS
# Did you mean?  Unparser::Emitter::Simple::Class
#                Unparser::Emitter::Class
#                Class
#                Unparser::Emitter::Simple::SClass
#                Unparser::Emitter::SClass
#                Unparser::Emitter::Simple::K_CASE
#                Unparser::Emitter::K_CASE
# uninitialized constant Unparser::Emitter::Simple::K_DEF
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::Simple::K_DO
#                Unparser::Emitter::Simple::K_SELF
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::Simple::K_UNDEF
#                Unparser::Emitter::K_UNDEF
# uninitialized constant Unparser::Emitter::Simple::K_DEFINE
# Did you mean?  Unparser::Emitter::K_DEFINED
#                Unparser::Emitter::Simple::K_DEFINED
# uninitialized constant Unparser::Emitter::Simple::K_DEFINED
# Did you mean?  Unparser::Emitter::Defined
#                Unparser::Emitter::Simple::Defined
#                Unparser::Emitter::K_DEFINE
# uninitialized constant Unparser::Emitter::Simple::K_DO
# Did you mean?  Unparser::Emitter::Simple::K_OR
# uninitialized constant Unparser::Emitter::Simple::K_EEND
# Did you mean?  Unparser::Emitter::Simple::K_AND
#                Unparser::Emitter::K_END
#                Unparser::Emitter::K_AND
#                Unparser::Emitter::Simple::K_END
# uninitialized constant Unparser::Emitter::Simple::K_ELSE
# Did you mean?  Unparser::Emitter::K_FALSE
#                Unparser::Emitter::Simple::K_ELSIF
#                Unparser::Emitter::Simple::K_FALSE
#                Unparser::Emitter::K_ELSIF
# uninitialized constant Unparser::Emitter::Simple::K_ELSIF
# Did you mean?  Unparser::Emitter::Simple::K_ELSE
#                Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::Simple::K_ENCODING
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::Simple::K_END
# Did you mean?  Unparser::Emitter::Simple::K_AND
#                Unparser::Emitter::K_AND
#                Unparser::Emitter::Simple::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::Simple::K_ENSURE
# Did you mean?  Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::Simple::K_FALSE
# Did you mean?  Unparser::Emitter::K_ELSE
#                Unparser::Emitter::Simple::K_FILE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::Simple::K_ELSE
#                Unparser::Emitter::Simple::K_CASE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Simple::K_FILE
# Did you mean?  File
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::Simple::K_NIL
#                Unparser::Emitter::Simple::K_FALSE
#                Unparser::Emitter::K_WHILE
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::Simple::K_WHILE
# uninitialized constant Unparser::Emitter::Simple::K_FOR
# Did you mean?  Unparser::Emitter::Simple::K_OR
#                Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::Simple::K_IF
# Did you mean?  Unparser::Emitter::Simple::K_IN
#                Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::Simple::K_IN
# Did you mean?  Unparser::Emitter::Simple::K_IF
#                Unparser::Emitter::K_IF
# uninitialized constant Unparser::Emitter::Simple::K_MODULE
# Did you mean?  Unparser::Emitter::Simple::Module
#                Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::Simple::K_NEXT
# Did you mean?  Unparser::Emitter::Simple::K_NOT
#                Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::Simple::K_NIL
# Did you mean?  Unparser::Emitter::Simple::K_IN
#                Unparser::Emitter::K_IN
#                Unparser::Emitter::Simple::K_FILE
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::Simple::K_UNTIL
#                Unparser::Emitter::K_UNTIL
# uninitialized constant Unparser::Emitter::Simple::K_NOT
# Did you mean?  Unparser::Emitter::Simple::K_NEXT
#                Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::Simple::K_OR
# Did you mean?  Unparser::Emitter::Simple::K_FOR
#                Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::Simple::K_POSTEXE
# uninitialized constant Unparser::Emitter::Simple::K_PREEXE
# uninitialized constant Unparser::Emitter::Simple::K_REDO
# Did you mean?  Unparser::Emitter::Simple::K_DO
#                Unparser::Emitter::K_DO
# uninitialized constant Unparser::Emitter::Simple::K_RESCUE
# Did you mean?  Unparser::Emitter::Rescue
#                Unparser::Emitter::Simple::Rescue
# uninitialized constant Unparser::Emitter::Simple::K_RETRY
# Did you mean?  Unparser::Emitter::Simple::K_RETURN
#                Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::Simple::K_RETURN
# Did you mean?  Unparser::Emitter::Simple::K_RETRY
#                Unparser::Emitter::K_RETRY
# uninitialized constant Unparser::Emitter::Simple::K_SELF
# Did you mean?  Unparser::Emitter::Simple::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Simple::K_SUPER
# Did you mean?  Unparser::Emitter::Simple::Super
#                Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::Simple::K_THEN
# Did you mean?  Unparser::Emitter::Simple::K_WHEN
#                Unparser::Emitter::K_WHEN
# uninitialized constant Unparser::Emitter::Simple::K_TRUE
# Did you mean?  Unparser::Emitter::Simple::K_THEN
# uninitialized constant Unparser::Emitter::Simple::K_UNDEF
# Did you mean?  Unparser::Emitter::Simple::Undef
#                Unparser::Emitter::Undef
#                Unparser::Emitter::Simple::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Simple::K_UNLESS
# Did you mean?  Unparser::Emitter::Simple::K_UNTIL
# uninitialized constant Unparser::Emitter::Simple::K_UNTIL
# Did you mean?  Unparser::Emitter::Simple::K_NIL
#                Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::Simple::K_WHEN
# Did you mean?  Unparser::Emitter::When
#                Unparser::Emitter::Simple::When
#                Unparser::Emitter::K_THEN
#                Unparser::Emitter::Simple::K_THEN
# uninitialized constant Unparser::Emitter::Simple::K_WHILE
# Did you mean?  Unparser::Emitter::Simple::K_FILE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Simple::K_YIELD
# Did you mean?  Unparser::Emitter::Simple::Yield
#                Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::Simple::NO_INDENT
# uninitialized constant Unparser::Emitter::Simple::REGISTRY
# uninitialized constant Unparser::Emitter::Simple::UNARY_OPERATORS
# Did you mean?  Unparser::Emitter::Simple::BINARY_OPERATORS
#                Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::NodeDetails::BINARY_OPERATORS
# Did you mean?  Unparser::NodeDetails::UNARY_OPERATORS
# uninitialized constant Unparser::NodeDetails::KEYWORDS
# uninitialized constant Unparser::NodeDetails::K_ALIAS
# Did you mean?  Unparser::NodeDetails::K_FALSE
# uninitialized constant Unparser::NodeDetails::K_AND
# Did you mean?  Unparser::NodeDetails::K_END
#                Unparser::NodeDetails::K_EEND
# uninitialized constant Unparser::NodeDetails::K_BEGIN
# uninitialized constant Unparser::NodeDetails::K_BREAK
# uninitialized constant Unparser::NodeDetails::K_CASE
# Did you mean?  Unparser::NodeDetails::K_FALSE
#                Unparser::NodeDetails::K_CLASS
# uninitialized constant Unparser::NodeDetails::K_CLASS
# Did you mean?  Class
#                Unparser::NodeDetails::K_CASE
# uninitialized constant Unparser::NodeDetails::K_DEF
# Did you mean?  Unparser::NodeDetails::K_DO
#                Unparser::NodeDetails::K_SELF
#                Unparser::NodeDetails::K_UNDEF
# uninitialized constant Unparser::NodeDetails::K_DEFINE
# Did you mean?  Unparser::NodeDetails::K_DEFINED
# uninitialized constant Unparser::NodeDetails::K_DEFINED
# uninitialized constant Unparser::NodeDetails::K_DO
# Did you mean?  Unparser::NodeDetails::K_OR
# uninitialized constant Unparser::NodeDetails::K_EEND
# Did you mean?  Unparser::NodeDetails::K_AND
#                Unparser::NodeDetails::K_END
# uninitialized constant Unparser::NodeDetails::K_ELSE
# Did you mean?  Unparser::NodeDetails::K_ELSIF
#                Unparser::NodeDetails::K_FALSE
# uninitialized constant Unparser::NodeDetails::K_ELSIF
# Did you mean?  Unparser::NodeDetails::K_ELSE
# uninitialized constant Unparser::NodeDetails::K_ENCODING
# Did you mean?  Encoding
# uninitialized constant Unparser::NodeDetails::K_END
# Did you mean?  Unparser::NodeDetails::K_AND
#                Unparser::NodeDetails::K_EEND
# uninitialized constant Unparser::NodeDetails::K_ENSURE
# Did you mean?  Unparser::NodeDetails::K_END
# uninitialized constant Unparser::NodeDetails::K_FALSE
# Did you mean?  Unparser::NodeDetails::K_FILE
#                Unparser::NodeDetails::K_ELSE
#                Unparser::NodeDetails::K_CASE
# uninitialized constant Unparser::NodeDetails::K_FILE
# Did you mean?  File
#                Unparser::NodeDetails::K_NIL
#                Unparser::NodeDetails::K_WHILE
#                Unparser::NodeDetails::K_FALSE
# uninitialized constant Unparser::NodeDetails::K_FOR
# Did you mean?  Unparser::NodeDetails::K_OR
# uninitialized constant Unparser::NodeDetails::K_IF
# Did you mean?  Unparser::NodeDetails::K_IN
# uninitialized constant Unparser::NodeDetails::K_IN
# Did you mean?  Unparser::NodeDetails::K_IF
# uninitialized constant Unparser::NodeDetails::K_MODULE
# Did you mean?  Module
# uninitialized constant Unparser::NodeDetails::K_NEXT
# Did you mean?  Unparser::NodeDetails::K_NOT
# uninitialized constant Unparser::NodeDetails::K_NIL
# Did you mean?  Unparser::NodeDetails::K_IN
#                Unparser::NodeDetails::K_FILE
#                Unparser::NodeDetails::K_UNTIL
# uninitialized constant Unparser::NodeDetails::K_NOT
# Did you mean?  Unparser::NodeDetails::K_NEXT
# uninitialized constant Unparser::NodeDetails::K_OR
# Did you mean?  Unparser::NodeDetails::K_FOR
# uninitialized constant Unparser::NodeDetails::K_POSTEXE
# uninitialized constant Unparser::NodeDetails::K_PREEXE
# uninitialized constant Unparser::NodeDetails::K_REDO
# Did you mean?  Unparser::NodeDetails::K_DO
# uninitialized constant Unparser::NodeDetails::K_RESCUE
# Did you mean?  Unparser::NodeDetails::K_ELSE
# uninitialized constant Unparser::NodeDetails::K_RETRY
# Did you mean?  Unparser::NodeDetails::K_RETURN
# uninitialized constant Unparser::NodeDetails::K_RETURN
# Did you mean?  Unparser::NodeDetails::K_RETRY
# uninitialized constant Unparser::NodeDetails::K_SELF
# Did you mean?  Unparser::NodeDetails::K_DEF
# uninitialized constant Unparser::NodeDetails::K_SUPER
# Did you mean?  Unparser::NodeDetails::K_ENSURE
# uninitialized constant Unparser::NodeDetails::K_THEN
# Did you mean?  Unparser::NodeDetails::K_WHEN
# uninitialized constant Unparser::NodeDetails::K_TRUE
# Did you mean?  Unparser::NodeDetails::K_THEN
# uninitialized constant Unparser::NodeDetails::K_UNDEF
# Did you mean?  Unparser::NodeDetails::K_DEF
# uninitialized constant Unparser::NodeDetails::K_UNLESS
# Did you mean?  Unparser::NodeDetails::K_UNTIL
# uninitialized constant Unparser::NodeDetails::K_UNTIL
# Did you mean?  Unparser::NodeDetails::K_NIL
# uninitialized constant Unparser::NodeDetails::K_WHEN
# Did you mean?  Unparser::NodeDetails::K_THEN
# uninitialized constant Unparser::NodeDetails::K_WHILE
# Did you mean?  Unparser::NodeDetails::K_FILE
# uninitialized constant Unparser::NodeDetails::K_YIELD
# uninitialized constant Unparser::NodeDetails::UNARY_OPERATORS
# Did you mean?  Unparser::NodeDetails::BINARY_OPERATORS
# uninitialized constant Unparser::NodeDetails::Send::BINARY_OPERATORS
# Did you mean?  Unparser::NodeDetails::Send::UNARY_OPERATORS
#                Unparser::NodeDetails::UNARY_OPERATORS
# uninitialized constant Unparser::NodeDetails::Send::KEYWORDS
# uninitialized constant Unparser::NodeDetails::Send::K_ALIAS
# Did you mean?  Unparser::NodeDetails::Send::K_FALSE
# uninitialized constant Unparser::NodeDetails::Send::K_AND
# Did you mean?  Unparser::NodeDetails::Send::K_END
#                Unparser::NodeDetails::K_END
#                Unparser::NodeDetails::Send::K_EEND
#                Unparser::NodeDetails::K_EEND
# uninitialized constant Unparser::NodeDetails::Send::K_BEGIN
# uninitialized constant Unparser::NodeDetails::Send::K_BREAK
# uninitialized constant Unparser::NodeDetails::Send::K_CASE
# Did you mean?  Unparser::NodeDetails::Send::K_FALSE
#                Unparser::NodeDetails::Send::K_CLASS
#                Unparser::NodeDetails::K_FALSE
#                Unparser::NodeDetails::K_CLASS
# uninitialized constant Unparser::NodeDetails::Send::K_CLASS
# Did you mean?  Class
#                Unparser::NodeDetails::Send::K_CASE
#                Unparser::NodeDetails::K_CASE
# uninitialized constant Unparser::NodeDetails::Send::K_DEF
# Did you mean?  Unparser::NodeDetails::K_DO
#                Unparser::NodeDetails::Send::K_DO
#                Unparser::NodeDetails::Send::K_SELF
#                Unparser::NodeDetails::K_SELF
#                Unparser::NodeDetails::Send::K_UNDEF
#                Unparser::NodeDetails::K_UNDEF
# uninitialized constant Unparser::NodeDetails::Send::K_DEFINE
# Did you mean?  Unparser::NodeDetails::Send::K_DEFINED
#                Unparser::NodeDetails::K_DEFINED
# uninitialized constant Unparser::NodeDetails::Send::K_DEFINED
# Did you mean?  Unparser::NodeDetails::K_DEFINE
# uninitialized constant Unparser::NodeDetails::Send::K_DO
# Did you mean?  Unparser::NodeDetails::Send::K_OR
# uninitialized constant Unparser::NodeDetails::Send::K_EEND
# Did you mean?  Unparser::NodeDetails::Send::K_AND
#                Unparser::NodeDetails::K_END
#                Unparser::NodeDetails::K_AND
#                Unparser::NodeDetails::Send::K_END
# uninitialized constant Unparser::NodeDetails::Send::K_ELSE
# Did you mean?  Unparser::NodeDetails::K_FALSE
#                Unparser::NodeDetails::Send::K_ELSIF
#                Unparser::NodeDetails::Send::K_FALSE
#                Unparser::NodeDetails::K_ELSIF
# uninitialized constant Unparser::NodeDetails::Send::K_ELSIF
# Did you mean?  Unparser::NodeDetails::Send::K_ELSE
#                Unparser::NodeDetails::K_ELSE
# uninitialized constant Unparser::NodeDetails::Send::K_ENCODING
# Did you mean?  Encoding
# uninitialized constant Unparser::NodeDetails::Send::K_END
# Did you mean?  Unparser::NodeDetails::Send::K_AND
#                Unparser::NodeDetails::K_AND
#                Unparser::NodeDetails::Send::K_EEND
#                Unparser::NodeDetails::K_EEND
# uninitialized constant Unparser::NodeDetails::Send::K_ENSURE
# Did you mean?  Unparser::NodeDetails::K_END
# uninitialized constant Unparser::NodeDetails::Send::K_FALSE
# Did you mean?  Unparser::NodeDetails::K_ELSE
#                Unparser::NodeDetails::Send::K_FILE
#                Unparser::NodeDetails::K_CASE
#                Unparser::NodeDetails::Send::K_ELSE
#                Unparser::NodeDetails::Send::K_CASE
#                Unparser::NodeDetails::K_FILE
# uninitialized constant Unparser::NodeDetails::Send::K_FILE
# Did you mean?  File
#                Unparser::NodeDetails::K_NIL
#                Unparser::NodeDetails::Send::K_NIL
#                Unparser::NodeDetails::Send::K_FALSE
#                Unparser::NodeDetails::K_WHILE
#                Unparser::NodeDetails::K_FALSE
#                Unparser::NodeDetails::Send::K_WHILE
# uninitialized constant Unparser::NodeDetails::Send::K_FOR
# Did you mean?  Unparser::NodeDetails::Send::K_OR
#                Unparser::NodeDetails::K_OR
# uninitialized constant Unparser::NodeDetails::Send::K_IF
# Did you mean?  Unparser::NodeDetails::Send::K_IN
#                Unparser::NodeDetails::K_IN
# uninitialized constant Unparser::NodeDetails::Send::K_IN
# Did you mean?  Unparser::NodeDetails::Send::K_IF
#                Unparser::NodeDetails::K_IF
# uninitialized constant Unparser::NodeDetails::Send::K_MODULE
# Did you mean?  Module
# uninitialized constant Unparser::NodeDetails::Send::K_NEXT
# Did you mean?  Unparser::NodeDetails::Send::K_NOT
#                Unparser::NodeDetails::K_NOT
# uninitialized constant Unparser::NodeDetails::Send::K_NIL
# Did you mean?  Unparser::NodeDetails::Send::K_IN
#                Unparser::NodeDetails::K_IN
#                Unparser::NodeDetails::Send::K_FILE
#                Unparser::NodeDetails::K_FILE
#                Unparser::NodeDetails::Send::K_UNTIL
#                Unparser::NodeDetails::K_UNTIL
# uninitialized constant Unparser::NodeDetails::Send::K_NOT
# Did you mean?  Unparser::NodeDetails::Send::K_NEXT
#                Unparser::NodeDetails::K_NEXT
# uninitialized constant Unparser::NodeDetails::Send::K_OR
# Did you mean?  Unparser::NodeDetails::Send::K_FOR
#                Unparser::NodeDetails::K_FOR
# uninitialized constant Unparser::NodeDetails::Send::K_POSTEXE
# uninitialized constant Unparser::NodeDetails::Send::K_PREEXE
# uninitialized constant Unparser::NodeDetails::Send::K_REDO
# Did you mean?  Unparser::NodeDetails::Send::K_DO
#                Unparser::NodeDetails::K_DO
# uninitialized constant Unparser::NodeDetails::Send::K_RESCUE
# Did you mean?  Unparser::NodeDetails::Send::K_ELSE
# uninitialized constant Unparser::NodeDetails::Send::K_RETRY
# Did you mean?  Unparser::NodeDetails::Send::K_RETURN
#                Unparser::NodeDetails::K_RETURN
# uninitialized constant Unparser::NodeDetails::Send::K_RETURN
# Did you mean?  Unparser::NodeDetails::Send::K_RETRY
#                Unparser::NodeDetails::K_RETRY
# uninitialized constant Unparser::NodeDetails::Send::K_SELF
# Did you mean?  Unparser::NodeDetails::Send::K_DEF
#                Unparser::NodeDetails::K_DEF
# uninitialized constant Unparser::NodeDetails::Send::K_SUPER
# Did you mean?  Unparser::NodeDetails::Send::K_ENSURE
# uninitialized constant Unparser::NodeDetails::Send::K_THEN
# Did you mean?  Unparser::NodeDetails::Send::K_WHEN
#                Unparser::NodeDetails::K_WHEN
# uninitialized constant Unparser::NodeDetails::Send::K_TRUE
# Did you mean?  Unparser::NodeDetails::Send::K_THEN
# uninitialized constant Unparser::NodeDetails::Send::K_UNDEF
# Did you mean?  Unparser::NodeDetails::Send::K_DEF
#                Unparser::NodeDetails::K_DEF
# uninitialized constant Unparser::NodeDetails::Send::K_UNLESS
# Did you mean?  Unparser::NodeDetails::Send::K_UNTIL
# uninitialized constant Unparser::NodeDetails::Send::K_UNTIL
# Did you mean?  Unparser::NodeDetails::Send::K_NIL
#                Unparser::NodeDetails::K_NIL
# uninitialized constant Unparser::NodeDetails::Send::K_WHEN
# Did you mean?  Unparser::NodeDetails::Send::K_THEN
#                Unparser::NodeDetails::K_THEN
# uninitialized constant Unparser::NodeDetails::Send::K_WHILE
# Did you mean?  Unparser::NodeDetails::Send::K_FILE
#                Unparser::NodeDetails::K_FILE
# uninitialized constant Unparser::NodeDetails::Send::K_YIELD
# uninitialized constant Unparser::NodeDetails::Send::UNARY_OPERATORS
# Did you mean?  Unparser::NodeDetails::Send::BINARY_OPERATORS
#                Unparser::NodeDetails::BINARY_OPERATORS
# uninitialized constant Unparser::Writer::Send::BINARY_OPERATORS
# Did you mean?  Unparser::Writer::Send::UNARY_OPERATORS
# uninitialized constant Unparser::Writer::Send::KEYWORDS
# uninitialized constant Unparser::Writer::Send::K_ALIAS
# Did you mean?  Unparser::Writer::Send::K_FALSE
# uninitialized constant Unparser::Writer::Send::K_AND
# Did you mean?  Unparser::Writer::Send::K_END
#                Unparser::Writer::Send::K_EEND
# uninitialized constant Unparser::Writer::Send::K_BEGIN
# uninitialized constant Unparser::Writer::Send::K_BREAK
# uninitialized constant Unparser::Writer::Send::K_CASE
# Did you mean?  Unparser::Writer::Send::K_FALSE
#                Unparser::Writer::Send::K_CLASS
# uninitialized constant Unparser::Writer::Send::K_CLASS
# Did you mean?  Class
#                Unparser::Writer::Send::K_CASE
# uninitialized constant Unparser::Writer::Send::K_DEF
# Did you mean?  Unparser::Writer::Send::K_DO
#                Unparser::Writer::Send::K_SELF
#                Unparser::Writer::Send::K_UNDEF
# uninitialized constant Unparser::Writer::Send::K_DEFINE
# Did you mean?  Unparser::Writer::Send::K_DEFINED
# uninitialized constant Unparser::Writer::Send::K_DEFINED
# uninitialized constant Unparser::Writer::Send::K_DO
# Did you mean?  Unparser::Writer::Send::K_OR
# uninitialized constant Unparser::Writer::Send::K_EEND
# Did you mean?  Unparser::Writer::Send::K_AND
#                Unparser::Writer::Send::K_END
# uninitialized constant Unparser::Writer::Send::K_ELSE
# Did you mean?  Unparser::Writer::Send::K_ELSIF
#                Unparser::Writer::Send::K_FALSE
# uninitialized constant Unparser::Writer::Send::K_ELSIF
# Did you mean?  Unparser::Writer::Send::K_ELSE
# uninitialized constant Unparser::Writer::Send::K_ENCODING
# Did you mean?  Encoding
# uninitialized constant Unparser::Writer::Send::K_END
# Did you mean?  Unparser::Writer::Send::K_AND
#                Unparser::Writer::Send::K_EEND
# uninitialized constant Unparser::Writer::Send::K_ENSURE
# Did you mean?  Unparser::Writer::Send::K_END
# uninitialized constant Unparser::Writer::Send::K_FALSE
# Did you mean?  Unparser::Writer::Send::K_FILE
#                Unparser::Writer::Send::K_ELSE
#                Unparser::Writer::Send::K_CASE
# uninitialized constant Unparser::Writer::Send::K_FILE
# Did you mean?  File
#                Unparser::Writer::Send::K_NIL
#                Unparser::Writer::Send::K_WHILE
#                Unparser::Writer::Send::K_FALSE
# uninitialized constant Unparser::Writer::Send::K_FOR
# Did you mean?  Unparser::Writer::Send::K_OR
# uninitialized constant Unparser::Writer::Send::K_IF
# Did you mean?  Unparser::Writer::Send::K_IN
# uninitialized constant Unparser::Writer::Send::K_IN
# Did you mean?  Unparser::Writer::Send::K_IF
# uninitialized constant Unparser::Writer::Send::K_MODULE
# Did you mean?  Module
# uninitialized constant Unparser::Writer::Send::K_NEXT
# Did you mean?  Unparser::Writer::Send::K_NOT
# uninitialized constant Unparser::Writer::Send::K_NIL
# Did you mean?  Unparser::Writer::Send::K_IN
#                Unparser::Writer::Send::K_FILE
#                Unparser::Writer::Send::K_UNTIL
# uninitialized constant Unparser::Writer::Send::K_NOT
# Did you mean?  Unparser::Writer::Send::K_NEXT
# uninitialized constant Unparser::Writer::Send::K_OR
# Did you mean?  Unparser::Writer::Send::K_FOR
# uninitialized constant Unparser::Writer::Send::K_POSTEXE
# uninitialized constant Unparser::Writer::Send::K_PREEXE
# uninitialized constant Unparser::Writer::Send::K_REDO
# Did you mean?  Unparser::Writer::Send::K_DO
# uninitialized constant Unparser::Writer::Send::K_RESCUE
# Did you mean?  Unparser::Writer::Send::Rescue
#                Unparser::Writer::Rescue
# uninitialized constant Unparser::Writer::Send::K_RETRY
# Did you mean?  Unparser::Writer::Send::K_RETURN
# uninitialized constant Unparser::Writer::Send::K_RETURN
# Did you mean?  Unparser::Writer::Send::K_RETRY
# uninitialized constant Unparser::Writer::Send::K_SELF
# Did you mean?  Unparser::Writer::Send::K_DEF
# uninitialized constant Unparser::Writer::Send::K_SUPER
# Did you mean?  Unparser::Writer::Send::K_ENSURE
# uninitialized constant Unparser::Writer::Send::K_THEN
# Did you mean?  Unparser::Writer::Send::K_WHEN
# uninitialized constant Unparser::Writer::Send::K_TRUE
# Did you mean?  Unparser::Writer::Send::K_THEN
# uninitialized constant Unparser::Writer::Send::K_UNDEF
# Did you mean?  Unparser::Writer::Send::K_DEF
# uninitialized constant Unparser::Writer::Send::K_UNLESS
# Did you mean?  Unparser::Writer::Send::K_UNTIL
# uninitialized constant Unparser::Writer::Send::K_UNTIL
# Did you mean?  Unparser::Writer::Send::K_NIL
# uninitialized constant Unparser::Writer::Send::K_WHEN
# Did you mean?  Unparser::Writer::Send::K_THEN
# uninitialized constant Unparser::Writer::Send::K_WHILE
# Did you mean?  Unparser::Writer::Send::K_FILE
# uninitialized constant Unparser::Writer::Send::K_YIELD
# uninitialized constant Unparser::Writer::Send::UNARY_OPERATORS
# Did you mean?  Unparser::Writer::Send::BINARY_OPERATORS
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name link_completions
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name link_docs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name link_manpages
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unlink_completions
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unlink_manpages
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name popen
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name popen_read
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name popen_write
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name safe_popen_read
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name safe_popen_write
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Vector
# uninitialized constant Vector
# wrong constant name _rack_setup_header
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name rack
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name rack=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant WebRobots::RobotsTxt::Parser::Racc_Main_Parsing_Routine
# uninitialized constant WebRobots::RobotsTxt::Parser::Racc_Runtime_Core_Id_C
# Did you mean?  WebRobots::RobotsTxt::Parser::Racc_Runtime_Core_Version_C
# uninitialized constant WebRobots::RobotsTxt::Parser::Racc_Runtime_Core_Version
# Did you mean?  WebRobots::RobotsTxt::Parser::Racc_Runtime_Core_Version_R
#                WebRobots::RobotsTxt::Parser::Racc_Runtime_Core_Version_C
#                WebRobots::RobotsTxt::Parser::Racc_Runtime_Version
#                WebRobots::RobotsTxt::Parser::Racc_Runtime_Core_Id_C
# uninitialized constant WebRobots::RobotsTxt::Parser::Racc_Runtime_Core_Version_C
# Did you mean?  WebRobots::RobotsTxt::Parser::Racc_Runtime_Core_Version_R
#                WebRobots::RobotsTxt::Parser::Racc_Runtime_Version
#                WebRobots::RobotsTxt::Parser::Racc_Runtime_Core_Id_C
# uninitialized constant WebRobots::RobotsTxt::Parser::Racc_Runtime_Core_Version_R
# Did you mean?  WebRobots::RobotsTxt::Parser::Racc_Runtime_Core_Version_C
#                WebRobots::RobotsTxt::Parser::Racc_Runtime_Version
#                WebRobots::RobotsTxt::Parser::Racc_Runtime_Core_Id_C
# uninitialized constant WebRobots::RobotsTxt::Parser::Racc_Runtime_Type
# Did you mean?  WebRobots::RobotsTxt::Parser::Racc_Runtime_Version
# uninitialized constant WebRobots::RobotsTxt::Parser::Racc_Runtime_Version
# Did you mean?  WebRobots::RobotsTxt::Parser::Racc_Runtime_Core_Version
# uninitialized constant WebRobots::RobotsTxt::Parser::Racc_YY_Parse_Method
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name zcat
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
